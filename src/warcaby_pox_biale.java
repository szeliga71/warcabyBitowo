import java.util.Scanner;

public class warcaby_pox_biale {

    public static int sprBdamki(long b_a,long b_b,long c_a,long c_b,int glo_xx){
        int h = 2;
        int p = 0;
        int glo_bb=0;

        if (glo_xx==0){
        glo_bb=0;}
        else {
        glo_bb=2;}

        int bb=0;
        while (h == 2) {
            p++;


            for (int i = 0; i < 6; i++) {


                for (int j = 0; j < 6; j++) {


                    if (((((b_a >> ((i % 6) * 9)) >> 3) & 0b111) + p) == (((b_a >> ((j % 6) * 9)) >> 3) & 0b111) && (((b_a >> ((i % 6) * 9)) & 0b111) + p) == ((b_a >> ((j % 6) * 9)) & 0b111) && ((((b_a >> ((i % 6) * 9)) >> 7) & 0b11) == 0b11)&&(((((b_a >> ((j % 6) * 9)) >> 8) & 0b1) == 0b1))) {
                        System.out.println(" swoj nie bijemy1");
                        h = 1;
                    }
                    if (((((b_a >> ((i % 6) * 9)) >> 3) & 0b111) + p) == (((b_b >> ((j % 6) * 9)) >> 3) & 0b111) && (((b_a >> ((i % 6) * 9)) & 0b111) + p) == ((b_b >> ((j % 6) * 9)) & 0b111) && ((((b_a >> ((i % 6) * 9)) >> 7) & 0b11) == 0b11)&&(((((b_b >> ((j % 6) * 9)) >> 8) & 0b1) == 0b1))) {
                        System.out.println(" swoj nie bijemy2");
                        h = 1;
                    } else {

                        if (((((b_a >> ((i % 6) * 9)) >> 3) & 0b111) + p) == (((c_a >> ((j % 6) * 9)) >> 3) & 0b111) && (((b_a >> ((i % 6) * 9)) & 0b111) + p) == ((c_a >> ((j % 6) * 9)) & 0b111) && ((((b_a >> ((i % 6) * 9)) >> 7) & 0b11) == 0b11)&&(((((c_a >> ((j % 6) * 9)) >> 8) & 0b1) == 0b1))) {
                            System.out.println(" wrog na linii 1");
                            if (((((b_a >> ((i % 6) * 9)) >> 3) & 0b111) + p) < 7 && ((((b_a >> ((i % 6) * 9)) & 0b111) + p < 7))) {
                                h = 1;

                                //sprawdzic pole za nim czy wolne

                                for (int k = 0; k < 6; k++) {
                                    for (int l = 0; l < 6; l++) {
                                        if (((((b_a >> ((k % 6) * 9)) >> 3) & 0b111) + (p + 1)) == (((c_a >> ((l % 6) * 9)) >> 3) & 0b111) && (((b_a >> ((k % 6) * 9)) & 0b111) + (p + 1)) == ((c_a >> ((l % 6) * 9)) & 0b111) && ((((b_a >> ((k % 6) * 9)) >> 7) & 0b11) == 0b11)) {
                                            System.out.println("nie ma bicia");
                                            h = 0;
                                        }
                                        if (((((b_a >> ((k % 6) * 9)) >> 3) & 0b111) + (p + 1)) == (((c_b >> ((l % 6) * 9)) >> 3) & 0b111) && (((b_a >> ((k % 6) * 9)) & 0b111) + (p + 1)) == ((c_b >> ((l % 6) * 9)) & 0b111) && ((((b_a >> ((k % 6) * 9)) >> 7) & 0b11) == 0b11)) {
                                            System.out.println("nie ma bicia");

                                            h = 0;
                                        }
                                        if (((((b_a >> ((k % 6) * 9)) >> 3) & 0b111) + (p + 1)) == (((b_a >> ((l % 6) * 9)) >> 3) & 0b111) && (((b_a >> ((k % 6) * 9)) & 0b111) + (p + 1)) == ((b_a >> ((l % 6) * 9)) & 0b111) && ((((b_a >> ((k % 6) * 9)) >> 7) & 0b11) == 0b11)) {
                                            System.out.println("nie ma bicia");

                                            h = 0;
                                        }

                                        if (((((b_a >> ((k % 6) * 9)) >> 3) & 0b111) + (p + 1)) == (((b_b >> ((l % 6) * 9)) >> 3) & 0b111) && (((b_a >> ((k % 6) * 9)) & 0b111) + (p + 1)) == ((b_b >> ((l % 6) * 9)) & 0b111) && ((((b_a >> ((k % 6) * 9)) >> 7) & 0b11) == 0b11)) {
                                            System.out.println("nie ma bicia");

                                            h = 0;
                                        }

                                    }

                                }
                                if (h == 1) {
                                    System.out.println("bicie z pozycji A3" + (((b_a >> ((i % 6) * 9)) & 0b111) + 1) + "," + ((((b_a >> ((i % 6) * 9)) >> 3) & 0b111) + 1));
                                    glo_bb = glo_bb + 2;
                                    bb=bb+1;
                                }
                            } else {
                                h = 0;
                                bb=0;
                            }

                        } else if (((((b_a >> ((i % 6) * 9)) >> 3) & 0b111) + p) == (((c_b >> ((j % 6) * 9)) >> 3) & 0b111) && (((b_a >> ((i % 6) * 9)) & 0b111) + p) == ((c_b >> ((j % 6) * 9)) & 0b111) && ((((b_a >> ((i % 6) * 9)) >> 7) & 0b11) == 0b11)&&(((((c_b >> ((j % 6) * 9)) >> 8) & 0b1) == 0b1))) {
                            System.out.println(" wrog na linii 2");
                            if (((((b_a >> ((i % 6) * 9)) >> 3) & 0b111) + p) < 7 && ((((b_a >> ((i % 6) * 9)) & 0b111) + p < 7))) {
                                h = 1;
                                //sprawdzic pole za nim czy wolne
                                for (int k = 0; k < 6; k++) {
                                    for (int l = 0; l < 6; l++) {
                                        if (((((b_a >> ((k % 6) * 9)) >> 3) & 0b111) + (p + 1)) == (((c_a >> ((l % 6) * 9)) >> 3) & 0b111) && (((b_a >> ((k % 6) * 9)) & 0b111) + (p + 1)) == ((c_a >> ((l % 6) * 9)) & 0b111) && ((((b_a >> ((k % 6) * 9)) >> 7) & 0b11) == 0b11)) {
                                            System.out.println("nie ma bicia");
                                            h = 0;
                                        }
                                        if (((((b_a >> ((k % 6) * 9)) >> 3) & 0b111) + (p + 1)) == (((c_b >> ((l % 6) * 9)) >> 3) & 0b111) && (((b_a >> ((k % 6) * 9)) & 0b111) + (p + 1)) == ((c_b >> ((l % 6) * 9)) & 0b111) && ((((b_a >> ((k % 6) * 9)) >> 7) & 0b11) == 0b11)) {
                                            System.out.println("nie ma bicia");

                                            h = 0;
                                        }
                                        if (((((b_a >> ((k % 6) * 9)) >> 3) & 0b111) + (p + 1)) == (((b_a >> ((l % 6) * 9)) >> 3) & 0b111) && (((b_a >> ((k % 6) * 9)) & 0b111) + (p + 1)) == ((b_a >> ((l % 6) * 9)) & 0b111) && ((((b_a >> ((k % 6) * 9)) >> 7) & 0b11) == 0b11)) {
                                            System.out.println("nie ma bicia");

                                            h = 0;
                                        }

                                        if (((((b_a >> ((k % 6) * 9)) >> 3) & 0b111) + (p + 1)) == (((b_b >> ((l % 6) * 9)) >> 3) & 0b111) && (((b_a >> ((k % 6) * 9)) & 0b111) + (p + 1)) == ((b_b >> ((l % 6) * 9)) & 0b111) && ((((b_a >> ((k % 6) * 9)) >> 7) & 0b11) == 0b11)) {
                                            System.out.println("nie ma bicia");

                                            h = 0;
                                        }

                                    }
                                }

                                if (h == 1) {
                                    System.out.println("bicie z pozycji B3 " + (((b_a >> ((i % 6) * 9)) & 0b111) + 1) + "," + ((((b_a >> ((i % 6) * 9)) >> 3) & 0b111) + 1));
                                    glo_bb = glo_bb + 2;
                                    bb=bb+1;
                                }
                            } else {
                                h = 0;
                                bb=0;
                            }
                        }
                    }
                }
            }
            if (p == 8)
                h = 0;
        }
        h = 2;
        p = 0;
        while (h == 2) {
            p++;


            for (int i = 0; i < 6; i++) {

                for (int j = 0; j < 6; j++) {


                    if (((((b_a >> ((i % 6) * 9)) >> 3) & 0b111) + p) == (((b_a >> ((j % 6) * 9)) >> 3) & 0b111) && (((b_a >> ((i % 6) * 9)) & 0b111) - p) == ((b_a >> ((j % 6) * 9)) & 0b111) && ((((b_a >> ((i % 6) * 9)) >> 7) & 0b11) == 0b11)&&(((((b_a >> ((j % 6) * 9)) >> 8) & 0b1) == 0b1))) {
                        System.out.println(" swoj nie bijemy3");
                        h = 1;
                    }
                    if (((((b_a >> ((i % 6) * 9)) >> 3) & 0b111) + p) == (((b_b >> ((j % 6) * 9)) >> 3) & 0b111) && (((b_a >> ((i % 6) * 9)) & 0b111) - p) == ((b_b >> ((j % 6) * 9)) & 0b111) && ((((b_a >> ((i % 6) * 9)) >> 7) & 0b11) == 0b11)&&(((((b_b >> ((j % 6) * 9)) >> 8) & 0b1) == 0b1))) {
                        System.out.println(" swoj nie bijemy4");
                        h = 1;
                    } else {
                        if (((((b_a >> ((i % 6) * 9)) >> 3) & 0b111) + p) == (((c_a >> ((j % 6) * 9)) >> 3) & 0b111) && (((b_a >> ((i % 6) * 9)) & 0b111) - p) == ((c_a >> ((j % 6) * 9)) & 0b111) && ((((b_a >> ((i % 6) * 9)) >> 7) & 0b11) == 0b11)&&(((((c_a >> ((j % 6) * 9)) >> 8) & 0b1) == 0b1))) {

                            System.out.println(" wrog na linii 3");
                            if (((((b_a >> ((i % 6) * 9)) >> 3) & 0b111) + p) < 7 && ((((b_a >> ((i % 6) * 9)) & 0b111) - p > 0))) {
                                h = 1;
                                for (int k = 0; k < 6; k++) {
                                    for (int l = 0; l < 6; l++) {
                                        if (((((b_a >> ((k % 6) * 9)) >> 3) & 0b111) + (p + 1)) == (((c_a >> ((l % 6) * 9)) >> 3) & 0b111) && (((b_a >> ((k % 6) * 9)) & 0b111) - (p + 1)) == ((c_a >> ((l % 6) * 9)) & 0b111) && ((((b_a >> ((k % 6) * 9)) >> 7) & 0b11) == 0b11)) {
                                            System.out.println("nie ma bicia");
                                            h = 0;

                                        }
                                        if (((((b_a >> ((k % 6) * 9)) >> 3) & 0b111) + (p + 1)) == (((c_b >> ((l % 6) * 9)) >> 3) & 0b111) && (((b_a >> ((k % 6) * 9)) & 0b111) - (p + 1)) == ((c_b >> ((l % 6) * 9)) & 0b111) && ((((b_a >> ((k % 6) * 9)) >> 7) & 0b11) == 0b11)) {
                                            System.out.println("nie ma bicia");
                                            h = 0;
                                        }
                                        if (((((b_a >> ((k % 6) * 9)) >> 3) & 0b111) + (p + 1)) == (((b_a >> ((l % 6) * 9)) >> 3) & 0b111) && (((b_a >> ((k % 6) * 9)) & 0b111) - (p + 1)) == ((b_a >> ((l % 6) * 9)) & 0b111) && ((((b_a >> ((k % 6) * 9)) >> 7) & 0b11) == 0b11)) {
                                            System.out.println("nie ma bicia");
                                            h = 0;
                                        }

                                        if (((((b_a >> ((k % 6) * 9)) >> 3) & 0b111) + (p + 1)) == (((b_b >> ((l % 6) * 9)) >> 3) & 0b111) && (((b_a >> ((k % 6) * 9)) & 0b111) - (p + 1)) == ((b_b >> ((l % 6) * 9)) & 0b111) && ((((b_a >> ((k % 6) * 9)) >> 7) & 0b11) == 0b11)) {
                                            System.out.println("nie ma bicia");
                                            h = 0;
                                        }
                                    }
                                }
                                if (h == 1) {
                                    System.out.println("bicie z pozycji x" + (((b_a >> ((i % 6) * 9)) & 0b111) + 1) + "," + ((((b_a >> ((i % 6) * 9)) >> 3) & 0b111) + 1));
                                    glo_bb = glo_bb + 2;
                                    bb=bb+1;
                                }


                            } else {
                                h = 0;
                                bb=0;
                            }
                        } else if (((((b_a >> ((i % 6) * 9)) >> 3) & 0b111) + p) == (((c_b >> ((j % 6) * 9)) >> 3) & 0b111) && (((b_a >> ((i % 6) * 9)) & 0b111) - p) == ((c_b >> ((j % 6) * 9)) & 0b111) && ((((b_a >> ((i % 6) * 9)) >> 7) & 0b11) == 0b11)&&(((((c_b >> ((j % 6) * 9)) >> 8) & 0b1) == 0b1))) {
                            System.out.println(" wrog na linii 4");
                            if (((((b_a >> ((i % 6) * 9)) >> 3) & 0b111) + p) < 7 && ((((b_a >> ((i % 6) * 9)) & 0b111) - p > 0))) {
                                h = 1;
                                for (int k = 0; k < 6; k++) {
                                    for (int l = 0; l < 6; l++) {
                                        if (((((b_a >> ((k % 6) * 9)) >> 3) & 0b111) + (p + 1)) == (((c_a >> ((l % 6) * 9)) >> 3) & 0b111) && (((b_a >> ((k % 6) * 9)) & 0b111) - (p + 1)) == ((c_a >> ((l % 6) * 9)) & 0b111) && ((((b_a >> ((k % 6) * 9)) >> 7) & 0b11) == 0b11)) {
                                            System.out.println("nie ma bicia");
                                            h = 0;
                                        }
                                        if (((((b_a >> ((k % 6) * 9)) >> 3) & 0b111) + (p + 1)) == (((c_b >> ((l % 6) * 9)) >> 3) & 0b111) && (((b_a >> ((k % 6) * 9)) & 0b111) - (p + 1)) == ((c_b >> ((l % 6) * 9)) & 0b111) && ((((b_a >> ((k % 6) * 9)) >> 7) & 0b11) == 0b11)) {
                                            System.out.println("nie ma bicia");
                                            h = 0;
                                        }
                                        if (((((b_a >> ((k % 6) * 9)) >> 3) & 0b111) + (p + 1)) == (((b_a >> ((l % 6) * 9)) >> 3) & 0b111) && (((b_a >> ((k % 6) * 9)) & 0b111) - (p + 1)) == ((b_a >> ((l % 6) * 9)) & 0b111) && ((((b_a >> ((k % 6) * 9)) >> 7) & 0b11) == 0b11)) {
                                            System.out.println("nie ma bicia");
                                            h = 0;
                                        }

                                        if (((((b_a >> ((k % 6) * 9)) >> 3) & 0b111) + (p + 1)) == (((b_b >> ((l % 6) * 9)) >> 3) & 0b111) && (((b_a >> ((k % 6) * 9)) & 0b111) - (p + 1)) == ((b_b >> ((l % 6) * 9)) & 0b111) && ((((b_a >> ((k % 6) * 9)) >> 7) & 0b11) == 0b11)) {
                                            System.out.println("nie ma bicia");
                                            h = 0;
                                        }
                                    }
                                }
                                if (h == 1) {
                                    System.out.println("bicie z pozycji v" + (((b_a >> ((i % 6) * 9)) & 0b111) + 1) + "," + ((((b_a >> ((i % 6) * 9)) >> 3) & 0b111) + 1));
                                    glo_bb = glo_bb + 2;
                                    bb=bb+1;
                                }


                            } else {
                                h = 0;
                                bb=0;
                            }
                        }


                    }
                }
            }
            if (p == 8)
                h = 0;
        }

        //;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

        h = 2;
        p = 0;
        while (h == 2) {
            p++;

            for (int i = 0; i < 6; i++) {

                for (int j = 0; j < 6; j++) {


                    if (((((b_a >> ((i % 6) * 9)) >> 3) & 0b111) - p) == (((b_a >> ((j % 6) * 9)) >> 3) & 0b111) && (((b_a >> ((i % 6) * 9)) & 0b111) + p) == ((b_a >> ((j % 6) * 9)) & 0b111) && ((((b_a >> ((i % 6) * 9)) >> 7) & 0b11) == 0b11)&&(((((b_a >> ((j % 6) * 9)) >> 8) & 0b1) == 0b1))) {
                        System.out.println(" swoj nie bijemy5");
                        h = 1;
                    }
                    if (((((b_a >> ((i % 6) * 9)) >> 3) & 0b111) - p) == (((b_b >> ((j % 6) * 9)) >> 3) & 0b111) && (((b_a >> ((i % 6) * 9)) & 0b111) + p) == ((b_b >> ((j % 6) * 9)) & 0b111) && ((((b_a >> ((i % 6) * 9)) >> 7) & 0b11) == 0b11)&&(((((b_b >> ((j % 6) * 9)) >> 8) & 0b1) == 0b1))) {
                        System.out.println(" swoj nie bijemy6");
                        h = 1;
                    } else {
                        if (((((b_a >> ((i % 6) * 9)) >> 3) & 0b111) - p) == (((c_a >> ((j % 6) * 9)) >> 3) & 0b111) && (((b_a >> ((i % 6) * 9)) & 0b111) + p) == ((c_a >> ((j % 6) * 9)) & 0b111) && ((((b_a >> ((i % 6) * 9)) >> 7) & 0b11) == 0b11)&&(((((c_a >> ((j % 6) * 9)) >> 8) & 0b1) == 0b1))) {
                            System.out.println(" wrog na linii 5");
                            if ((((b_a >> ((i % 6) * 9)) >> 3) & 0b111) - p > 0 && ((((b_a >> ((i % 6) * 9)) & 0b111) + p < 7))) {
                                h = 1;
                                for (int k = 0; k < 6; k++) {
                                    for (int l = 0; l < 6; l++) {
                                        if (((((b_a >> ((k % 6) * 9)) >> 3) & 0b111) - (p + 1)) == (((c_a >> ((l % 6) * 9)) >> 3) & 0b111) && (((b_a >> ((k % 6) * 9)) & 0b111) + (p + 1)) == ((c_a >> ((l % 6) * 9)) & 0b111) && ((((b_a >> ((k % 6) * 9)) >> 7) & 0b11) == 0b11)) {
                                            System.out.println("nie ma bicia");
                                            h = 0;
                                        }
                                        if (((((b_a >> ((k % 6) * 9)) >> 3) & 0b111) - (p + 1)) == (((c_b >> ((l % 6) * 9)) >> 3) & 0b111) && (((b_a >> ((k % 6) * 9)) & 0b111) + (p + 1)) == ((c_b >> ((l % 6) * 9)) & 0b111) && ((((b_a >> ((k % 6) * 9)) >> 7) & 0b11) == 0b11)) {
                                            System.out.println("nie ma bicia");
                                            h = 0;
                                        }
                                        if (((((b_a >> ((k % 6) * 9)) >> 3) & 0b111) - (p + 1)) == (((b_a >> ((l % 6) * 9)) >> 3) & 0b111) && (((b_a >> ((k % 6) * 9)) & 0b111) + (p + 1)) == ((b_a >> ((l % 6) * 9)) & 0b111) && ((((b_a >> ((k % 6) * 9)) >> 7) & 0b11) == 0b11)) {
                                            System.out.println("nie ma bicia");
                                            h = 0;
                                        }

                                        if (((((b_a >> ((k % 6) * 9)) >> 3) & 0b111) - (p + 1)) == (((b_b >> ((l % 6) * 9)) >> 3) & 0b111) && (((b_a >> ((k % 6) * 9)) & 0b111) + (p + 1)) == ((b_b >> ((l % 6) * 9)) & 0b111) && ((((b_a >> ((k % 6) * 9)) >> 7) & 0b11) == 0b11)) {
                                            System.out.println("nie ma bicia");
                                            h = 0;
                                        }
                                    }
                                }
                                if (h == 1) {
                                    System.out.println("bicie z pozycji nn" + (((b_a >> ((i % 6) * 9)) & 0b111) + 1) + "," + ((((b_a >> ((i % 6) * 9)) >> 3) & 0b111) + 1));
                                    glo_bb = glo_bb + 2;
                                    bb=bb+1;
                                }
                            } else {
                                h = 0;
                                bb=0;
                            }
                        } else if (((((b_a >> ((i % 6) * 9)) >> 3) & 0b111) - p) == (((c_b >> ((j % 6) * 9)) >> 3) & 0b111) && (((b_a >> ((i % 6) * 9)) & 0b111) + p) == ((c_b >> ((j % 6) * 9)) & 0b111) && ((((b_a >> ((i % 6) * 9)) >> 7) & 0b11) == 0b11)&&(((((c_b >> ((j % 6) * 9)) >> 8) & 0b1) == 0b1))) {
                            System.out.println(" wrog na linii 6");
                            if (((((b_a >> ((i % 6) * 9)) >> 3) & 0b111) - p) > 0 && ((((b_a >> ((i % 6) * 9)) & 0b111) + p < 7))) {
                                h = 1;
                                for (int k = 0; k < 6; k++) {
                                    for (int l = 0; l < 6; l++) {
                                        if (((((b_a >> ((k % 6) * 9)) >> 3) & 0b111) - (p + 1)) == (((c_a >> ((l % 6) * 9)) >> 3) & 0b111) && (((b_a >> ((k % 6) * 9)) & 0b111) + (p + 1)) == ((c_a >> ((l % 6) * 9)) & 0b111) && ((((b_a >> ((k % 6) * 9)) >> 7) & 0b11) == 0b11)) {
                                            System.out.println("nie ma bicia");
                                            h = 0;
                                        }
                                        if (((((b_a >> ((k % 6) * 9)) >> 3) & 0b111) - (p + 1)) == (((c_b >> ((l % 6) * 9)) >> 3) & 0b111) && (((b_a >> ((k % 6) * 9)) & 0b111) + (p + 1)) == ((c_b >> ((l % 6) * 9)) & 0b111) && ((((b_a >> ((k % 6) * 9)) >> 7) & 0b11) == 0b11)) {
                                            System.out.println("nie ma bicia");
                                            h = 0;
                                        }
                                        if (((((b_a >> ((k % 6) * 9)) >> 3) & 0b111) - (p + 1)) == (((b_a >> ((l % 6) * 9)) >> 3) & 0b111) && (((b_a >> ((k % 6) * 9)) & 0b111) + (p + 1)) == ((b_a >> ((l % 6) * 9)) & 0b111) && ((((b_a >> ((k % 6) * 9)) >> 7) & 0b11) == 0b11)) {
                                            System.out.println("nie ma bicia");
                                            h = 0;
                                        }

                                        if (((((b_a >> ((k % 6) * 9)) >> 3) & 0b111) - (p + 1)) == (((b_b >> ((l % 6) * 9)) >> 3) & 0b111) && (((b_a >> ((k % 6) * 9)) & 0b111) + (p + 1)) == ((b_b >> ((l % 6) * 9)) & 0b111) && ((((b_a >> ((k % 6) * 9)) >> 7) & 0b11) == 0b11)) {
                                            System.out.println("nie ma bicia");
                                            h = 0;
                                        }
                                    }
                                }
                                if (h == 1) {
                                    System.out.println("bicie z pozycji kk" + (((b_a >> ((i % 6) * 9)) & 0b111) + 1) + "," + ((((b_a >> ((i % 6) * 9)) >> 3) & 0b111) + 1));
                                    glo_bb = glo_bb + 2;
                                    bb=bb+1;

                                }

                            } else {
                                h = 0;
                                bb=0;
                            }
                        }
                    }
                }
            }
            if (p == 8)
                h = 0;
        }


        //;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
        h = 2;
        p = 0;
        while (h == 2) {
            p++;


            for (int i = 0; i < 6; i++) {


                for (int j = 0; j < 6; j++) {


                    if (((((b_a >> ((i % 6) * 9)) >> 3) & 0b111) - p) == (((b_a >> ((j % 6) * 9)) >> 3) & 0b111) && (((b_a >> ((i % 6) * 9)) & 0b111) - p) == ((b_a >> ((j % 6) * 9)) & 0b111) && ((((b_a >> ((i % 6) * 9)) >> 7) & 0b11) == 0b11)&&(((((b_a >> ((j % 6) * 9)) >> 8) & 0b1) == 0b1))) {
                        System.out.println(" swoj nie bijemy7");
                        h = 0;
                    }
                    if (((((b_a >> ((i % 6) * 9)) >> 3) & 0b111) - p) == (((b_b >> ((j % 6) * 9)) >> 3) & 0b111) && (((b_a >> ((i % 6) * 9)) & 0b111) - p) == ((b_b >> ((j % 6) * 9)) & 0b111) && ((((b_a >> ((i % 6) * 9)) >> 7) & 0b11) == 0b11)&&(((((b_b >> ((j % 6) * 9)) >> 8) & 0b1) == 0b1))) {
                        System.out.println(" swoj nie bijemy8");
                        h = 0;
                    } else {
                        if (((((b_a >> ((i % 6) * 9)) >> 3) & 0b111) - p) == (((c_a >> ((j % 6) * 9)) >> 3) & 0b111) && (((b_a >> ((i % 6) * 9)) & 0b111) - p) == ((c_a >> ((j % 6) * 9)) & 0b111) && ((((b_a >> ((i % 6) * 9)) >> 7) & 0b11) == 0b11)&&(((((c_a >> ((j % 6) * 9)) >> 8) & 0b1) == 0b1))) {
                            System.out.println(" wrog na linii 7");
                            if ((((b_a >> ((i % 6) * 9)) >> 3) & 0b111) - p > 0 && ((((b_a >> ((i % 6) * 9)) & 0b111) - p > 0))) {
                                h = 1;
                                for (int k = 0; k < 6; k++) {
                                    for (int l = 0; l < 6; l++) {
                                        if (((((b_a >> ((k % 6) * 9)) >> 3) & 0b111) - (p + 1)) == (((c_a >> ((l % 6) * 9)) >> 3) & 0b111) && (((b_a >> ((k % 6) * 9)) & 0b111) - (p + 1)) == ((c_a >> ((l % 6) * 9)) & 0b111) && ((((b_a >> ((k % 6) * 9)) >> 7) & 0b11) == 0b11)) {
                                            System.out.println("nie ma bicia");
                                            h = 0;
                                        }
                                        if (((((b_a >> ((k % 6) * 9)) >> 3) & 0b111) - (p + 1)) == (((c_b >> ((l % 6) * 9)) >> 3) & 0b111) && (((b_a >> ((k % 6) * 9)) & 0b111) - (p + 1)) == ((c_b >> ((l % 6) * 9)) & 0b111) && ((((b_a >> ((k % 6) * 9)) >> 7) & 0b11) == 0b11)) {
                                            System.out.println("nie ma bicia");
                                            h = 0;
                                        }
                                        if (((((b_a >> ((k % 6) * 9)) >> 3) & 0b111) - (p + 1)) == (((b_a >> ((l % 6) * 9)) >> 3) & 0b111) && (((b_a >> ((k % 6) * 9)) & 0b111) - (p + 1)) == ((b_a >> ((l % 6) * 9)) & 0b111) && ((((b_a >> ((k % 6) * 9)) >> 7) & 0b11) == 0b11)) {
                                            System.out.println("nie ma bicia");
                                            h = 0;
                                        }

                                        if (((((b_a >> ((k % 6) * 9)) >> 3) & 0b111) - (p + 1)) == (((b_b >> ((l % 6) * 9)) >> 3) & 0b111) && (((b_a >> ((k % 6) * 9)) & 0b111) - (p + 1)) == ((b_b >> ((l % 6) * 9)) & 0b111) && ((((b_a >> ((k % 6) * 9)) >> 7) & 0b11) == 0b11)) {
                                            System.out.println("nie ma bicia");
                                            h = 0;
                                        }
                                    }
                                }
                                if (h == 1) {
                                    System.out.println("bicie z pozycji " + (((b_a >> ((i % 6) * 9)) & 0b111) + 1) + "," + ((((b_a >> ((i % 6) * 9)) >> 3) & 0b111) + 1));
                                    glo_bb = glo_bb + 2;
                                    bb=bb+1;
                                }
                            } else {
                                h = 0;
                                bb=0;
                            }
                        } else if (((((b_a >> ((i % 6) * 9)) >> 3) & 0b111) - p) == (((c_b >> ((j % 6) * 9)) >> 3) & 0b111) && (((b_a >> ((i % 6) * 9)) & 0b111) - p) == ((c_b >> ((j % 6) * 9)) & 0b111) && ((((b_a >> ((i % 6) * 9)) >> 7) & 0b11) == 0b11)&&(((((c_b >> ((j % 6) * 9)) >> 8) & 0b1) == 0b1))) {
                            System.out.println(" wrog na linii 8");
                            if ((((b_a >> ((i % 6) * 9)) >> 3) & 0b111) - p > 0 && ((((b_a >> ((i % 6) * 9)) & 0b111) - p > 0))) {
                                h = 1;
                                for (int k = 0; k < 6; k++) {
                                    for (int l = 0; l < 6; l++) {
                                        if (((((b_a >> ((k % 6) * 9)) >> 3) & 0b111) - (p + 1)) == (((c_a >> ((l % 6) * 9)) >> 3) & 0b111) && (((b_a >> ((k % 6) * 9)) & 0b111) - (p + 1)) == ((c_a >> ((l % 6) * 9)) & 0b111) && ((((b_a >> ((k % 6) * 9)) >> 7) & 0b11) == 0b11)) {
                                            System.out.println("nie ma bicia");
                                            h = 0;
                                        }
                                        if (((((b_a >> ((k % 6) * 9)) >> 3) & 0b111) - (p + 1)) == (((c_b >> ((l % 6) * 9)) >> 3) & 0b111) && (((b_a >> ((k % 6) * 9)) & 0b111) - (p + 1)) == ((c_b >> ((l % 6) * 9)) & 0b111) && ((((b_a >> ((k % 6) * 9)) >> 7) & 0b11) == 0b11)) {
                                            System.out.println("nie ma bicia");
                                            h = 0;
                                        }
                                        if (((((b_a >> ((k % 6) * 9)) >> 3) & 0b111) - (p + 1)) == (((b_a >> ((l % 6) * 9)) >> 3) & 0b111) && (((b_a >> ((k % 6) * 9)) & 0b111) - (p + 1)) == ((b_a >> ((l % 6) * 9)) & 0b111) && ((((b_a >> ((k % 6) * 9)) >> 7) & 0b11) == 0b11)) {
                                            System.out.println("nie ma bicia");
                                            h = 0;
                                        }

                                        if (((((b_a >> ((k % 6) * 9)) >> 3) & 0b111) - (p + 1)) == (((b_b >> ((l % 6) * 9)) >> 3) & 0b111) && (((b_a >> ((k % 6) * 9)) & 0b111) - (p + 1)) == ((b_b >> ((l % 6) * 9)) & 0b111) && ((((b_a >> ((k % 6) * 9)) >> 7) & 0b11) == 0b11)) {
                                            System.out.println("nie ma bicia");
                                            h = 0;
                                        }
                                    }
                                }
                                if (h == 1) {
                                    System.out.println("bicie z pozycji " + (((b_a >> ((i % 6) * 9)) & 0b111) + 1) + "," + ((((b_a >> ((i % 6) * 9)) >> 3) & 0b111) + 1));
                                    glo_bb = glo_bb + 2;
                                    bb=bb+1;
                                }


                            } else {
                                h = 0;
                                bb=0;
                            }
                        }
                    }
                }
            }
            if (p == 8)
                h = 0;
        }


        //;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
        h = 2;
        p = 0;
        while (h == 2) {
            p++;


            for (int i = 0; i < 6; i++) {


                for (int j = 0; j < 6; j++) {


                    if (((((b_b >> ((i % 6) * 9)) >> 3) & 0b111) + p) == (((b_a >> ((j % 6) * 9)) >> 3) & 0b111) && (((b_b >> ((i % 6) * 9)) & 0b111) + p) == ((b_a >> ((j % 6) * 9)) & 0b111) && ((((b_b >> ((i % 6) * 9)) >> 7) & 0b11) == 0b11)&&(((((b_a >> ((j % 6) * 9)) >> 8) & 0b1) == 0b1))) {
                        System.out.println(" swoj nie bijemy9");
                        h = 0;
                    }
                    if (((((b_b >> ((i % 6) * 9)) >> 3) & 0b111) + p) == (((b_b >> ((j % 6) * 9)) >> 3) & 0b111) && (((b_b >> ((i % 6) * 9)) & 0b111) + p) == ((b_b >> ((j % 6) * 9)) & 0b111) && ((((b_b >> ((i % 6) * 9)) >> 7) & 0b11) == 0b11)&&(((((b_b >> ((j % 6) * 9)) >> 8) & 0b1) == 0b1))) {
                        System.out.println(" swoj nie bijemy10");
                        h = 0;
                    } else {
                        if (((((b_b >> ((i % 6) * 9)) >> 3) & 0b111) + p) == (((c_a >> ((j % 6) * 9)) >> 3) & 0b111) && (((b_b >> ((i % 6) * 9)) & 0b111) + p) == ((c_a >> ((j % 6) * 9)) & 0b111) && ((((b_b >> ((i % 6) * 9)) >> 7) & 0b11) == 0b11)&&(((((c_a >> ((j % 6) * 9)) >> 8) & 0b1) == 0b1))) {
                            System.out.println(" wrog na linii 9");
                            if (((((b_b >> ((i % 6) * 9)) >> 3) & 0b111) + p) < 7 && ((((b_b >> ((i % 6) * 9)) & 0b111) + p < 7))) {
                                h = 1;
                                for (int k = 0; k < 6; k++) {
                                    for (int l = 0; l < 6; l++) {
                                        if (((((b_b >> ((k % 6) * 9)) >> 3) & 0b111) + (p + 1)) == (((c_a >> ((l % 6) * 9)) >> 3) & 0b111) && (((b_b >> ((k % 6) * 9)) & 0b111) + (p + 1)) == ((c_a >> ((l % 6) * 9)) & 0b111) && ((((b_b >> ((k % 6) * 9)) >> 7) & 0b11) == 0b11)) {
                                            System.out.println("nie ma bicia");
                                            h = 0;
                                        }
                                        if (((((b_b >> ((k % 6) * 9)) >> 3) & 0b111) + (p + 1)) == (((c_b >> ((l % 6) * 9)) >> 3) & 0b111) && (((b_b >> ((k % 6) * 9)) & 0b111) + (p + 1)) == ((c_b >> ((l % 6) * 9)) & 0b111) && ((((b_b >> ((k % 6) * 9)) >> 7) & 0b11) == 0b11)) {
                                            System.out.println("nie ma bicia");
                                            h = 0;
                                        }
                                        if (((((b_b >> ((k % 6) * 9)) >> 3) & 0b111) + (p + 1)) == (((b_a >> ((l % 6) * 9)) >> 3) & 0b111) && (((b_b >> ((k % 6) * 9)) & 0b111) + (p + 1)) == ((b_a >> ((l % 6) * 9)) & 0b111) && ((((b_b >> ((k % 6) * 9)) >> 7) & 0b11) == 0b11)) {
                                            System.out.println("nie ma bicia");
                                            h = 0;
                                        }

                                        if (((((b_b >> ((k % 6) * 9)) >> 3) & 0b111) + (p + 1)) == (((b_b >> ((l % 6) * 9)) >> 3) & 0b111) && (((b_b >> ((k % 6) * 9)) & 0b111) + (p + 1)) == ((b_b >> ((l % 6) * 9)) & 0b111) && ((((b_b >> ((k % 6) * 9)) >> 7) & 0b11) == 0b11)) {
                                            System.out.println("nie ma bicia");
                                            h = 0;
                                        }
                                    }
                                }
                                if (h == 1) {
                                    System.out.println("bicie z pozycji " + (((b_b >> ((i % 6) * 9)) & 0b111) + 1) + "," + ((((b_b >> ((i % 6) * 9)) >> 3) & 0b111) + 1));
                                    glo_bb = glo_bb + 2;
                                    bb=bb+1;
                                }
                            } else {
                                h = 0;
                                bb=0;
                            }
                            //;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


                        } else if (((((b_b >> ((i % 6) * 9)) >> 3) & 0b111) + p) == (((c_b >> ((j % 6) * 9)) >> 3) & 0b111) && (((b_b >> ((i % 6) * 9)) & 0b111) + p) == ((c_b >> ((j % 6) * 9)) & 0b111) && ((((b_b >> ((i % 6) * 9)) >> 7) & 0b11) == 0b11)&&(((((c_b >> ((j % 6) * 9)) >> 8) & 0b1) == 0b1))) {
                            System.out.println(" wrog na linii 10");
                            if (((((b_b >> ((i % 6) * 9)) >> 3) & 0b111) + p) < 7 && ((((b_b >> ((i % 6) * 9)) & 0b111) + p < 7))) {
                                h = 1;
                                for (int k = 0; k < 6; k++) {
                                    for (int l = 0; l < 6; l++) {
                                        if (((((b_b >> ((k % 6) * 9)) >> 3) & 0b111) + (p + 1)) == (((c_a >> ((l % 6) * 9)) >> 3) & 0b111) && (((b_b >> ((k % 6) * 9)) & 0b111) + (p + 1)) == ((c_a >> ((l % 6) * 9)) & 0b111) && ((((b_b >> ((k % 6) * 9)) >> 7) & 0b11) == 0b11)) {
                                            System.out.println("nie ma bicia");
                                            h = 0;
                                        }
                                        if (((((b_b >> ((k % 6) * 9)) >> 3) & 0b111) + (p + 1)) == (((c_b >> ((l % 6) * 9)) >> 3) & 0b111) && (((b_b >> ((k % 6) * 9)) & 0b111) + (p + 1)) == ((c_b >> ((l % 6) * 9)) & 0b111) && ((((b_b >> ((k % 6) * 9)) >> 7) & 0b11) == 0b11)) {
                                            System.out.println("nie ma bicia");
                                            h = 0;
                                        }
                                        if (((((b_b >> ((k % 6) * 9)) >> 3) & 0b111) + (p + 1)) == (((b_a >> ((l % 6) * 9)) >> 3) & 0b111) && (((b_b >> ((k % 6) * 9)) & 0b111) + (p + 1)) == ((b_a >> ((l % 6) * 9)) & 0b111) && ((((b_b >> ((k % 6) * 9)) >> 7) & 0b11) == 0b11)) {
                                            System.out.println("nie ma bicia");
                                            h = 0;
                                        }

                                        if (((((b_b >> ((k % 6) * 9)) >> 3) & 0b111) + (p + 1)) == (((b_b >> ((l % 6) * 9)) >> 3) & 0b111) && (((b_b >> ((k % 6) * 9)) & 0b111) + (p + 1)) == ((b_b >> ((l % 6) * 9)) & 0b111) && ((((b_b >> ((k % 6) * 9)) >> 7) & 0b11) == 0b11)) {
                                            System.out.println("nie ma bicia");
                                            h = 0;
                                        }
                                    }
                                }
                                if (h == 1) {
                                    System.out.println("bicie z pozycji " + (((b_b >> ((i % 6) * 9)) & 0b111) + 1) + "," + ((((b_b >> ((i % 6) * 9)) >> 3) & 0b111) + 1));
                                    glo_bb = glo_bb + 2;
                                    bb=bb+1;
                                }

                            } else {
                                h = 0;
                                bb=0;
                            }
                        }
                    }
                }
            }
            if (p == 8)
                h = 0;
        }

        //;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
        h = 2;
        p = 0;
        while (h == 2) {
            p++;


            for (int i = 0; i < 6; i++) {


                for (int j = 0; j < 6; j++) {
                    if (((((b_b >> ((i % 6) * 9)) >> 3) & 0b111) + p) == (((b_a >> ((j % 6) * 9)) >> 3) & 0b111) && (((b_b >> ((i % 6) * 9)) & 0b111) - p) == ((b_a >> ((j % 6) * 9)) & 0b111) && ((((b_b >> ((i % 6) * 9)) >> 7) & 0b11) == 0b11)&&(((((b_a >> ((j % 6) * 9)) >> 8) & 0b1) == 0b1))) {
                        System.out.println(" swoj nie bijemy11");
                        h = 0;
                    }
                    if (((((b_b >> ((i % 6) * 9)) >> 3) & 0b111) + p) == (((b_b >> ((j % 6) * 9)) >> 3) & 0b111) && (((b_b >> ((i % 6) * 9)) & 0b111) - p) == ((b_b >> ((j % 6) * 9)) & 0b111) && ((((b_b >> ((i % 6) * 9)) >> 7) & 0b11) == 0b11)&&(((((b_b >> ((j % 6) * 9)) >> 8) & 0b1) == 0b1))) {
                        System.out.println(" swoj nie bijemy12");
                        h = 0;
                    } else {
                        if (((((b_b >> ((i % 6) * 9)) >> 3) & 0b111) + p) == (((c_a >> ((j % 6) * 9)) >> 3) & 0b111) && (((b_b >> ((i % 6) * 9)) & 0b111) - p) == ((c_a >> ((j % 6) * 9)) & 0b111) && ((((b_b >> ((i % 6) * 9)) >> 7) & 0b11) == 0b11)&&(((((c_a >> ((j % 6) * 9)) >> 8) & 0b1) == 0b1))) {
                            System.out.println(" wrog na linii 11");
                            if (((((b_b >> ((i % 6) * 9)) >> 3) & 0b111) + p) < 7 && ((((b_b >> ((i % 6) * 9)) & 0b111) - p > 0))) {
                                h = 1;
                                for (int k = 0; k < 6; k++) {
                                    for (int l = 0; l < 6; l++) {
                                        if (((((b_b >> ((k % 6) * 9)) >> 3) & 0b111) + (p + 1)) == (((c_a >> ((l % 6) * 9)) >> 3) & 0b111) && (((b_b >> ((k % 6) * 9)) & 0b111) - (p + 1)) == ((c_a >> ((l % 6) * 9)) & 0b111) && ((((b_b >> ((k % 6) * 9)) >> 7) & 0b11) == 0b11)) {
                                            System.out.println("nie ma bicia");
                                            h = 0;
                                        }
                                        if (((((b_b >> ((k % 6) * 9)) >> 3) & 0b111) + (p + 1)) == (((c_b >> ((l % 6) * 9)) >> 3) & 0b111) && (((b_b >> ((k % 6) * 9)) & 0b111) - (p + 1)) == ((c_b >> ((l % 6) * 9)) & 0b111) && ((((b_b >> ((k % 6) * 9)) >> 7) & 0b11) == 0b11)) {
                                            System.out.println("nie ma bicia");
                                            h = 0;
                                        }
                                        if (((((b_b >> ((k % 6) * 9)) >> 3) & 0b111) + (p + 1)) == (((b_a >> ((l % 6) * 9)) >> 3) & 0b111) && (((b_b >> ((k % 6) * 9)) & 0b111) - (p + 1)) == ((b_a >> ((l % 6) * 9)) & 0b111) && ((((b_b >> ((k % 6) * 9)) >> 7) & 0b11) == 0b11)) {
                                            System.out.println("nie ma bicia");
                                            h = 0;
                                        }

                                        if (((((b_b >> ((k % 6) * 9)) >> 3) & 0b111) + (p + 1)) == (((b_b >> ((l % 6) * 9)) >> 3) & 0b111) && (((b_b >> ((k % 6) * 9)) & 0b111) - (p + 1)) == ((b_b >> ((l % 6) * 9)) & 0b111) && ((((b_b >> ((k % 6) * 9)) >> 7) & 0b11) == 0b11)) {
                                            System.out.println("nie ma bicia");
                                            h = 0;
                                        }
                                    }
                                }
                                if (h == 1) {
                                    System.out.println("bicie z pozycji " + (((b_b >> ((i % 6) * 9)) & 0b111) + 1) + "," + ((((b_b >> ((i % 6) * 9)) >> 3) & 0b111) + 1));
                                    glo_bb = glo_bb + 2;
                                    bb=bb+1;
                                }

                            } else {
                                h = 0;
                                bb=0;
                            }
                        } else if (((((b_b >> ((i % 6) * 9)) >> 3) & 0b111) + p) == (((c_b >> ((j % 6) * 9)) >> 3) & 0b111) && (((b_b >> ((i % 6) * 9)) & 0b111) - p) == ((c_b >> ((j % 6) * 9)) & 0b111) && ((((b_b >> ((i % 6) * 9)) >> 7) & 0b11) == 0b11)&&(((((c_b >> ((j % 6) * 9)) >> 8) & 0b1) == 0b1))) {
                            System.out.println(" wrog na linii 12");
                            if (((((b_b >> ((i % 6) * 9)) >> 3) & 0b111) + p) < 7 && ((((b_b >> ((i % 6) * 9)) & 0b111) - p > 0))) {
                                h = 1;
                                for (int k = 0; k < 6; k++) {
                                    for (int l = 0; l < 6; l++) {
                                        if (((((b_b >> ((k % 6) * 9)) >> 3) & 0b111) + (p + 1)) == (((c_a >> ((l % 6) * 9)) >> 3) & 0b111) && (((b_b >> ((k % 6) * 9)) & 0b111) - (p + 1)) == ((c_a >> ((l % 6) * 9)) & 0b111) && ((((b_b >> ((k % 6) * 9)) >> 7) & 0b11) == 0b11)) {
                                            System.out.println("nie ma bicia");
                                            h = 0;
                                        }
                                        if (((((b_b >> ((k % 6) * 9)) >> 3) & 0b111) + (p + 1)) == (((c_b >> ((l % 6) * 9)) >> 3) & 0b111) && (((b_b >> ((k % 6) * 9)) & 0b111) - (p + 1)) == ((c_b >> ((l % 6) * 9)) & 0b111) && ((((b_b >> ((k % 6) * 9)) >> 7) & 0b11) == 0b11)) {
                                            System.out.println("nie ma bicia");
                                            h = 0;
                                        }
                                        if (((((b_b >> ((k % 6) * 9)) >> 3) & 0b111) + (p + 1)) == (((b_a >> ((l % 6) * 9)) >> 3) & 0b111) && (((b_b >> ((k % 6) * 9)) & 0b111) - (p + 1)) == ((b_a >> ((l % 6) * 9)) & 0b111) && ((((b_b >> ((k % 6) * 9)) >> 7) & 0b11) == 0b11)) {
                                            System.out.println("nie ma bicia");
                                            h = 0;
                                        }

                                        if (((((b_b >> ((k % 6) * 9)) >> 3) & 0b111) + (p + 1)) == (((b_b >> ((l % 6) * 9)) >> 3) & 0b111) && (((b_b >> ((k % 6) * 9)) & 0b111) - (p + 1)) == ((b_b >> ((l % 6) * 9)) & 0b111) && ((((b_b >> ((k % 6) * 9)) >> 7) & 0b11) == 0b11)) {
                                            System.out.println("nie ma bicia");
                                            h = 0;
                                        }
                                    }
                                }
                                if (h == 1) {
                                    System.out.println("bicie z pozycji " + (((b_b >> ((i % 6) * 9)) & 0b111) + 1) + "," + ((((b_b >> ((i % 6) * 9)) >> 3) & 0b111) + 1));
                                    glo_bb = glo_bb + 2;
                                    bb=bb+1;
                                }

                            } else {
                                h = 0;
                                bb=0;
                            }
                        }
                    }
                }
            }
            if (p == 8)
                h = 0;
        }
        //;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
        h = 2;
        p = 0;
        while (h == 2) {
            p++;


            for (int i = 0; i < 6; i++) {


                for (int j = 0; j < 6; j++) {
                    if (((((b_b >> ((i % 6) * 9)) >> 3) & 0b111) - p) == (((b_a >> ((j % 6) * 9)) >> 3) & 0b111) && (((b_b >> ((i % 6) * 9)) & 0b111) + p) == ((b_a >> ((j % 6) * 9)) & 0b111) && ((((b_b >> ((i % 6) * 9)) >> 7) & 0b11) == 0b11)&&(((((b_a >> ((j % 6) * 9)) >> 8) & 0b1) == 0b1))) {
                        System.out.println(" swoj nie bijemy13");
                        h = 0;
                    }
                    if (((((b_b >> ((i % 6) * 9)) >> 3) & 0b111) - p) == (((b_b >> ((j % 6) * 9)) >> 3) & 0b111) && (((b_b >> ((i % 6) * 9)) & 0b111) + p) == ((b_b >> ((j % 6) * 9)) & 0b111) && ((((b_b >> ((i % 6) * 9)) >> 7) & 0b11) == 0b11)&&(((((b_b >> ((j % 6) * 9)) >> 8) & 0b1) == 0b1))) {
                        System.out.println(" swoj nie bijemy14");
                        h = 0;
                    } else {
                        if (((((b_b >> ((i % 6) * 9)) >> 3) & 0b111) - p) == (((c_a >> ((j % 6) * 9)) >> 3) & 0b111) && (((b_b >> ((i % 6) * 9)) & 0b111) + p) == ((c_a >> ((j % 6) * 9)) & 0b111) && ((((b_b >> ((i % 6) * 9)) >> 7) & 0b11) == 0b11)&&(((((c_a >> ((j % 6) * 9)) >> 8) & 0b1) == 0b1))) {
                            System.out.println(" wrog na linii 13");
                            if (((((b_b >> ((i % 6) * 9)) >> 3) & 0b111) - p) > 0 && ((((b_b >> ((i % 6) * 9)) & 0b111) + p < 7))) {
                                h = 1;
                                for (int k = 0; k < 6; k++) {
                                    for (int l = 0; l < 6; l++) {
                                        if (((((b_b >> ((k % 6) * 9)) >> 3) & 0b111) - (p + 1)) == (((c_a >> ((l % 6) * 9)) >> 3) & 0b111) && (((b_b >> ((k % 6) * 9)) & 0b111) + (p + 1)) == ((c_a >> ((l % 6) * 9)) & 0b111) && ((((b_b >> ((k % 6) * 9)) >> 7) & 0b11) == 0b11)) {
                                            System.out.println("nie ma bicia");
                                            h = 0;
                                        }
                                        if (((((b_b >> ((k % 6) * 9)) >> 3) & 0b111) - (p + 1)) == (((c_b >> ((l % 6) * 9)) >> 3) & 0b111) && (((b_b >> ((k % 6) * 9)) & 0b111) + (p + 1)) == ((c_b >> ((l % 6) * 9)) & 0b111) && ((((b_b >> ((k % 6) * 9)) >> 7) & 0b11) == 0b11)) {
                                            System.out.println("nie ma bicia");
                                            h = 0;
                                        }
                                        if (((((b_b >> ((k % 6) * 9)) >> 3) & 0b111) - (p + 1)) == (((b_a >> ((l % 6) * 9)) >> 3) & 0b111) && (((b_b >> ((k % 6) * 9)) & 0b111) + (p + 1)) == ((b_a >> ((l % 6) * 9)) & 0b111) && ((((b_b >> ((k % 6) * 9)) >> 7) & 0b11) == 0b11)) {
                                            System.out.println("nie ma bicia");
                                            h = 0;
                                        }

                                        if (((((b_b >> ((k % 6) * 9)) >> 3) & 0b111) - (p + 1)) == (((b_b >> ((l % 6) * 9)) >> 3) & 0b111) && (((b_b >> ((k % 6) * 9)) & 0b111) + (p + 1)) == ((b_b >> ((l % 6) * 9)) & 0b111) && ((((b_b >> ((k % 6) * 9)) >> 7) & 0b11) == 0b11)) {
                                            System.out.println("nie ma bicia");
                                            h = 0;
                                        }
                                    }
                                }
                                if (h == 1) {
                                    System.out.println("bicie z pozycji " + (((b_b >> ((i % 6) * 9)) & 0b111) + 1) + "," + ((((b_b >> ((i % 6) * 9)) >> 3) & 0b111) + 1));
                                    glo_bb = glo_bb + 2;
                                    bb=bb+1;
                                }

                            } else {
                                h = 0;
                                bb=0;
                            }
                        } else if (((((b_b >> ((i % 6) * 9)) >> 3) & 0b111) - p) == (((c_b >> ((j % 6) * 9)) >> 3) & 0b111) && (((b_b >> ((i % 6) * 9)) & 0b111) + p) == ((c_b >> ((j % 6) * 9)) & 0b111) && ((((b_b >> ((i % 6) * 9)) >> 7) & 0b11) == 0b11)&&(((((c_b >> ((j % 6) * 9)) >> 8) & 0b1) == 0b1))) {
                            System.out.println(" wrog na linii 14");
                            if (((((b_b >> ((i % 6) * 9)) >> 3) & 0b111) - p) > 0 && ((((b_b >> ((i % 6) * 9)) & 0b111) + p < 7))) {
                                h = 1;
                                for (int k = 0; k < 6; k++) {
                                    for (int l = 0; l < 6; l++) {
                                        if (((((b_b >> ((k % 6) * 9)) >> 3) & 0b111) - (p + 1)) == (((c_a >> ((l % 6) * 9)) >> 3) & 0b111) && (((b_b >> ((k % 6) * 9)) & 0b111) + (p + 1)) == ((c_a >> ((l % 6) * 9)) & 0b111) && ((((b_b >> ((k % 6) * 9)) >> 7) & 0b11) == 0b11)) {
                                            System.out.println("nie ma bicia");
                                            h = 0;
                                        }
                                        if (((((b_b >> ((k % 6) * 9)) >> 3) & 0b111) - (p + 1)) == (((c_b >> ((l % 6) * 9)) >> 3) & 0b111) && (((b_b >> ((k % 6) * 9)) & 0b111) + (p + 1)) == ((c_b >> ((l % 6) * 9)) & 0b111) && ((((b_b >> ((k % 6) * 9)) >> 7) & 0b11) == 0b11)) {
                                            System.out.println("nie ma bicia");
                                            h = 0;
                                        }
                                        if (((((b_b >> ((k % 6) * 9)) >> 3) & 0b111) - (p + 1)) == (((b_a >> ((l % 6) * 9)) >> 3) & 0b111) && (((b_b >> ((k % 6) * 9)) & 0b111) + (p + 1)) == ((b_a >> ((l % 6) * 9)) & 0b111) && ((((b_b >> ((k % 6) * 9)) >> 7) & 0b11) == 0b11)) {
                                            System.out.println("nie ma bicia");
                                            h = 0;
                                        }

                                        if (((((b_b >> ((k % 6) * 9)) >> 3) & 0b111) - (p + 1)) == (((b_b >> ((l % 6) * 9)) >> 3) & 0b111) && (((b_b >> ((k % 6) * 9)) & 0b111) + (p + 1)) == ((b_b >> ((l % 6) * 9)) & 0b111) && ((((b_b >> ((k % 6) * 9)) >> 7) & 0b11) == 0b11)) {
                                            System.out.println("nie ma bicia");
                                            h = 0;
                                        }
                                    }
                                }
                                if (h == 1) {
                                    System.out.println("bicie z pozycji " + (((b_b >> ((i % 6) * 9)) & 0b111) + 1) + "," + ((((b_b >> ((i % 6) * 9)) >> 3) & 0b111) + 1));
                                    glo_bb = glo_bb + 2;
                                    bb=bb+1;
                                }

                            } else {
                                h = 0;
                                bb=0;
                            }
                        }
                    }
                }
            }
            if (p == 8)
                h = 0;
        }

        //;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
        h = 2;
        p = 0;
        while (h == 2) {
            p++;


            for (int i = 0; i < 6; i++) {


                for (int j = 0; j < 6; j++) {
                    if (((((b_b >> ((i % 6) * 9)) >> 3) & 0b111) - p) == (((b_a >> ((j % 6) * 9)) >> 3) & 0b111) && (((b_b >> ((i % 6) * 9)) & 0b111) - p) == ((b_a >> ((j % 6) * 9)) & 0b111) && ((((b_b >> ((i % 6) * 9)) >> 7) & 0b11) == 0b11)&&(((((b_a >> ((j % 6) * 9)) >> 8) & 0b1) == 0b1))) {
                        System.out.println(" swoj nie bijemy15");
                        h = 0;
                    }
                    if (((((b_b >> ((i % 6) * 9)) >> 3) & 0b111) - p) == (((b_b >> ((j % 6) * 9)) >> 3) & 0b111) && (((b_b >> ((i % 6) * 9)) & 0b111) - p) == ((b_b >> ((j % 6) * 9)) & 0b111) && ((((b_b >> ((i % 6) * 9)) >> 7) & 0b11) == 0b11)&&(((((b_b >> ((j % 6) * 9)) >> 8) & 0b1) == 0b1))) {
                        System.out.println(" swoj nie bijemy16");
                        h = 0;
                    } else {
                        if (((((b_b >> ((i % 6) * 9)) >> 3) & 0b111) - p) == (((c_a >> ((j % 6) * 9)) >> 3) & 0b111) && (((b_b >> ((i % 6) * 9)) & 0b111) - p) == ((c_a >> ((j % 6) * 9)) & 0b111) && ((((b_b >> ((i % 6) * 9)) >> 7) & 0b11) == 0b11)&&(((((c_a >> ((j % 6) * 9)) >> 8) & 0b1) == 0b1))) {
                            System.out.println(" wrog na linii 15");
                            if (((((b_b >> ((i % 6) * 9)) >> 3) & 0b111) - p) > 0 && (((((b_b >> ((i % 6) * 9)) & 0b111) - p) > 0))) {
                                h = 1;
                                for (int k = 0; k < 6; k++) {
                                    for (int l = 0; l < 6; l++) {
                                        if (((((b_b >> ((k % 6) * 9)) >> 3) & 0b111) - (p + 1)) == (((c_a >> ((l % 6) * 9)) >> 3) & 0b111) && (((b_b >> ((k % 6) * 9)) & 0b111) - (p + 1)) == ((c_a >> ((l % 6) * 9)) & 0b111) && ((((b_b >> ((k % 6) * 9)) >> 7) & 0b11) == 0b11)) {
                                            System.out.println("nie ma bicia");
                                            h = 0;
                                        }
                                        if (((((b_b >> ((k % 6) * 9)) >> 3) & 0b111) - (p + 1)) == (((c_b >> ((l % 6) * 9)) >> 3) & 0b111) && (((b_b >> ((k % 6) * 9)) & 0b111) - (p + 1)) == ((c_b >> ((l % 6) * 9)) & 0b111) && ((((b_b >> ((k % 6) * 9)) >> 7) & 0b11) == 0b11)) {
                                            System.out.println("nie ma bicia");
                                            h = 0;
                                        }
                                        if (((((b_b >> ((k % 6) * 9)) >> 3) & 0b111) - (p + 1)) == (((b_a >> ((l % 6) * 9)) >> 3) & 0b111) && (((b_b >> ((k % 6) * 9)) & 0b111) - (p + 1)) == ((b_a >> ((l % 6) * 9)) & 0b111) && ((((b_b >> ((k % 6) * 9)) >> 7) & 0b11) == 0b11)) {
                                            System.out.println("nie ma bicia");
                                            h = 0;
                                        }

                                        if (((((b_b >> ((k % 6) * 9)) >> 3) & 0b111) - (p + 1)) == (((b_b >> ((l % 6) * 9)) >> 3) & 0b111) && (((b_b >> ((k % 6) * 9)) & 0b111) - (p + 1)) == ((b_b >> ((l % 6) * 9)) & 0b111) && ((((b_b >> ((k % 6) * 9)) >> 7) & 0b11) == 0b11)) {
                                            System.out.println("nie ma bicia");
                                            h = 0;
                                        }
                                    }
                                }
                                if (h == 1) {
                                    System.out.println("bicie z pozycji " + (((b_b >> ((i % 6) * 9)) & 0b111) + 1) + "," + ((((b_b >> ((i % 6) * 9)) >> 3) & 0b111) + 1));
                                    glo_bb = glo_bb + 2;
                                    bb=bb+1;
                                }

                            } else {
                                h = 0;
                                bb=0;
                            }
                        } else if (((((b_b >> ((i % 6) * 9)) >> 3) & 0b111) - p) == (((c_b >> ((j % 6) * 9)) >> 3) & 0b111) && (((b_b >> ((i % 6) * 9)) & 0b111) - p) == ((c_b >> ((j % 6) * 9)) & 0b111) && ((((b_b >> ((i % 6) * 9)) >> 7) & 0b11) == 0b11)&&(((((c_b >> ((j % 6) * 9)) >> 8) & 0b1) == 0b1))) {
                            System.out.println(" wrog na linii 16");
                            if (((((b_b >> ((i % 6) * 9)) >> 3) & 0b111) - p) > 0 && (((((b_b >> ((i % 6) * 9)) & 0b111) - p) > 0))) {
                                h = 1;
                                for (int k = 0; k < 6; k++) {
                                    for (int l = 0; l < 6; l++) {
                                        if (((((b_b >> ((k % 6) * 9)) >> 3) & 0b111) - (p + 1)) == (((c_a >> ((l % 6) * 9)) >> 3) & 0b111) && (((b_b >> ((k % 6) * 9)) & 0b111) - (p + 1)) == ((c_a >> ((l % 6) * 9)) & 0b111) && ((((b_b >> ((k % 6) * 9)) >> 7) & 0b11) == 0b11)) {
                                            System.out.println("nie ma bicia");
                                            h = 0;
                                        }
                                        if (((((b_b >> ((k % 6) * 9)) >> 3) & 0b111) - (p + 1)) == (((c_b >> ((l % 6) * 9)) >> 3) & 0b111) && (((b_b >> ((k % 6) * 9)) & 0b111) - (p + 1)) == ((c_b >> ((l % 6) * 9)) & 0b111) && ((((b_b >> ((k % 6) * 9)) >> 7) & 0b11) == 0b11)) {
                                            System.out.println("nie ma bicia");
                                            h = 0;
                                        }
                                        if (((((b_b >> ((k % 6) * 9)) >> 3) & 0b111) - (p + 1)) == (((b_a >> ((l % 6) * 9)) >> 3) & 0b111) && (((b_b >> ((k % 6) * 9)) & 0b111) - (p + 1)) == ((b_a >> ((l % 6) * 9)) & 0b111) && ((((b_b >> ((k % 6) * 9)) >> 7) & 0b11) == 0b11)) {
                                            System.out.println("nie ma bicia");
                                            h = 0;
                                        }

                                        if (((((b_b >> ((k % 6) * 9)) >> 3) & 0b111) - (p + 1)) == (((b_b >> ((l % 6) * 9)) >> 3) & 0b111) && (((b_b >> ((k % 6) * 9)) & 0b111) - (p + 1)) == ((b_b >> ((l % 6) * 9)) & 0b111) && ((((b_b >> ((k % 6) * 9)) >> 7) & 0b11) == 0b11)) {
                                            System.out.println("nie ma bicia");
                                            h = 0;
                                        }
                                    }
                                }
                                if (h == 1) {
                                    System.out.println("bicie z pozycji " + (((b_b >> ((i % 6) * 9)) & 0b111) + 1) + "," + ((((b_b >> ((i % 6) * 9)) >> 3) & 0b111) + 1));
                                    glo_bb = glo_bb + 2;
                                    bb=bb+1;
                                }
                            } else {
                                h = 0;
                                bb=0;
                            }

                        }
                    }
                }
            }
            if (p == 8)
                h = 0;
        }
        System.out.println(glo_bb);

    return glo_bb;}
public static int sprCdamki(long b_a,long b_b,long c_a,long c_b,int glo_xx){
              int h = 2;
            int p = 0;
            int glo_bb=0;

    if (glo_xx==0){
        glo_bb=0;}
    else {
        glo_bb=2;}

            while (h == 2) {
                p++;


                for (int i = 0; i < 6; i++) {


                    for (int j = 0; j < 6; j++) {


                        if (((((c_a >> ((i % 6) * 9)) >> 3) & 0b111) + p) == (((c_a >> ((j % 6) * 9)) >> 3) & 0b111) && (((c_a >> ((i % 6) * 9)) & 0b111) + p) == ((c_a >> ((j % 6) * 9)) & 0b111) && ((((c_a >> ((i % 6) * 9)) >> 7) & 0b11) == 0b11)&&(((((c_a >> ((j % 6) * 9)) >> 8) & 0b1) == 0b1))) {
                            System.out.println(" swoj nie bijemy1");
                            h = 1;
                        }
                        if (((((c_a >> ((i % 6) * 9)) >> 3) & 0b111) + p) == (((c_b >> ((j % 6) * 9)) >> 3) & 0b111) && (((c_a >> ((i % 6) * 9)) & 0b111) + p) == ((c_b >> ((j % 6) * 9)) & 0b111) && ((((c_a >> ((i % 6) * 9)) >> 7) & 0b11) == 0b11)&&(((((c_b >> ((j % 6) * 9)) >> 8) & 0b1) == 0b1))) {
                            System.out.println(" swoj nie bijemy2");
                            h = 1;
                        } else {

                            if (((((c_a >> ((i % 6) * 9)) >> 3) & 0b111) + p) == (((b_a >> ((j % 6) * 9)) >> 3) & 0b111) && (((c_a >> ((i % 6) * 9)) & 0b111) + p) == ((b_a >> ((j % 6) * 9)) & 0b111) && ((((c_a >> ((i % 6) * 9)) >> 7) & 0b11) == 0b11)&&(((((b_a >> ((j % 6) * 9)) >> 8) & 0b1) == 0b1))) {
                                System.out.println(" wrog na linii 1");
                                if (((((c_a >> ((i % 6) * 9)) >> 3) & 0b111) + p) < 7 && ((((c_a >> ((i % 6) * 9)) & 0b111) + p < 7))) {
                                    h = 1;

                                    //sprawdzic pole za nim czy wolne

                                    for (int k = 0; k < 6; k++) {
                                        for (int l = 0; l < 6; l++) {
                                            if (((((c_a >> ((k % 6) * 9)) >> 3) & 0b111) + (p + 1)) == (((c_a >> ((l % 6) * 9)) >> 3) & 0b111) && (((c_a >> ((k % 6) * 9)) & 0b111) + (p + 1)) == ((c_a >> ((l % 6) * 9)) & 0b111) && ((((c_a >> ((k % 6) * 9)) >> 7) & 0b11) == 0b11)) {
                                                System.out.println("nie ma bicia");
                                                h = 0;
                                            }
                                            if (((((c_a >> ((k % 6) * 9)) >> 3) & 0b111) + (p + 1)) == (((c_b >> ((l % 6) * 9)) >> 3) & 0b111) && (((c_a >> ((k % 6) * 9)) & 0b111) + (p + 1)) == ((c_b >> ((l % 6) * 9)) & 0b111) && ((((c_a >> ((k % 6) * 9)) >> 7) & 0b11) == 0b11)) {
                                                System.out.println("nie ma bicia");

                                                h = 0;
                                            }
                                            if (((((c_a >> ((k % 6) * 9)) >> 3) & 0b111) + (p + 1)) == (((b_a >> ((l % 6) * 9)) >> 3) & 0b111) && (((c_a >> ((k % 6) * 9)) & 0b111) + (p + 1)) == ((b_a >> ((l % 6) * 9)) & 0b111) && ((((c_a >> ((k % 6) * 9)) >> 7) & 0b11) == 0b11)) {
                                                System.out.println("nie ma bicia");

                                                h = 0;
                                            }

                                            if (((((c_a >> ((k % 6) * 9)) >> 3) & 0b111) + (p + 1)) == (((b_b >> ((l % 6) * 9)) >> 3) & 0b111) && (((c_a >> ((k % 6) * 9)) & 0b111) + (p + 1)) == ((b_b >> ((l % 6) * 9)) & 0b111) && ((((c_a >> ((k % 6) * 9)) >> 7) & 0b11) == 0b11)) {
                                                System.out.println("nie ma bicia");

                                                h = 0;
                                            }

                                        }

                                    }
                                    if (h == 1) {
                                        System.out.println("bicie z pozycji A3" + (((c_a >> ((i % 6) * 9)) & 0b111) + 1) + "," + ((((c_a >> ((i % 6) * 9)) >> 3) & 0b111) + 1));
                                        glo_bb = glo_bb + 2;
                                    }
                                } else {
                                    h = 0;
                                }

                            } else if (((((c_a >> ((i % 6) * 9)) >> 3) & 0b111) + p) == (((b_b >> ((j % 6) * 9)) >> 3) & 0b111) && (((c_a >> ((i % 6) * 9)) & 0b111) + p) == ((b_b >> ((j % 6) * 9)) & 0b111) && ((((c_a >> ((i % 6) * 9)) >> 7) & 0b11) == 0b11)&&(((((b_b >> ((j % 6) * 9)) >> 8) & 0b1) == 0b1))) {
                                System.out.println(" wrog na linii 2");
                                if (((((c_a >> ((i % 6) * 9)) >> 3) & 0b111) + p) < 7 && ((((c_a >> ((i % 6) * 9)) & 0b111) + p < 7))) {
                                    h = 1;
                                    //sprawdzic pole za nim czy wolne
                                    for (int k = 0; k < 6; k++) {
                                        for (int l = 0; l < 6; l++) {
                                            if (((((c_a >> ((k % 6) * 9)) >> 3) & 0b111) + (p + 1)) == (((c_a >> ((l % 6) * 9)) >> 3) & 0b111) && (((c_a >> ((k % 6) * 9)) & 0b111) + (p + 1)) == ((c_a >> ((l % 6) * 9)) & 0b111) && ((((c_a >> ((k % 6) * 9)) >> 7) & 0b11) == 0b11)) {
                                                System.out.println("nie ma bicia");
                                                h = 0;
                                            }
                                            if (((((c_a >> ((k % 6) * 9)) >> 3) & 0b111) + (p + 1)) == (((c_b >> ((l % 6) * 9)) >> 3) & 0b111) && (((c_a >> ((k % 6) * 9)) & 0b111) + (p + 1)) == ((c_b >> ((l % 6) * 9)) & 0b111) && ((((c_a >> ((k % 6) * 9)) >> 7) & 0b11) == 0b11)) {
                                                System.out.println("nie ma bicia");

                                                h = 0;
                                            }
                                            if (((((c_a >> ((k % 6) * 9)) >> 3) & 0b111) + (p + 1)) == (((b_a >> ((l % 6) * 9)) >> 3) & 0b111) && (((c_a >> ((k % 6) * 9)) & 0b111) + (p + 1)) == ((b_a >> ((l % 6) * 9)) & 0b111) && ((((c_a >> ((k % 6) * 9)) >> 7) & 0b11) == 0b11)) {
                                                System.out.println("nie ma bicia");

                                                h = 0;
                                            }

                                            if (((((c_a >> ((k % 6) * 9)) >> 3) & 0b111) + (p + 1)) == (((b_b >> ((l % 6) * 9)) >> 3) & 0b111) && (((c_a >> ((k % 6) * 9)) & 0b111) + (p + 1)) == ((b_b >> ((l % 6) * 9)) & 0b111) && ((((c_a >> ((k % 6) * 9)) >> 7) & 0b11) == 0b11)) {
                                                System.out.println("nie ma bicia");

                                                h = 0;
                                            }

                                        }
                                    }

                                    if (h == 1) {
                                        System.out.println("bicie z pozycji B3 " + (((c_a >> ((i % 6) * 9)) & 0b111) + 1) + "," + ((((c_a >> ((i % 6) * 9)) >> 3) & 0b111) + 1));
                                        glo_bb = glo_bb + 2;
                                    }
                                } else {
                                    h = 0;
                                }
                            }
                        }
                    }
                }
                if (p == 8)
                    h = 0;
            }
            h = 2;
            p = 0;
            while (h == 2) {
                p++;


                for (int i = 0; i < 6; i++) {

                    for (int j = 0; j < 6; j++) {


                        if (((((c_a >> ((i % 6) * 9)) >> 3) & 0b111) + p) == (((c_a >> ((j % 6) * 9)) >> 3) & 0b111) && (((c_a >> ((i % 6) * 9)) & 0b111) - p) == ((c_a >> ((j % 6) * 9)) & 0b111) && ((((c_a >> ((i % 6) * 9)) >> 7) & 0b11) == 0b11)&&(((((c_a >> ((j % 6) * 9)) >> 8) & 0b1) == 0b1))) {
                            System.out.println(" swoj nie bijemy3");
                            h = 1;
                        }
                        if (((((c_a >> ((i % 6) * 9)) >> 3) & 0b111) + p) == (((c_b >> ((j % 6) * 9)) >> 3) & 0b111) && (((c_a >> ((i % 6) * 9)) & 0b111) - p) == ((c_b >> ((j % 6) * 9)) & 0b111) && ((((c_a >> ((i % 6) * 9)) >> 7) & 0b11) == 0b11)&&(((((c_b >> ((j % 6) * 9)) >> 8) & 0b1) == 0b1))) {
                            System.out.println(" swoj nie bijemy4");
                            h = 1;
                        } else {
                            if (((((c_a >> ((i % 6) * 9)) >> 3) & 0b111) + p) == (((b_a >> ((j % 6) * 9)) >> 3) & 0b111) && (((c_a >> ((i % 6) * 9)) & 0b111) - p) == ((b_a >> ((j % 6) * 9)) & 0b111) && ((((c_a >> ((i % 6) * 9)) >> 7) & 0b11) == 0b11)&&(((((b_a >> ((j % 6) * 9)) >> 8) & 0b1) == 0b1))) {
                                System.out.println(" wrog na linii 3");
                                if (((((c_a >> ((i % 6) * 9)) >> 3) & 0b111) + p) < 7 && ((((c_a >> ((i % 6) * 9)) & 0b111) - p > 0))) {
                                    h = 1;
                                    for (int k = 0; k < 6; k++) {
                                        for (int l = 0; l < 6; l++) {
                                            if (((((c_a >> ((k % 6) * 9)) >> 3) & 0b111) + (p + 1)) == (((c_a >> ((l % 6) * 9)) >> 3) & 0b111) && (((c_a >> ((k % 6) * 9)) & 0b111) - (p + 1)) == ((c_a >> ((l % 6) * 9)) & 0b111) && ((((c_a >> ((k % 6) * 9)) >> 7) & 0b11) == 0b11)) {
                                                System.out.println("nie ma bicia");
                                                h = 0;

                                            }
                                            if (((((c_a >> ((k % 6) * 9)) >> 3) & 0b111) + (p + 1)) == (((c_b >> ((l % 6) * 9)) >> 3) & 0b111) && (((c_a >> ((k % 6) * 9)) & 0b111) - (p + 1)) == ((c_b >> ((l % 6) * 9)) & 0b111) && ((((c_a >> ((k % 6) * 9)) >> 7) & 0b11) == 0b11)) {
                                                System.out.println("nie ma bicia");
                                                h = 0;
                                            }
                                            if (((((c_a >> ((k % 6) * 9)) >> 3) & 0b111) + (p + 1)) == (((b_a >> ((l % 6) * 9)) >> 3) & 0b111) && (((c_a >> ((k % 6) * 9)) & 0b111) - (p + 1)) == ((b_a >> ((l % 6) * 9)) & 0b111) && ((((c_a >> ((k % 6) * 9)) >> 7) & 0b11) == 0b11)) {
                                                System.out.println("nie ma bicia");
                                                h = 0;
                                            }

                                            if (((((c_a >> ((k % 6) * 9)) >> 3) & 0b111) + (p + 1)) == (((b_b >> ((l % 6) * 9)) >> 3) & 0b111) && (((c_a >> ((k % 6) * 9)) & 0b111) - (p + 1)) == ((b_b >> ((l % 6) * 9)) & 0b111) && ((((c_a >> ((k % 6) * 9)) >> 7) & 0b11) == 0b11)) {
                                                System.out.println("nie ma bicia");
                                                h = 0;
                                            }
                                        }
                                    }
                                    if (h == 1) {
                                        System.out.println("bicie z pozycji x" + (((c_a >> ((i % 6) * 9)) & 0b111) + 1) + "," + ((((c_a >> ((i % 6) * 9)) >> 3) & 0b111) + 1));
                                        glo_bb = glo_bb + 2;
                                    }


                                } else {
                                    h = 0;
                                }
                            } else if (((((c_a >> ((i % 6) * 9)) >> 3) & 0b111) + p) == (((b_b >> ((j % 6) * 9)) >> 3) & 0b111) && (((c_a >> ((i % 6) * 9)) & 0b111) - p) == ((b_b >> ((j % 6) * 9)) & 0b111) && ((((c_a >> ((i % 6) * 9)) >> 7) & 0b11) == 0b11)&&(((((b_b >> ((j % 6) * 9)) >> 8) & 0b1) == 0b1))) {

                                System.out.println(" wrog na linii 4");
                                if (((((c_a >> ((i % 6) * 9)) >> 3) & 0b111) + p) < 7 && ((((c_a >> ((i % 6) * 9)) & 0b111) - p > 0))) {
                                    h = 1;
                                    for (int k = 0; k < 6; k++) {
                                        for (int l = 0; l < 6; l++) {
                                            if (((((c_a >> ((k % 6) * 9)) >> 3) & 0b111) + (p + 1)) == (((c_a >> ((l % 6) * 9)) >> 3) & 0b111) && (((c_a >> ((k % 6) * 9)) & 0b111) - (p + 1)) == ((c_a >> ((l % 6) * 9)) & 0b111) && ((((c_a >> ((k % 6) * 9)) >> 7) & 0b11) == 0b11)) {
                                                System.out.println("nie ma bicia");
                                                h = 0;
                                            }
                                            if (((((c_a >> ((k % 6) * 9)) >> 3) & 0b111) + (p + 1)) == (((c_b >> ((l % 6) * 9)) >> 3) & 0b111) && (((c_a >> ((k % 6) * 9)) & 0b111) - (p + 1)) == ((c_b >> ((l % 6) * 9)) & 0b111) && ((((c_a >> ((k % 6) * 9)) >> 7) & 0b11) == 0b11)) {
                                                System.out.println("nie ma bicia");
                                                h = 0;
                                            }
                                            if (((((c_a >> ((k % 6) * 9)) >> 3) & 0b111) + (p + 1)) == (((b_a >> ((l % 6) * 9)) >> 3) & 0b111) && (((c_a >> ((k % 6) * 9)) & 0b111) - (p + 1)) == ((b_a >> ((l % 6) * 9)) & 0b111) && ((((c_a >> ((k % 6) * 9)) >> 7) & 0b11) == 0b11)) {
                                                System.out.println("nie ma bicia");
                                                h = 0;
                                            }

                                            if (((((c_a >> ((k % 6) * 9)) >> 3) & 0b111) + (p + 1)) == (((b_b >> ((l % 6) * 9)) >> 3) & 0b111) && (((c_a >> ((k % 6) * 9)) & 0b111) - (p + 1)) == ((b_b >> ((l % 6) * 9)) & 0b111) && ((((c_a >> ((k % 6) * 9)) >> 7) & 0b11) == 0b11)) {
                                                System.out.println("nie ma bicia");
                                                h = 0;
                                            }
                                        }
                                    }
                                    if (h == 1) {
                                        System.out.println("bicie z pozycji v" + (((c_a >> ((i % 6) * 9)) & 0b111) + 1) + "," + ((((c_a >> ((i % 6) * 9)) >> 3) & 0b111) + 1));
                                        glo_bb = glo_bb + 2;
                                    }


                                } else {
                                    h = 0;
                                }
                            }


                        }
                    }
                }
                if (p == 8)
                    h = 0;
            }

            //;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

            h = 2;
            p = 0;
            while (h == 2) {
                p++;

                for (int i = 0; i < 6; i++) {

                    for (int j = 0; j < 6; j++) {


                        if (((((c_a >> ((i % 6) * 9)) >> 3) & 0b111) - p) == (((c_a >> ((j % 6) * 9)) >> 3) & 0b111) && (((c_a >> ((i % 6) * 9)) & 0b111) + p) == ((c_a >> ((j % 6) * 9)) & 0b111) && ((((c_a >> ((i % 6) * 9)) >> 7) & 0b11) == 0b11)&&(((((c_a >> ((j % 6) * 9)) >> 8) & 0b1) == 0b1))) {
                            System.out.println(" swoj nie bijemy5");
                            h = 1;
                        }
                        if (((((c_a >> ((i % 6) * 9)) >> 3) & 0b111) - p) == (((c_b >> ((j % 6) * 9)) >> 3) & 0b111) && (((c_a >> ((i % 6) * 9)) & 0b111) + p) == ((c_b >> ((j % 6) * 9)) & 0b111) && ((((c_a >> ((i % 6) * 9)) >> 7) & 0b11) == 0b11)&&(((((c_b >> ((j % 6) * 9)) >> 8) & 0b1) == 0b1))) {
                            System.out.println(" swoj nie bijemy6");
                            h = 1;
                        } else {
                            if (((((c_a >> ((i % 6) * 9)) >> 3) & 0b111) - p) == (((b_a >> ((j % 6) * 9)) >> 3) & 0b111) && (((c_a >> ((i % 6) * 9)) & 0b111) + p) == ((b_a >> ((j % 6) * 9)) & 0b111) && ((((c_a >> ((i % 6) * 9)) >> 7) & 0b11) == 0b11)&&(((((b_a >> ((j % 6) * 9)) >> 8) & 0b1) == 0b1))) {
                                System.out.println(" wrog na linii 5");
                                if ((((c_a >> ((i % 6) * 9)) >> 3) & 0b111) - p > 0 && ((((c_a >> ((i % 6) * 9)) & 0b111) + p < 7))) {
                                    h = 1;
                                    for (int k = 0; k < 6; k++) {
                                        for (int l = 0; l < 6; l++) {
                                            if (((((c_a >> ((k % 6) * 9)) >> 3) & 0b111) - (p + 1)) == (((c_a >> ((l % 6) * 9)) >> 3) & 0b111) && (((c_a >> ((k % 6) * 9)) & 0b111) + (p + 1)) == ((c_a >> ((l % 6) * 9)) & 0b111) && ((((c_a >> ((k % 6) * 9)) >> 7) & 0b11) == 0b11)) {
                                                System.out.println("nie ma bicia");
                                                h = 0;
                                            }
                                            if (((((c_a >> ((k % 6) * 9)) >> 3) & 0b111) - (p + 1)) == (((c_b >> ((l % 6) * 9)) >> 3) & 0b111) && (((c_a >> ((k % 6) * 9)) & 0b111) + (p + 1)) == ((c_b >> ((l % 6) * 9)) & 0b111) && ((((c_a >> ((k % 6) * 9)) >> 7) & 0b11) == 0b11)) {
                                                System.out.println("nie ma bicia");
                                                h = 0;
                                            }
                                            if (((((c_a >> ((k % 6) * 9)) >> 3) & 0b111) - (p + 1)) == (((b_a >> ((l % 6) * 9)) >> 3) & 0b111) && (((c_a >> ((k % 6) * 9)) & 0b111) + (p + 1)) == ((b_a >> ((l % 6) * 9)) & 0b111) && ((((c_a >> ((k % 6) * 9)) >> 7) & 0b11) == 0b11)) {
                                                System.out.println("nie ma bicia");
                                                h = 0;
                                            }

                                            if (((((c_a >> ((k % 6) * 9)) >> 3) & 0b111) - (p + 1)) == (((b_b >> ((l % 6) * 9)) >> 3) & 0b111) && (((c_a >> ((k % 6) * 9)) & 0b111) + (p + 1)) == ((b_b >> ((l % 6) * 9)) & 0b111) && ((((c_a >> ((k % 6) * 9)) >> 7) & 0b11) == 0b11)) {
                                                System.out.println("nie ma bicia");
                                                h = 0;
                                            }
                                        }
                                    }
                                    if (h == 1) {
                                        System.out.println("bicie z pozycji nn" + (((c_a >> ((i % 6) * 9)) & 0b111) + 1) + "," + ((((c_a >> ((i % 6) * 9)) >> 3) & 0b111) + 1));
                                        glo_bb = glo_bb + 2;
                                    }
                                } else {
                                    h = 0;
                                }
                            } else if (((((c_a >> ((i % 6) * 9)) >> 3) & 0b111) - p) == (((b_b >> ((j % 6) * 9)) >> 3) & 0b111) && (((c_a >> ((i % 6) * 9)) & 0b111) + p) == ((b_b >> ((j % 6) * 9)) & 0b111) && ((((c_a >> ((i % 6) * 9)) >> 7) & 0b11) == 0b11)&&(((((b_b >> ((j % 6) * 9)) >> 8) & 0b1) == 0b1))) {
                                System.out.println(" wrog na linii 6");
                                if (((((c_a >> ((i % 6) * 9)) >> 3) & 0b111) - p) > 0 && ((((c_a >> ((i % 6) * 9)) & 0b111) + p < 7))) {
                                    h = 1;
                                    for (int k = 0; k < 6; k++) {
                                        for (int l = 0; l < 6; l++) {
                                            if (((((c_a >> ((k % 6) * 9)) >> 3) & 0b111) - (p + 1)) == (((c_a >> ((l % 6) * 9)) >> 3) & 0b111) && (((c_a >> ((k % 6) * 9)) & 0b111) + (p + 1)) == ((c_a >> ((l % 6) * 9)) & 0b111) && ((((c_a >> ((k % 6) * 9)) >> 7) & 0b11) == 0b11)) {
                                                System.out.println("nie ma bicia");
                                                h = 0;
                                            }
                                            if (((((c_a >> ((k % 6) * 9)) >> 3) & 0b111) - (p + 1)) == (((c_b >> ((l % 6) * 9)) >> 3) & 0b111) && (((c_a >> ((k % 6) * 9)) & 0b111) + (p + 1)) == ((c_b >> ((l % 6) * 9)) & 0b111) && ((((c_a >> ((k % 6) * 9)) >> 7) & 0b11) == 0b11)) {
                                                System.out.println("nie ma bicia");
                                                h = 0;
                                            }
                                            if (((((c_a >> ((k % 6) * 9)) >> 3) & 0b111) - (p + 1)) == (((b_a >> ((l % 6) * 9)) >> 3) & 0b111) && (((c_a >> ((k % 6) * 9)) & 0b111) + (p + 1)) == ((b_a >> ((l % 6) * 9)) & 0b111) && ((((c_a >> ((k % 6) * 9)) >> 7) & 0b11) == 0b11)) {
                                                System.out.println("nie ma bicia");
                                                h = 0;
                                            }

                                            if (((((c_a >> ((k % 6) * 9)) >> 3) & 0b111) - (p + 1)) == (((b_b >> ((l % 6) * 9)) >> 3) & 0b111) && (((c_a >> ((k % 6) * 9)) & 0b111) + (p + 1)) == ((b_b >> ((l % 6) * 9)) & 0b111) && ((((c_a >> ((k % 6) * 9)) >> 7) & 0b11) == 0b11)) {
                                                System.out.println("nie ma bicia");
                                                h = 0;
                                            }
                                        }
                                    }
                                    if (h == 1) {
                                        System.out.println("bicie z pozycji kk" + (((c_a >> ((i % 6) * 9)) & 0b111) + 1) + "," + ((((c_a >> ((i % 6) * 9)) >> 3) & 0b111) + 1));
                                        glo_bb = glo_bb + 2;

                                    }

                                } else {
                                    h = 0;
                                }
                            }
                        }
                    }
                }
                if (p == 8)
                    h = 0;
            }


            //;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
            h = 2;
            p = 0;
            while (h == 2) {
                p++;


                for (int i = 0; i < 6; i++) {


                    for (int j = 0; j < 6; j++) {


                        if (((((c_a >> ((i % 6) * 9)) >> 3) & 0b111) - p) == (((c_a >> ((j % 6) * 9)) >> 3) & 0b111) && (((c_a >> ((i % 6) * 9)) & 0b111) - p) == ((c_a >> ((j % 6) * 9)) & 0b111) && ((((c_a >> ((i % 6) * 9)) >> 7) & 0b11) == 0b11)&&(((((c_a >> ((j % 6) * 9)) >> 8) & 0b1) == 0b1))) {
                            System.out.println(" swoj nie bijemy7");
                            h = 0;
                        }
                        if (((((c_a >> ((i % 6) * 9)) >> 3) & 0b111) - p) == (((c_b >> ((j % 6) * 9)) >> 3) & 0b111) && (((c_a >> ((i % 6) * 9)) & 0b111) - p) == ((c_b >> ((j % 6) * 9)) & 0b111) && ((((c_a >> ((i % 6) * 9)) >> 7) & 0b11) == 0b11)&&(((((c_b >> ((j % 6) * 9)) >> 8) & 0b1) == 0b1))) {
                            System.out.println(" swoj nie bijemy8");
                            h = 0;
                        } else {
                            if (((((c_a >> ((i % 6) * 9)) >> 3) & 0b111) - p) == (((b_a >> ((j % 6) * 9)) >> 3) & 0b111) && (((c_a >> ((i % 6) * 9)) & 0b111) - p) == ((b_a >> ((j % 6) * 9)) & 0b111) && ((((c_a >> ((i % 6) * 9)) >> 7) & 0b11) == 0b11)&&(((((b_a >> ((j % 6) * 9)) >> 8) & 0b1) == 0b1))) {
                                System.out.println(" wrog na linii 7");
                                if ((((c_a >> ((i % 6) * 9)) >> 3) & 0b111) - p > 0 && ((((c_a >> ((i % 6) * 9)) & 0b111) - p > 0))) {
                                    h = 1;
                                    for (int k = 0; k < 6; k++) {
                                        for (int l = 0; l < 6; l++) {
                                            if (((((c_a >> ((k % 6) * 9)) >> 3) & 0b111) - (p + 1)) == (((c_a >> ((l % 6) * 9)) >> 3) & 0b111) && (((c_a >> ((k % 6) * 9)) & 0b111) - (p + 1)) == ((c_a >> ((l % 6) * 9)) & 0b111) && ((((c_a >> ((k % 6) * 9)) >> 7) & 0b11) == 0b11)) {
                                                System.out.println("nie ma bicia");
                                                h = 0;
                                            }
                                            if (((((c_a >> ((k % 6) * 9)) >> 3) & 0b111) - (p + 1)) == (((c_b >> ((l % 6) * 9)) >> 3) & 0b111) && (((c_a >> ((k % 6) * 9)) & 0b111) - (p + 1)) == ((c_b >> ((l % 6) * 9)) & 0b111) && ((((c_a >> ((k % 6) * 9)) >> 7) & 0b11) == 0b11)) {
                                                System.out.println("nie ma bicia");
                                                h = 0;
                                            }
                                            if (((((c_a >> ((k % 6) * 9)) >> 3) & 0b111) - (p + 1)) == (((b_a >> ((l % 6) * 9)) >> 3) & 0b111) && (((c_a >> ((k % 6) * 9)) & 0b111) - (p + 1)) == ((b_a >> ((l % 6) * 9)) & 0b111) && ((((c_a >> ((k % 6) * 9)) >> 7) & 0b11) == 0b11)) {
                                                System.out.println("nie ma bicia");
                                                h = 0;
                                            }

                                            if (((((c_a >> ((k % 6) * 9)) >> 3) & 0b111) - (p + 1)) == (((b_b >> ((l % 6) * 9)) >> 3) & 0b111) && (((c_a >> ((k % 6) * 9)) & 0b111) - (p + 1)) == ((b_b >> ((l % 6) * 9)) & 0b111) && ((((c_a >> ((k % 6) * 9)) >> 7) & 0b11) == 0b11)) {
                                                System.out.println("nie ma bicia");
                                                h = 0;
                                            }
                                        }
                                    }
                                    if (h == 1) {
                                        System.out.println("bicie z pozycji " + (((c_a >> ((i % 6) * 9)) & 0b111) + 1) + "," + ((((c_a >> ((i % 6) * 9)) >> 3) & 0b111) + 1));
                                        glo_bb = glo_bb + 2;
                                    }
                                } else {
                                    h = 0;
                                }
                            } else if (((((c_a >> ((i % 6) * 9)) >> 3) & 0b111) - p) == (((b_b >> ((j % 6) * 9)) >> 3) & 0b111) && (((c_a >> ((i % 6) * 9)) & 0b111) - p) == ((b_b >> ((j % 6) * 9)) & 0b111) && ((((c_a >> ((i % 6) * 9)) >> 7) & 0b11) == 0b11)&&(((((b_b >> ((j % 6) * 9)) >> 8) & 0b1) == 0b1))) {
                                System.out.println(" wrog na linii 8");
                                if ((((c_a >> ((i % 6) * 9)) >> 3) & 0b111) - p > 0 && ((((c_a >> ((i % 6) * 9)) & 0b111) - p > 0))) {
                                    h = 1;
                                    for (int k = 0; k < 6; k++) {
                                        for (int l = 0; l < 6; l++) {
                                            if (((((c_a >> ((k % 6) * 9)) >> 3) & 0b111) - (p + 1)) == (((c_a >> ((l % 6) * 9)) >> 3) & 0b111) && (((c_a >> ((k % 6) * 9)) & 0b111) - (p + 1)) == ((c_a >> ((l % 6) * 9)) & 0b111) && ((((c_a >> ((k % 6) * 9)) >> 7) & 0b11) == 0b11)) {
                                                System.out.println("nie ma bicia");
                                                h = 0;
                                            }
                                            if (((((c_a >> ((k % 6) * 9)) >> 3) & 0b111) - (p + 1)) == (((c_b >> ((l % 6) * 9)) >> 3) & 0b111) && (((c_a >> ((k % 6) * 9)) & 0b111) - (p + 1)) == ((c_b >> ((l % 6) * 9)) & 0b111) && ((((c_a >> ((k % 6) * 9)) >> 7) & 0b11) == 0b11)) {
                                                System.out.println("nie ma bicia");
                                                h = 0;
                                            }
                                            if (((((c_a >> ((k % 6) * 9)) >> 3) & 0b111) - (p + 1)) == (((b_a >> ((l % 6) * 9)) >> 3) & 0b111) && (((c_a >> ((k % 6) * 9)) & 0b111) - (p + 1)) == ((b_a >> ((l % 6) * 9)) & 0b111) && ((((c_a >> ((k % 6) * 9)) >> 7) & 0b11) == 0b11)) {
                                                System.out.println("nie ma bicia");
                                                h = 0;
                                            }

                                            if (((((c_a >> ((k % 6) * 9)) >> 3) & 0b111) - (p + 1)) == (((b_b >> ((l % 6) * 9)) >> 3) & 0b111) && (((c_a >> ((k % 6) * 9)) & 0b111) - (p + 1)) == ((b_b >> ((l % 6) * 9)) & 0b111) && ((((c_a >> ((k % 6) * 9)) >> 7) & 0b11) == 0b11)) {
                                                System.out.println("nie ma bicia");
                                                h = 0;
                                            }
                                        }
                                    }
                                    if (h == 1) {
                                        System.out.println("bicie z pozycji " + (((c_a >> ((i % 6) * 9)) & 0b111) + 1) + "," + ((((c_a >> ((i % 6) * 9)) >> 3) & 0b111) + 1));
                                        glo_bb = glo_bb + 2;
                                    }


                                } else {
                                    h = 0;
                                }
                            }
                        }
                    }
                }
                if (p == 8)
                    h = 0;
            }


            //;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
            h = 2;
            p = 0;
            while (h == 2) {
                p++;


                for (int i = 0; i < 6; i++) {


                    for (int j = 0; j < 6; j++) {


                        if (((((c_b >> ((i % 6) * 9)) >> 3) & 0b111) + p) == (((c_a >> ((j % 6) * 9)) >> 3) & 0b111) && (((c_b >> ((i % 6) * 9)) & 0b111) + p) == ((c_a >> ((j % 6) * 9)) & 0b111) && ((((c_b >> ((i % 6) * 9)) >> 7) & 0b11) == 0b11)&&(((((c_a >> ((j % 6) * 9)) >> 8) & 0b1) == 0b1))) {
                            System.out.println(" swoj nie bijemy9");
                            h = 0;
                        }
                        if (((((c_b >> ((i % 6) * 9)) >> 3) & 0b111) + p) == (((c_b >> ((j % 6) * 9)) >> 3) & 0b111) && (((c_b >> ((i % 6) * 9)) & 0b111) + p) == ((c_b >> ((j % 6) * 9)) & 0b111) && ((((c_b >> ((i % 6) * 9)) >> 7) & 0b11) == 0b11)&&(((((c_b >> ((j % 6) * 9)) >> 8) & 0b1) == 0b1))) {
                            System.out.println(" swoj nie bijemy10");
                            h = 0;
                        } else {
                            if (((((c_b >> ((i % 6) * 9)) >> 3) & 0b111) + p) == (((b_a >> ((j % 6) * 9)) >> 3) & 0b111) && (((c_b >> ((i % 6) * 9)) & 0b111) + p) == ((b_a >> ((j % 6) * 9)) & 0b111) && ((((c_b >> ((i % 6) * 9)) >> 7) & 0b11) == 0b11)&&(((((b_a >> ((j % 6) * 9)) >> 8) & 0b1) == 0b1))) {
                                System.out.println(" wrog na linii 9");
                                if (((((c_b >> ((i % 6) * 9)) >> 3) & 0b111) + p) < 7 && ((((c_b >> ((i % 6) * 9)) & 0b111) + p < 7))) {
                                    h = 1;
                                    for (int k = 0; k < 6; k++) {
                                        for (int l = 0; l < 6; l++) {
                                            if (((((c_b >> ((k % 6) * 9)) >> 3) & 0b111) + (p + 1)) == (((c_a >> ((l % 6) * 9)) >> 3) & 0b111) && (((c_b >> ((k % 6) * 9)) & 0b111) + (p + 1)) == ((c_a >> ((l % 6) * 9)) & 0b111) && ((((c_b >> ((k % 6) * 9)) >> 7) & 0b11) == 0b11)) {
                                                System.out.println("nie ma bicia");
                                                h = 0;
                                            }
                                            if (((((c_b >> ((k % 6) * 9)) >> 3) & 0b111) + (p + 1)) == (((c_b >> ((l % 6) * 9)) >> 3) & 0b111) && (((c_b >> ((k % 6) * 9)) & 0b111) + (p + 1)) == ((c_b >> ((l % 6) * 9)) & 0b111) && ((((c_b >> ((k % 6) * 9)) >> 7) & 0b11) == 0b11)) {
                                                System.out.println("nie ma bicia");
                                                h = 0;
                                            }
                                            if (((((c_b >> ((k % 6) * 9)) >> 3) & 0b111) + (p + 1)) == (((b_a >> ((l % 6) * 9)) >> 3) & 0b111) && (((c_b >> ((k % 6) * 9)) & 0b111) + (p + 1)) == ((b_a >> ((l % 6) * 9)) & 0b111) && ((((c_b >> ((k % 6) * 9)) >> 7) & 0b11) == 0b11)) {
                                                System.out.println("nie ma bicia");
                                                h = 0;
                                            }

                                            if (((((c_b >> ((k % 6) * 9)) >> 3) & 0b111) + (p + 1)) == (((b_b >> ((l % 6) * 9)) >> 3) & 0b111) && (((c_b >> ((k % 6) * 9)) & 0b111) + (p + 1)) == ((b_b >> ((l % 6) * 9)) & 0b111) && ((((c_b >> ((k % 6) * 9)) >> 7) & 0b11) == 0b11)) {
                                                System.out.println("nie ma bicia");
                                                h = 0;
                                            }
                                        }
                                    }
                                    if (h == 1) {
                                        System.out.println("bicie z pozycji " + (((c_b >> ((i % 6) * 9)) & 0b111) + 1) + "," + ((((c_b >> ((i % 6) * 9)) >> 3) & 0b111) + 1));
                                        glo_bb = glo_bb + 2;
                                    }
                                } else {
                                    h = 0;
                                }
                                //;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


                            } else if (((((c_b >> ((i % 6) * 9)) >> 3) & 0b111) + p) == (((b_b >> ((j % 6) * 9)) >> 3) & 0b111) && (((c_b >> ((i % 6) * 9)) & 0b111) + p) == ((b_b >> ((j % 6) * 9)) & 0b111) && ((((c_b >> ((i % 6) * 9)) >> 7) & 0b11) == 0b11)&&(((((b_b >> ((j % 6) * 9)) >> 8) & 0b1) == 0b1))) {
                                System.out.println(" wrog na linii 10");
                                if (((((c_b >> ((i % 6) * 9)) >> 3) & 0b111) + p) < 7 && ((((c_b >> ((i % 6) * 9)) & 0b111) + p < 7))) {
                                    h = 1;
                                    for (int k = 0; k < 6; k++) {
                                        for (int l = 0; l < 6; l++) {
                                            if (((((c_b >> ((k % 6) * 9)) >> 3) & 0b111) + (p + 1)) == (((c_a >> ((l % 6) * 9)) >> 3) & 0b111) && (((c_b >> ((k % 6) * 9)) & 0b111) + (p + 1)) == ((c_a >> ((l % 6) * 9)) & 0b111) && ((((c_b >> ((k % 6) * 9)) >> 7) & 0b11) == 0b11)) {
                                                System.out.println("nie ma bicia");
                                                h = 0;
                                            }
                                            if (((((c_b >> ((k % 6) * 9)) >> 3) & 0b111) + (p + 1)) == (((c_b >> ((l % 6) * 9)) >> 3) & 0b111) && (((c_b >> ((k % 6) * 9)) & 0b111) + (p + 1)) == ((c_b >> ((l % 6) * 9)) & 0b111) && ((((c_b >> ((k % 6) * 9)) >> 7) & 0b11) == 0b11)) {
                                                System.out.println("nie ma bicia");
                                                h = 0;
                                            }
                                            if (((((c_b >> ((k % 6) * 9)) >> 3) & 0b111) + (p + 1)) == (((b_a >> ((l % 6) * 9)) >> 3) & 0b111) && (((c_b >> ((k % 6) * 9)) & 0b111) + (p + 1)) == ((b_a >> ((l % 6) * 9)) & 0b111) && ((((c_b >> ((k % 6) * 9)) >> 7) & 0b11) == 0b11)) {
                                                System.out.println("nie ma bicia");
                                                h = 0;
                                            }

                                            if (((((c_b >> ((k % 6) * 9)) >> 3) & 0b111) + (p + 1)) == (((b_b >> ((l % 6) * 9)) >> 3) & 0b111) && (((c_b >> ((k % 6) * 9)) & 0b111) + (p + 1)) == ((b_b >> ((l % 6) * 9)) & 0b111) && ((((c_b >> ((k % 6) * 9)) >> 7) & 0b11) == 0b11)) {
                                                System.out.println("nie ma bicia");
                                                h = 0;
                                            }
                                        }
                                    }
                                    if (h == 1) {
                                        System.out.println("bicie z pozycji " + (((c_b >> ((i % 6) * 9)) & 0b111) + 1) + "," + ((((c_b >> ((i % 6) * 9)) >> 3) & 0b111) + 1));
                                        glo_bb = glo_bb + 2;
                                    }

                                } else {
                                    h = 0;
                                }
                            }
                        }
                    }
                }
                if (p == 8)
                    h = 0;
            }

            //;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
            h = 2;
            p = 0;
            while (h == 2) {
                p++;


                for (int i = 0; i < 6; i++) {


                    for (int j = 0; j < 6; j++) {
                        if (((((c_b >> ((i % 6) * 9)) >> 3) & 0b111) + p) == (((c_b >> ((j % 6) * 9)) >> 3) & 0b111) && (((c_b >> ((i % 6) * 9)) & 0b111) - p) == ((c_b >> ((j % 6) * 9)) & 0b111) && ((((c_b >> ((i % 6) * 9)) >> 7) & 0b11) == 0b11)&&(((((c_a >> ((j % 6) * 9)) >> 8) & 0b1) == 0b1))) {
                            System.out.println(" swoj nie bijemy11");
                            h = 0;
                        }
                        if (((((c_b >> ((i % 6) * 9)) >> 3) & 0b111) + p) == (((c_a >> ((j % 6) * 9)) >> 3) & 0b111) && (((c_b >> ((i % 6) * 9)) & 0b111) - p) == ((c_a >> ((j % 6) * 9)) & 0b111) && ((((c_b >> ((i % 6) * 9)) >> 7) & 0b11) == 0b11)&&(((((c_b >> ((j % 6) * 9)) >> 8) & 0b1) == 0b1))) {
                            System.out.println(" swoj nie bijemy12");
                            h = 0;
                        } else {
                            if (((((c_b >> ((i % 6) * 9)) >> 3) & 0b111) + p) == (((b_a >> ((j % 6) * 9)) >> 3) & 0b111) && (((c_b >> ((i % 6) * 9)) & 0b111) - p) == ((b_a >> ((j % 6) * 9)) & 0b111) && ((((c_b >> ((i % 6) * 9)) >> 7) & 0b11) == 0b11)&&(((((b_a >> ((j % 6) * 9)) >> 8) & 0b1) == 0b1))) {
                                System.out.println(" wrog na linii 11");
                                if (((((c_b >> ((i % 6) * 9)) >> 3) & 0b111) + p) < 7 && ((((c_b >> ((i % 6) * 9)) & 0b111) - p > 0))) {
                                    h = 1;
                                    for (int k = 0; k < 6; k++) {
                                        for (int l = 0; l < 6; l++) {
                                            if (((((c_b >> ((k % 6) * 9)) >> 3) & 0b111) + (p + 1)) == (((c_a >> ((l % 6) * 9)) >> 3) & 0b111) && (((c_b >> ((k % 6) * 9)) & 0b111) - (p + 1)) == ((c_a >> ((l % 6) * 9)) & 0b111) && ((((c_b >> ((k % 6) * 9)) >> 7) & 0b11) == 0b11)) {
                                                System.out.println("nie ma bicia");
                                                h = 0;
                                            }
                                            if (((((c_b >> ((k % 6) * 9)) >> 3) & 0b111) + (p + 1)) == (((c_b >> ((l % 6) * 9)) >> 3) & 0b111) && (((c_b >> ((k % 6) * 9)) & 0b111) - (p + 1)) == ((c_b >> ((l % 6) * 9)) & 0b111) && ((((c_b >> ((k % 6) * 9)) >> 7) & 0b11) == 0b11)) {
                                                System.out.println("nie ma bicia");
                                                h = 0;
                                            }
                                            if (((((c_b >> ((k % 6) * 9)) >> 3) & 0b111) + (p + 1)) == (((b_a >> ((l % 6) * 9)) >> 3) & 0b111) && (((c_b >> ((k % 6) * 9)) & 0b111) - (p + 1)) == ((b_a >> ((l % 6) * 9)) & 0b111) && ((((c_b >> ((k % 6) * 9)) >> 7) & 0b11) == 0b11)) {
                                                System.out.println("nie ma bicia");
                                                h = 0;
                                            }

                                            if (((((c_b >> ((k % 6) * 9)) >> 3) & 0b111) + (p + 1)) == (((b_b >> ((l % 6) * 9)) >> 3) & 0b111) && (((c_b >> ((k % 6) * 9)) & 0b111) - (p + 1)) == ((b_b >> ((l % 6) * 9)) & 0b111) && ((((c_b >> ((k % 6) * 9)) >> 7) & 0b11) == 0b11)) {
                                                System.out.println("nie ma bicia");
                                                h = 0;
                                            }
                                        }
                                    }
                                    if (h == 1) {
                                        System.out.println("bicie z pozycji " + (((c_b >> ((i % 6) * 9)) & 0b111) + 1) + "," + ((((c_b >> ((i % 6) * 9)) >> 3) & 0b111) + 1));
                                        glo_bb = glo_bb + 2;
                                    }

                                } else {
                                    h = 0;
                                }
                            } else if (((((c_b >> ((i % 6) * 9)) >> 3) & 0b111) + p) == (((b_b >> ((j % 6) * 9)) >> 3) & 0b111) && (((c_b >> ((i % 6) * 9)) & 0b111) - p) == ((b_b >> ((j % 6) * 9)) & 0b111) && ((((c_b >> ((i % 6) * 9)) >> 7) & 0b11) == 0b11)&&(((((b_b >> ((j % 6) * 9)) >> 8) & 0b1) == 0b1))) {
                                System.out.println(" wrog na linii 12");
                                if (((((c_b >> ((i % 6) * 9)) >> 3) & 0b111) + p) < 7 && ((((c_b >> ((i % 6) * 9)) & 0b111) - p > 0))) {
                                    h = 1;
                                    for (int k = 0; k < 6; k++) {
                                        for (int l = 0; l < 6; l++) {
                                            if (((((c_b >> ((k % 6) * 9)) >> 3) & 0b111) + (p + 1)) == (((c_a >> ((l % 6) * 9)) >> 3) & 0b111) && (((c_b >> ((k % 6) * 9)) & 0b111) - (p + 1)) == ((c_a >> ((l % 6) * 9)) & 0b111) && ((((c_b >> ((k % 6) * 9)) >> 7) & 0b11) == 0b11)) {
                                                System.out.println("nie ma bicia");
                                                h = 0;
                                            }
                                            if (((((c_b >> ((k % 6) * 9)) >> 3) & 0b111) + (p + 1)) == (((c_b >> ((l % 6) * 9)) >> 3) & 0b111) && (((c_b >> ((k % 6) * 9)) & 0b111) - (p + 1)) == ((c_b >> ((l % 6) * 9)) & 0b111) && ((((c_b >> ((k % 6) * 9)) >> 7) & 0b11) == 0b11)) {
                                                System.out.println("nie ma bicia");
                                                h = 0;
                                            }
                                            if (((((c_b >> ((k % 6) * 9)) >> 3) & 0b111) + (p + 1)) == (((b_a >> ((l % 6) * 9)) >> 3) & 0b111) && (((c_b >> ((k % 6) * 9)) & 0b111) - (p + 1)) == ((b_a >> ((l % 6) * 9)) & 0b111) && ((((c_b >> ((k % 6) * 9)) >> 7) & 0b11) == 0b11)) {
                                                System.out.println("nie ma bicia");
                                                h = 0;
                                            }

                                            if (((((c_b >> ((k % 6) * 9)) >> 3) & 0b111) + (p + 1)) == (((b_b >> ((l % 6) * 9)) >> 3) & 0b111) && (((c_b >> ((k % 6) * 9)) & 0b111) - (p + 1)) == ((b_b >> ((l % 6) * 9)) & 0b111) && ((((c_b >> ((k % 6) * 9)) >> 7) & 0b11) == 0b11)) {
                                                System.out.println("nie ma bicia");
                                                h = 0;
                                            }
                                        }
                                    }
                                    if (h == 1) {
                                        System.out.println("bicie z pozycji " + (((c_b >> ((i % 6) * 9)) & 0b111) + 1) + "," + ((((c_b >> ((i % 6) * 9)) >> 3) & 0b111) + 1));
                                        glo_bb = glo_bb + 2;
                                    }

                                } else {
                                    h = 0;
                                }
                            }
                        }
                    }
                }
                if (p == 8)
                    h = 0;
            }
            //;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
            h = 2;
            p = 0;
            while (h == 2) {
                p++;


                for (int i = 0; i < 6; i++) {


                    for (int j = 0; j < 6; j++) {
                        if (((((c_b >> ((i % 6) * 9)) >> 3) & 0b111) - p) == (((c_b >> ((j % 6) * 9)) >> 3) & 0b111) && (((c_b >> ((i % 6) * 9)) & 0b111) + p) == ((c_b >> ((j % 6) * 9)) & 0b111) && ((((c_b >> ((i % 6) * 9)) >> 7) & 0b11) == 0b11)&&(((((c_a >> ((j % 6) * 9)) >> 8) & 0b1) == 0b1))) {
                            System.out.println(" swoj nie bijemy13");
                            h = 0;
                        }
                        if (((((c_b >> ((i % 6) * 9)) >> 3) & 0b111) - p) == (((c_a >> ((j % 6) * 9)) >> 3) & 0b111) && (((c_b >> ((i % 6) * 9)) & 0b111) + p) == ((c_a >> ((j % 6) * 9)) & 0b111) && ((((c_b >> ((i % 6) * 9)) >> 7) & 0b11) == 0b11)&&(((((c_b >> ((j % 6) * 9)) >> 8) & 0b1) == 0b1))) {
                            System.out.println(" swoj nie bijemy14");
                            h = 0;
                        } else {
                            if (((((c_b >> ((i % 6) * 9)) >> 3) & 0b111) - p) == (((b_a >> ((j % 6) * 9)) >> 3) & 0b111) && (((c_b >> ((i % 6) * 9)) & 0b111) + p) == ((b_a >> ((j % 6) * 9)) & 0b111) && ((((c_b >> ((i % 6) * 9)) >> 7) & 0b11) == 0b11)&&(((((b_a >> ((j % 6) * 9)) >> 8) & 0b1) == 0b1))) {
                                System.out.println(" wrog na linii 13");
                                if (((((c_b >> ((i % 6) * 9)) >> 3) & 0b111) - p) > 0 && ((((c_b >> ((i % 6) * 9)) & 0b111) + p < 7))) {
                                    h = 1;
                                    for (int k = 0; k < 6; k++) {
                                        for (int l = 0; l < 6; l++) {
                                            if (((((c_b >> ((k % 6) * 9)) >> 3) & 0b111) - (p + 1)) == (((c_a >> ((l % 6) * 9)) >> 3) & 0b111) && (((c_b >> ((k % 6) * 9)) & 0b111) + (p + 1)) == ((c_a >> ((l % 6) * 9)) & 0b111) && ((((c_b >> ((k % 6) * 9)) >> 7) & 0b11) == 0b11)) {
                                                System.out.println("nie ma bicia");
                                                h = 0;
                                            }
                                            if (((((c_b >> ((k % 6) * 9)) >> 3) & 0b111) - (p + 1)) == (((c_b >> ((l % 6) * 9)) >> 3) & 0b111) && (((c_b >> ((k % 6) * 9)) & 0b111) + (p + 1)) == ((c_b >> ((l % 6) * 9)) & 0b111) && ((((c_b >> ((k % 6) * 9)) >> 7) & 0b11) == 0b11)) {
                                                System.out.println("nie ma bicia");
                                                h = 0;
                                            }
                                            if (((((c_b >> ((k % 6) * 9)) >> 3) & 0b111) - (p + 1)) == (((b_a >> ((l % 6) * 9)) >> 3) & 0b111) && (((c_b >> ((k % 6) * 9)) & 0b111) + (p + 1)) == ((b_a >> ((l % 6) * 9)) & 0b111) && ((((c_b >> ((k % 6) * 9)) >> 7) & 0b11) == 0b11)) {
                                                System.out.println("nie ma bicia");
                                                h = 0;
                                            }

                                            if (((((c_b >> ((k % 6) * 9)) >> 3) & 0b111) - (p + 1)) == (((b_b >> ((l % 6) * 9)) >> 3) & 0b111) && (((c_b >> ((k % 6) * 9)) & 0b111) + (p + 1)) == ((b_b >> ((l % 6) * 9)) & 0b111) && ((((c_b >> ((k % 6) * 9)) >> 7) & 0b11) == 0b11)) {
                                                System.out.println("nie ma bicia");
                                                h = 0;
                                            }
                                        }
                                    }
                                    if (h == 1) {
                                        System.out.println("bicie z pozycji " + (((c_b >> ((i % 6) * 9)) & 0b111) + 1) + "," + ((((c_b >> ((i % 6) * 9)) >> 3) & 0b111) + 1));
                                        glo_bb = glo_bb + 2;
                                    }

                                } else {
                                    h = 0;
                                }
                            } else if (((((c_b >> ((i % 6) * 9)) >> 3) & 0b111) - p) == (((b_b >> ((j % 6) * 9)) >> 3) & 0b111) && (((c_b >> ((i % 6) * 9)) & 0b111) + p) == ((b_b >> ((j % 6) * 9)) & 0b111) && ((((c_b >> ((i % 6) * 9)) >> 7) & 0b11) == 0b11)&&(((((b_b >> ((j % 6) * 9)) >> 8) & 0b1) == 0b1))) {
                                System.out.println(" wrog na linii 14");
                                if (((((c_b >> ((i % 6) * 9)) >> 3) & 0b111) - p) > 0 && ((((c_b >> ((i % 6) * 9)) & 0b111) + p < 7))) {
                                    h = 1;
                                    for (int k = 0; k < 6; k++) {
                                        for (int l = 0; l < 6; l++) {
                                            if (((((c_b >> ((k % 6) * 9)) >> 3) & 0b111) - (p + 1)) == (((c_a >> ((l % 6) * 9)) >> 3) & 0b111) && (((c_b >> ((k % 6) * 9)) & 0b111) + (p + 1)) == ((c_a >> ((l % 6) * 9)) & 0b111) && ((((c_b >> ((k % 6) * 9)) >> 7) & 0b11) == 0b11)) {
                                                System.out.println("nie ma bicia");
                                                h = 0;
                                            }
                                            if (((((c_b >> ((k % 6) * 9)) >> 3) & 0b111) - (p + 1)) == (((c_b >> ((l % 6) * 9)) >> 3) & 0b111) && (((c_b >> ((k % 6) * 9)) & 0b111) + (p + 1)) == ((c_b >> ((l % 6) * 9)) & 0b111) && ((((c_b >> ((k % 6) * 9)) >> 7) & 0b11) == 0b11)) {
                                                System.out.println("nie ma bicia");
                                                h = 0;
                                            }
                                            if (((((c_b >> ((k % 6) * 9)) >> 3) & 0b111) - (p + 1)) == (((b_a >> ((l % 6) * 9)) >> 3) & 0b111) && (((c_b >> ((k % 6) * 9)) & 0b111) + (p + 1)) == ((b_a >> ((l % 6) * 9)) & 0b111) && ((((c_b >> ((k % 6) * 9)) >> 7) & 0b11) == 0b11)) {
                                                System.out.println("nie ma bicia");
                                                h = 0;
                                            }

                                            if (((((c_b >> ((k % 6) * 9)) >> 3) & 0b111) - (p + 1)) == (((b_b >> ((l % 6) * 9)) >> 3) & 0b111) && (((c_b >> ((k % 6) * 9)) & 0b111) + (p + 1)) == ((b_b >> ((l % 6) * 9)) & 0b111) && ((((c_b >> ((k % 6) * 9)) >> 7) & 0b11) == 0b11)) {
                                                System.out.println("nie ma bicia");
                                                h = 0;
                                            }
                                        }
                                    }
                                    if (h == 1) {
                                        System.out.println("bicie z pozycji " + (((c_b >> ((i % 6) * 9)) & 0b111) + 1) + "," + ((((c_b >> ((i % 6) * 9)) >> 3) & 0b111) + 1));
                                        glo_bb = glo_bb + 2;
                                    }

                                } else {
                                    h = 0;
                                }
                            }
                        }
                    }
                }
                if (p == 8)
                    h = 0;
            }

            //;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
            h = 2;
            p = 0;
            while (h == 2) {
                p++;


                for (int i = 0; i < 6; i++) {


                    for (int j = 0; j < 6; j++) {
                        if (((((c_b >> ((i % 6) * 9)) >> 3) & 0b111) - p) == (((c_b >> ((j % 6) * 9)) >> 3) & 0b111) && (((c_b >> ((i % 6) * 9)) & 0b111) - p) == ((c_b >> ((j % 6) * 9)) & 0b111) && ((((c_b >> ((i % 6) * 9)) >> 7) & 0b11) == 0b11)&&(((((c_a >> ((j % 6) * 9)) >> 8) & 0b1) == 0b1))) {
                            System.out.println(" swoj nie bijemy15");
                            h = 0;
                        }
                        if (((((c_b >> ((i % 6) * 9)) >> 3) & 0b111) - p) == (((c_a >> ((j % 6) * 9)) >> 3) & 0b111) && (((c_b >> ((i % 6) * 9)) & 0b111) - p) == ((c_a >> ((j % 6) * 9)) & 0b111) && ((((c_b >> ((i % 6) * 9)) >> 7) & 0b11) == 0b11)&&(((((c_b >> ((j % 6) * 9)) >> 8) & 0b1) == 0b1))) {
                            System.out.println(" swoj nie bijemy16");
                            h = 0;
                        } else {
                            if (((((c_b >> ((i % 6) * 9)) >> 3) & 0b111) - p) == (((b_a >> ((j % 6) * 9)) >> 3) & 0b111) && (((c_b >> ((i % 6) * 9)) & 0b111) - p) == ((b_a >> ((j % 6) * 9)) & 0b111) && ((((c_b >> ((i % 6) * 9)) >> 7) & 0b11) == 0b11)&&(((((b_a >> ((j % 6) * 9)) >> 8) & 0b1) == 0b1))) {
                                System.out.println(" wrog na linii 15");
                                if (((((c_b >> ((i % 6) * 9)) >> 3) & 0b111) - p) > 0 && (((((c_b >> ((i % 6) * 9)) & 0b111) - p) > 0))) {
                                    h = 1;
                                    for (int k = 0; k < 6; k++) {
                                        for (int l = 0; l < 6; l++) {
                                            if (((((c_b >> ((k % 6) * 9)) >> 3) & 0b111) - (p + 1)) == (((c_a >> ((l % 6) * 9)) >> 3) & 0b111) && (((c_b >> ((k % 6) * 9)) & 0b111) - (p + 1)) == ((c_a >> ((l % 6) * 9)) & 0b111) && ((((c_b >> ((k % 6) * 9)) >> 7) & 0b11) == 0b11)) {
                                                System.out.println("nie ma bicia");
                                                h = 0;
                                            }
                                            if (((((c_b >> ((k % 6) * 9)) >> 3) & 0b111) - (p + 1)) == (((c_b >> ((l % 6) * 9)) >> 3) & 0b111) && (((c_b >> ((k % 6) * 9)) & 0b111) - (p + 1)) == ((c_b >> ((l % 6) * 9)) & 0b111) && ((((c_b >> ((k % 6) * 9)) >> 7) & 0b11) == 0b11)) {
                                                System.out.println("nie ma bicia");
                                                h = 0;
                                            }
                                            if (((((c_b >> ((k % 6) * 9)) >> 3) & 0b111) - (p + 1)) == (((b_a >> ((l % 6) * 9)) >> 3) & 0b111) && (((c_b >> ((k % 6) * 9)) & 0b111) - (p + 1)) == ((b_a >> ((l % 6) * 9)) & 0b111) && ((((c_b >> ((k % 6) * 9)) >> 7) & 0b11) == 0b11)) {
                                                System.out.println("nie ma bicia");
                                                h = 0;
                                            }

                                            if (((((c_b >> ((k % 6) * 9)) >> 3) & 0b111) - (p + 1)) == (((b_b >> ((l % 6) * 9)) >> 3) & 0b111) && (((c_b >> ((k % 6) * 9)) & 0b111) - (p + 1)) == ((b_b >> ((l % 6) * 9)) & 0b111) && ((((c_b >> ((k % 6) * 9)) >> 7) & 0b11) == 0b11)) {
                                                System.out.println("nie ma bicia");
                                                h = 0;
                                            }
                                        }
                                    }
                                    if (h == 1) {
                                        System.out.println("bicie z pozycji " + (((c_b >> ((i % 6) * 9)) & 0b111) + 1) + "," + ((((c_b >> ((i % 6) * 9)) >> 3) & 0b111) + 1));
                                        glo_bb = glo_bb + 2;
                                    }

                                } else {
                                    h = 0;
                                }
                            } else if (((((c_b >> ((i % 6) * 9)) >> 3) & 0b111) - p) == (((b_b >> ((j % 6) * 9)) >> 3) & 0b111) && (((c_b >> ((i % 6) * 9)) & 0b111) - p) == ((b_b >> ((j % 6) * 9)) & 0b111) && ((((c_b >> ((i % 6) * 9)) >> 7) & 0b11) == 0b11)&&(((((b_b >> ((j % 6) * 9)) >> 8) & 0b1) == 0b1))) {
                                System.out.println(" wrog na linii 16");
                                if (((((c_b >> ((i % 6) * 9)) >> 3) & 0b111) - p) > 0 && (((((c_b >> ((i % 6) * 9)) & 0b111) - p) > 0))) {
                                    h = 1;
                                    for (int k = 0; k < 6; k++) {
                                        for (int l = 0; l < 6; l++) {
                                            if (((((c_b >> ((k % 6) * 9)) >> 3) & 0b111) - (p + 1)) == (((c_a >> ((l % 6) * 9)) >> 3) & 0b111) && (((c_b >> ((k % 6) * 9)) & 0b111) - (p + 1)) == ((c_a >> ((l % 6) * 9)) & 0b111) && ((((c_b >> ((k % 6) * 9)) >> 7) & 0b11) == 0b11)) {
                                                System.out.println("nie ma bicia");
                                                h = 0;
                                            }
                                            if (((((c_b >> ((k % 6) * 9)) >> 3) & 0b111) - (p + 1)) == (((c_b >> ((l % 6) * 9)) >> 3) & 0b111) && (((c_b >> ((k % 6) * 9)) & 0b111) - (p + 1)) == ((c_b >> ((l % 6) * 9)) & 0b111) && ((((c_b >> ((k % 6) * 9)) >> 7) & 0b11) == 0b11)) {
                                                System.out.println("nie ma bicia");
                                                h = 0;
                                            }
                                            if (((((c_b >> ((k % 6) * 9)) >> 3) & 0b111) - (p + 1)) == (((b_a >> ((l % 6) * 9)) >> 3) & 0b111) && (((c_b >> ((k % 6) * 9)) & 0b111) - (p + 1)) == ((b_a >> ((l % 6) * 9)) & 0b111) && ((((c_b >> ((k % 6) * 9)) >> 7) & 0b11) == 0b11)) {
                                                System.out.println("nie ma bicia");
                                                h = 0;
                                            }

                                            if (((((c_b >> ((k % 6) * 9)) >> 3) & 0b111) - (p + 1)) == (((b_b >> ((l % 6) * 9)) >> 3) & 0b111) && (((c_b >> ((k % 6) * 9)) & 0b111) - (p + 1)) == ((b_b >> ((l % 6) * 9)) & 0b111) && ((((c_b >> ((k % 6) * 9)) >> 7) & 0b11) == 0b11)) {
                                                System.out.println("nie ma bicia");
                                                h = 0;
                                            }
                                        }
                                    }
                                    if (h == 1) {
                                        System.out.println("bicie z pozycji " + (((c_b >> ((i % 6) * 9)) & 0b111) + 1) + "," + ((((c_b >> ((i % 6) * 9)) >> 3) & 0b111) + 1));
                                        glo_bb = glo_bb + 2;
                                    }
                                } else {
                                    h = 0;
                                }

                            }
                        }
                    }
                }
                if (p == 8)
                    h = 0;
            }return glo_bb;
}
    public static void plansza (long b_a,long b_b,long c_a,long c_b)
    {
        for (int i = 7; i >= 0; i--) {
            for (int j = 0; j < 8; j++) {

                int field = ((i + j) % 2);


                for (int k = 0; k < 12; k++) {
                    if ((k / 6) < 1) {
                        if (((((b_a >> ((k % 6) * 9)) >> 7) & 0b11) == 2) && (((b_a >> ((k % 6) * 9)) & 0b111) == j) && ((((b_a >> ((k % 6) * 9)) >> 3) & 0b111) == i))// & ((((biale_a >> ((k % 6) * 9)) >> 8) & 0b1) == 1)) ;
                            field = 2;
                        if (((((b_a >> ((k % 6) * 9)) >> 7) & 0b11) == 3) && (((b_a >> ((k % 6) * 9)) & 0b111) == j) && ((((b_a >> ((k % 6) * 9)) >> 3) & 0b111) == i))// & ((((biale_a >> ((k % 6) * 9)) >> 8) & 0b1) == 1)) ;
                            field = 4;
                    } else {
                        if (((((b_b >> ((k % 6) * 9)) >> 7) & 0b11) == 2) && (((b_b >> ((k % 6) * 9)) & 0b111) == j) && ((((b_b >> ((k % 6) * 9)) >> 3) & 0b111) == i)) //& ((((biale_b >> ((k % 6) * 9)) >> 8) & 0b1) == 1)) ;
                            field = 2;
                        if (((((b_b >> ((k % 6) * 9)) >> 7) & 0b11) == 3) && (((b_b >> ((k % 6) * 9)) & 0b111) == j) && ((((b_b >> ((k % 6) * 9)) >> 3) & 0b111) == i)) //& ((((biale_b >> ((k % 6) * 9)) >> 8) & 0b1) == 1)) ;
                            field = 4;
                    }
                }


                for (int k = 0; k < 12; k++) {
                    if ((k / 6) < 1) {
                        if (((((c_a >> ((k % 6) * 9)) >> 7) & 0b11) == 2) && (((c_a >> ((k % 6) * 9)) & 0b111) == j) && ((((c_a >> ((k % 6) * 9)) >> 3) & 0b111) == i))//& ((((czarne_a >> ((k % 6) * 9)) >> 8) & 0b1) == 1)) ;
                            field = 3;
                        if (((((c_a >> ((k % 6) * 9)) >> 7) & 0b11) == 3) && (((c_a >> ((k % 6) * 9)) & 0b111) == j) && ((((c_a >> ((k % 6) * 9)) >> 3) & 0b111) == i))//& ((((czarne_a >> ((k % 6) * 9)) >> 8) & 0b1) == 1)) ;
                            field = 5;
                    } else {
                        if (((((c_b >> ((k % 6) * 9)) >> 7) & 0b11) == 2) && (((c_b >> ((k % 6) * 9)) & 0b111) == j) && ((((c_b >> ((k % 6) * 9)) >> 3) & 0b111) == i))//& ((((czarne_b >> ((k % 6) * 9)) >> 8) & 0b1) == 1)) ;
                            field = 3;
                        if (((((c_b >> ((k % 6) * 9)) >> 7) & 0b11) == 3) && (((c_b >> ((k % 6) * 9)) & 0b111) == j) && ((((c_b >> ((k % 6) * 9)) >> 3) & 0b111) == i))//& ((((czarne_b >> ((k % 6) * 9)) >> 8) & 0b1) == 1)) ;
                            field = 5;
                    }
                }


                switch (field) {
                    case 0:
                        System.out.print("\u2b1c");
                        break;
                    case 2:

                        System.out.print("\u265f");
                        break;
                    case 3:
                        System.out.print("\u2659");
                        break;
                    case 4:
                        System.out.print("\u265b");
                        break;
                    case 5:
                        System.out.print("\u2655");
                        break;
                    default:
                        System.out.print("\u2b1b" + " ");
                        break;
                }
            }

            System.out.println();
        }}
public static void tworzenieDamki(long x_a,long x_b){
    for (int i = 0; i < 12; i++) {

        if ((i / 6) < 1)
            if (((((x_a >> ((i % 6) * 9))) & 0b100 << 6) == 0b100 << 6) && ((((x_a >> ((i % 6) * 9)) >> 3) & 0b111) == 7)) {
                x_a = x_a & (~(0b10000000L << ((i % 6) * 9)));
                x_a = x_a | (0b10000000 << ((i % 6) * 9));
            } else if (((((x_b >> ((i % 6) * 9))) & 0b100 << 6) == 0b100 << 6) && ((((x_b >> ((i % 6) * 9)) >> 3) & 0b111) == 7)) {
                x_b = x_b & (~(0b10000000L << ((i % 6) * 9)));
                x_b = x_b | (0b10000000L << ((i % 6) * 9));
            }

    }
}
    public static void main(String[] args) {
        Scanner scan = new Scanner(System.in);


        long czarne_a = 0b100_000_000_100_010_000_100_001_001_100_010_010_100_000_010_100_001_011L;
        long czarne_b = 0b100_010_100_100_000_100_100_001_101_100_010_110_100_000_110_100_001_111L;
        long biale_a = 0b101_110_000_101_111_001_101_101_001_101_110_010_101_111_011_101_101_011L;
        long biale_b = 0b101_110_100_101_111_101_101_101_101_101_110_110_101_111_111_101_101_111L;

        int gra = 1;
        int wx;
        int wy;
        int wdx;
        int wdy;
        int x = 0;
        int bb;
        int glo_bb;
        long wsp_y;
        long wsp_x;

        long noweWspol;



        // Tura bialych
//==========================================================================

        do {
//                                         PLANSZA
            System.out.println(" TURA BIALYCH");

            plansza(biale_a,biale_b,czarne_a,czarne_b);

            System.out.println();

//================================================================================================
           //sprwadzenie bicia pionow
            bb = 0;

            glo_bb = 0;


            for (int i = 0; i < 12; i++) {


                for (int j = 0; j < 6; j++) {

                    if ((i / 6) < 1) {
                        wsp_y = (((biale_a >> ((i % 6) * 9)) >> 3) & 0b111);
                        wsp_x = ((biale_a >> ((i % 6) * 9)) & 0b111);


                        if ((((((biale_a >> ((i % 6) * 9)) >> 3) & 0b111) - 1) == (((czarne_a >> ((j % 6) * 9)) >> 3) & 0b111)) && ((((biale_a >> ((i % 6) * 9)) & 0b111) - 1) == ((czarne_a >> ((j % 6) * 9)) & 0b111)) && ((((czarne_a >> ((j % 6) * 9)) >> 8) & 0b1) == 1) && ((((biale_a >> ((i % 6) * 9)) >> 8) & 0b1) == 1)) {
                            System.out.println("jest1");
                            bb = bb + 2;

                            for (int l = 0; l < 6; l++) {
                                if (((wsp_y - 2) == (((biale_a >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wsp_x - 2) == ((biale_a >> ((l % 6) * 9)) & 0b111)) && ((((biale_a >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                    bb = bb + 1;
                                    System.out.println(l + "dupaX");
                                }
                                if (((wsp_y - 2) == (((biale_b >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wsp_x - 2) == ((biale_b >> ((l % 6) * 9)) & 0b111)) && ((((biale_b >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                    bb = bb + 1;
                                    System.out.println(l + "dupaA" + l + i);
                                }
                                if (((wsp_y - 2) == (((czarne_a >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wsp_x - 2) == ((czarne_a >> ((l % 6) * 9)) & 0b111)) && ((((czarne_a >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                    bb = bb + 1;
                                    System.out.println(l + "dupaB");
                                }
                                if (((wsp_y - 2) == (((czarne_b >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wsp_x - 2) == ((czarne_b >> ((l % 6) * 9)) & 0b111)) && ((((czarne_b >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                    bb = bb + 1;
                                    System.out.println(l + "dupaC");
                                }
                            }

                            if ((bb % 2) == 0 && ((wsp_x - 2 > 0) && (wsp_y - 2 > 0))) {
                                System.out.println("Nalezy przesunac pion z pozycji" + " " + (((biale_a >> ((i % 6) * 9)) & 0b111) + 1) + " " + "," + " " + ((((biale_a >> ((i % 6) * 9)) >> 3) & 0b111) + 1));
                                glo_bb = glo_bb + 2;
                            } else
                                bb = 0;


                        }
                        //---------------------------------------------------------------------

                        if ((((((biale_a >> ((i % 6) * 9)) >> 3) & 0b111) - 1) == (((czarne_b >> ((j % 6) * 9)) >> 3) & 0b111)) && ((((biale_a >> ((i % 6) * 9)) & 0b111) - 1) == ((czarne_b >> ((j % 6) * 9)) & 0b111)) && ((((czarne_b >> ((j % 6) * 9)) >> 8) & 0b1) == 1) && ((((biale_a >> ((i % 6) * 9)) >> 8) & 0b1) == 1)) {
                            System.out.println("jest2");
                            bb = bb + 2;
                            for (int l = 0; l < 6; l++) {
                                if (((wsp_y - 2) == (((biale_a >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wsp_x - 2) == ((biale_a >> ((l % 6) * 9)) & 0b111)) && ((((biale_a >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                    bb = bb + 1;
                                    System.out.println(l + "dupaX");
                                }
                                if (((wsp_y - 2) == (((biale_b >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wsp_x - 2) == ((biale_b >> ((l % 6) * 9)) & 0b111)) && ((((biale_b >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                    bb = bb + 1;
                                    System.out.println(l + "dupaA" + l + i);
                                }
                                if (((wsp_y - 2) == (((czarne_a >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wsp_x - 2) == ((czarne_a >> ((l % 6) * 9)) & 0b111)) && ((((czarne_a >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                    bb = bb + 1;
                                    System.out.println(l + "dupaB");
                                }
                                if (((wsp_y - 2) == (((czarne_b >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wsp_x - 2) == ((czarne_b >> ((l % 6) * 9)) & 0b111)) && ((((czarne_b >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                    bb = bb + 1;
                                    System.out.println(l + "dupaC");
                                }

                            }

                            if ((bb % 2) == 0 && ((wsp_x - 2 > 0) && (wsp_y - 2 > 0))) {
                                System.out.println("Nalezy przesunac pion z pozycji" + " " + (((biale_a >> ((i % 6) * 9)) & 0b111) + 1) + " " + "," + " " + ((((biale_a >> ((i % 6) * 9)) >> 3) & 0b111) + 1));
                                glo_bb = glo_bb + 2;
                            } else
                                bb = 0;
                        }


                        //...=====================================================================================================================
                        if ((((((biale_a >> ((i % 6) * 9)) >> 3) & 0b111) - 1) == (((czarne_a >> ((j % 6) * 9)) >> 3) & 0b111)) && ((((biale_a >> ((i % 6) * 9)) & 0b111) + 1) == ((czarne_a >> ((j % 6) * 9)) & 0b111)) && ((((czarne_a >> ((j % 6) * 9)) >> 8) & 0b1) == 1) && ((((biale_a >> ((i % 6) * 9)) >> 8) & 0b1) == 1)) {

                            System.out.println("jest003");
                            bb = bb + 2;
                            for (int l = 0; l < 6; l++) {
                                if (((wsp_y - 2) == (((biale_a >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wsp_x + 2) == ((biale_a >> ((l % 6) * 9)) & 0b111)) && ((((biale_a >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                    bb = bb + 1;
                                    System.out.println(l + "dupaX");
                                }
                                if (((wsp_y - 2) == (((biale_b >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wsp_x + 2) == ((biale_b >> ((l % 6) * 9)) & 0b111)) && ((((biale_b >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                    bb = bb + 1;
                                    System.out.println(l + "dupaA" + l + i);
                                }
                                if (((wsp_y - 2) == (((czarne_a >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wsp_x + 2) == ((czarne_a >> ((l % 6) * 9)) & 0b111)) && ((((czarne_a >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                    bb = bb + 1;
                                    System.out.println(l + "dupaB");
                                }
                                if (((wsp_y - 2) == (((czarne_b >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wsp_x + 2) == ((czarne_b >> ((l % 6) * 9)) & 0b111)) && ((((czarne_b >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                    bb = bb + 1;
                                    System.out.println(l + "dupaC");
                                }

                            }

                            if ((bb % 2) == 0 && ((wsp_x + 2 < 8) && (wsp_y - 2 > 0))) {
                                System.out.println("Nalezy przesunac pion z pozycji" + " " + (((biale_a >> ((i % 6) * 9)) & 0b111) + 1) + " " + "," + " " + ((((biale_a >> ((i % 6) * 9)) >> 3) & 0b111) + 1));
                                glo_bb = glo_bb + 2;
                            } else
                                bb = 0;
                        }

//----------------------------------------------------------------------------------------------------------------------------------------
                        if ((((((biale_a >> ((i % 6) * 9)) >> 3) & 0b111) - 1) == (((czarne_b >> ((j % 6) * 9)) >> 3) & 0b111)) && ((((biale_a >> ((i % 6) * 9)) & 0b111) + 1) == ((czarne_b >> ((j % 6) * 9)) & 0b111)) && ((((czarne_b >> ((j % 6) * 9)) >> 8) & 0b1) == 1) && ((((biale_a >> ((i % 6) * 9)) >> 8) & 0b1) == 1)) {
                            System.out.println("jest  4");
                            bb = bb + 2;
                            for (int l = 0; l < 6; l++) {
                                if (((wsp_y - 2) == (((biale_a >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wsp_x + 2) == ((biale_a >> ((l % 6) * 9)) & 0b111)) && ((((biale_a >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                    bb = bb + 1;
                                    System.out.println(l + "dupaX");
                                }
                                if (((wsp_y - 2) == (((biale_b >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wsp_x + 2) == ((biale_b >> ((l % 6) * 9)) & 0b111)) && ((((biale_b >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                    bb = bb + 1;
                                    System.out.println(l + "dupaA" + l + i);
                                }
                                if (((wsp_y - 2) == (((czarne_a >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wsp_x + 2) == ((czarne_a >> ((l % 6) * 9)) & 0b111)) && ((((czarne_a >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                    bb = bb + 1;
                                    System.out.println(l + "dupaB");
                                }
                                if (((wsp_y - 2) == (((czarne_b >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wsp_x + 2) == ((czarne_b >> ((l % 6) * 9)) & 0b111)) && ((((czarne_b >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                    bb = bb + 1;
                                    System.out.println(l + "dupaC");
                                }
                            }

                            if ((bb % 2) == 0 && ((wsp_x + 2 < 8) && (wsp_y - 2 > 0))) {
                                System.out.println("Nalezy przesunac pion z pozycji" + " " + (((biale_a >> ((i % 6) * 9)) & 0b111) + 1) + " " + "," + " " + ((((biale_a >> ((i % 6) * 9)) >> 3) & 0b111) + 1));
                                glo_bb = glo_bb + 2;
                            } else
                                bb = 0;
                        }
                        //--------------------------------------------------------------------------------------------------------------------
                        if ((((((biale_a >> ((i % 6) * 9)) >> 3) & 0b111) + 1) == (((czarne_a >> ((j % 6) * 9)) >> 3) & 0b111)) && ((((biale_a >> ((i % 6) * 9)) & 0b111) + 1) == ((czarne_a >> ((j % 6) * 9)) & 0b111)) && ((((czarne_a >> ((j % 6) * 9)) >> 8) & 0b1) == 1) && ((((biale_a >> ((i % 6) * 9)) >> 8) & 0b1) == 1)) {
                            System.out.println("jest5x");
                            bb = bb + 2;
                            for (int l = 0; l < 6; l++) {
                                if (((wsp_y + 2) == (((biale_a >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wsp_x + 2) == ((biale_a >> ((l % 6) * 9)) & 0b111)) && ((((biale_a >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                    bb = bb + 1;
                                    System.out.println(l + "dupaX");
                                }
                                if (((wsp_y + 2) == (((biale_b >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wsp_x + 2) == ((biale_b >> ((l % 6) * 9)) & 0b111)) && ((((biale_b >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                    bb = bb + 1;
                                    System.out.println(l + "dupaA" + l + i);
                                }
                                if (((wsp_y + 2) == (((czarne_a >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wsp_x + 2) == ((czarne_a >> ((l % 6) * 9)) & 0b111)) && ((((czarne_a >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                    bb = bb + 1;
                                    System.out.println(l + "dupaB");
                                }
                                if (((wsp_y + 2) == (((czarne_b >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wsp_x + 2) == ((czarne_b >> ((l % 6) * 9)) & 0b111)) && ((((czarne_b >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                    bb = bb + 1;
                                    System.out.println(l + "dupaC");
                                }

                            }

                            if ((bb % 2) == 0 && ((wsp_x + 2 < 8) && (wsp_y + 2 < 8))) {
                                System.out.println("Nalezy przesunac pion z pozycji" + " " + (((biale_a >> ((i % 6) * 9)) & 0b111) + 1) + " " + "," + " " + ((((biale_a >> ((i % 6) * 9)) >> 3) & 0b111) + 1));
                                glo_bb = glo_bb + 2;
                            } else
                                bb = 0;
                        }
                        //---------------------------------------------------------------------

                        if ((((((biale_a >> ((i % 6) * 9)) >> 3) & 0b111) + 1) == (((czarne_b >> ((j % 6) * 9)) >> 3) & 0b111)) && ((((biale_a >> ((i % 6) * 9)) & 0b111) + 1) == ((czarne_b >> ((j % 6) * 9)) & 0b111)) && ((((czarne_b >> ((j % 6) * 9)) >> 8) & 0b1) == 1) && ((((biale_a >> ((i % 6) * 9)) >> 8) & 0b1) == 1)) {
                            System.out.println("jest6");
                            bb = bb + 2;
                            for (int l = 0; l < 6; l++) {
                                if (((wsp_y + 2) == (((biale_a >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wsp_x + 2) == ((biale_a >> ((l % 6) * 9)) & 0b111)) && ((((biale_a >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                    bb = bb + 1;
                                    System.out.println(l + "dupaX");
                                }
                                if (((wsp_y + 2) == (((biale_b >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wsp_x + 2) == ((biale_b >> ((l % 6) * 9)) & 0b111)) && ((((biale_b >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                    bb = bb + 1;
                                    System.out.println(l + "dupaA" + l + i);
                                }
                                if (((wsp_y + 2) == (((czarne_a >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wsp_x + 2) == ((czarne_a >> ((l % 6) * 9)) & 0b111)) && ((((czarne_a >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                    bb = bb + 1;
                                    System.out.println(l + "dupaB");
                                }
                                if (((wsp_y + 2) == (((czarne_b >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wsp_x + 2) == ((czarne_b >> ((l % 6) * 9)) & 0b111)) && ((((czarne_b >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                    bb = bb + 1;
                                    System.out.println(l + "dupaC");
                                }

                            }

                            if ((bb % 2) == 0 && ((wsp_x - 2 > 0) || (wsp_x + 2 < 8) || (wsp_y - 2 > 0) || (wsp_y + 2 < 8))) {
                                System.out.println("Nalezy przesunac pion z pozycji" + " " + (((biale_a >> ((i % 6) * 9)) & 0b111) + 1) + " " + "," + " " + ((((biale_a >> ((i % 6) * 9)) >> 3) & 0b111) + 1));
                                glo_bb = glo_bb + 2;
                            } else
                                bb = 0;
                        }


                        if ((((((biale_a >> ((i % 6) * 9)) >> 3) & 0b111) + 1) == (((czarne_a >> ((j % 6) * 9)) >> 3) & 0b111)) && ((((biale_a >> ((i % 6) * 9)) & 0b111) - 1) == ((czarne_a >> ((j % 6) * 9)) & 0b111)) && ((((czarne_a >> ((j % 6) * 9)) >> 8) & 0b1) == 1) && ((((biale_a >> ((i % 6) * 9)) >> 8) & 0b1) == 1)) {
                            System.out.println("jest7");

                            bb = bb + 2;
                            for (int l = 0; l < 6; l++) {
                                if (((wsp_y + 2) == (((biale_a >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wsp_x - 2) == ((biale_a >> ((l % 6) * 9)) & 0b111)) && ((((biale_a >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                    bb = bb + 1;
                                    System.out.println(l + "dupaX");
                                }
                                if (((wsp_y + 2) == (((biale_b >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wsp_x - 2) == ((biale_b >> ((l % 6) * 9)) & 0b111)) && ((((biale_b >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                    bb = bb + 1;
                                    System.out.println(l + "dupaA" + l + i);
                                }
                                if (((wsp_y + 2) == (((czarne_a >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wsp_x - 2) == ((czarne_a >> ((l % 6) * 9)) & 0b111)) && ((((czarne_a >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                    bb = bb + 1;
                                    System.out.println(l + "dupaB");
                                }
                                if (((wsp_y + 2) == (((czarne_b >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wsp_x - 2) == ((czarne_b >> ((l % 6) * 9)) & 0b111)) && ((((czarne_b >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                    bb = bb + 1;
                                    System.out.println(l + "dupaC");
                                }
                            }

                            if ((bb % 2) == 0 && ((wsp_x - 2 > 0) && (wsp_y + 2 < 8))) {
                                System.out.println("Nalezy przesunac pion z pozycji" + " " + (((biale_a >> ((i % 6) * 9)) & 0b111) + 1) + " " + "," + " " + ((((biale_a >> ((i % 6) * 9)) >> 3) & 0b111) + 1));
                                glo_bb = glo_bb + 2;
                            } else
                                bb = 0;
                        }
                        //---------------------------------------------------------------------

                        if ((((((biale_a >> ((i % 6) * 9)) >> 3) & 0b111) + 1) == (((czarne_b >> ((j % 6) * 9)) >> 3) & 0b111)) && ((((biale_a >> ((i % 6) * 9)) & 0b111) - 1) == ((czarne_b >> ((j % 6) * 9)) & 0b111)) && ((((czarne_b >> ((j % 6) * 9)) >> 8) & 0b1) == 1) && ((((biale_a >> ((i % 6) * 9)) >> 8) & 0b1) == 1)) {
                            System.out.println("jest8");
                            bb = bb + 2;
                            for (int l = 0; l < 6; l++) {
                                if (((wsp_y + 2) == (((biale_a >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wsp_x - 2) == ((biale_a >> ((l % 6) * 9)) & 0b111)) && ((((biale_a >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                    bb = bb + 1;
                                    System.out.println(l + "dupaX");
                                }
                                if (((wsp_y + 2) == (((biale_b >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wsp_x - 2) == ((biale_b >> ((l % 6) * 9)) & 0b111)) && ((((biale_b >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                    bb = bb + 1;
                                    System.out.println(l + "dupaA" + l + i);
                                }
                                if (((wsp_y + 2) == (((czarne_a >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wsp_x - 2) == ((czarne_a >> ((l % 6) * 9)) & 0b111)) && ((((czarne_a >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                    bb = bb + 1;
                                    System.out.println(l + "dupaB");
                                }
                                if (((wsp_y + 2) == (((czarne_b >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wsp_x - 2) == ((czarne_b >> ((l % 6) * 9)) & 0b111)) && ((((czarne_b >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                    bb = bb + 1;
                                    System.out.println(l + "dupaC");
                                }
                            }

                            if ((bb % 2) == 0 && ((wsp_x - 2 > 0) && (wsp_y + 2 < 8))) {
                                System.out.println("Nalezy przesunac pion z pozycji" + " " + (((biale_a >> ((i % 6) * 9)) & 0b111) + 1) + " " + "," + " " + ((((biale_a >> ((i % 6) * 9)) >> 3) & 0b111) + 1));
                                glo_bb = glo_bb + 2;
                            } else
                                bb = 0;
                        }


//========================================================================================================================================
//==========================================================================================================================================
                        else {
                            wsp_y = (((biale_b >> ((i % 6) * 9)) >> 3) & 0b111);
                            wsp_x = ((biale_b >> ((i % 6) * 9)) & 0b111);


                            if ((((((biale_b >> ((i % 6) * 9)) >> 3) & 0b111) - 1) == (((czarne_a >> ((j % 6) * 9)) >> 3) & 0b111)) && ((((biale_b >> ((i % 6) * 9)) & 0b111) - 1) == ((czarne_a >> ((j % 6) * 9)) & 0b111)) && ((((czarne_a >> ((j % 6) * 9)) >> 8) & 0b1) == 1) && ((((biale_b >> ((i % 6) * 9)) >> 8) & 0b1) == 1)) {
                                System.out.println("jest  9");
                                bb = bb + 2;


                                for (int l = 0; l < 6; l++) {

                                    if (((wsp_y - 2) == (((biale_a >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wsp_x - 2) == ((biale_a >> ((l % 6) * 9)) & 0b111)) && ((((biale_a >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                        bb = bb + 1;
                                        System.out.println(l + "dupaX");
                                    }
                                    if (((wsp_y - 2) == (((biale_b >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wsp_x - 2) == ((biale_b >> ((l % 6) * 9)) & 0b111)) && ((((biale_b >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                        bb = bb + 1;
                                        System.out.println(l + "dupaA" + l + i);
                                    }
                                    if (((wsp_y - 2) == (((czarne_a >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wsp_x - 2) == ((czarne_a >> ((l % 6) * 9)) & 0b111)) && ((((czarne_a >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                        bb = bb + 1;
                                        System.out.println(l + "dupaB");
                                    }
                                    if (((wsp_y - 2) == (((czarne_b >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wsp_x - 2) == ((czarne_b >> ((l % 6) * 9)) & 0b111)) && ((((czarne_b >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                        bb = bb + 1;
                                        System.out.println(l + "dupaC");
                                    }
                                }

                                if ((bb % 2) == 0 && ((wsp_x - 2 > 0) && (wsp_y - 2 > 0))) {
                                    System.out.println("Nalezy przesunac pion z pozycji" + " " + (((biale_b >> ((i % 6) * 9)) & 0b111) + 1) + " " + "," + " " + ((((biale_b >> ((i % 6) * 9)) >> 3) & 0b111) + 1));
                                    glo_bb = glo_bb + 2;
                                } else
                                    bb = 0;
                            }

                            //----------------------------------------------------------------------------------------------------------------------------------
                            if ((((((biale_b >> ((i % 6) * 9)) >> 3) & 0b111) - 1) == (((czarne_b >> ((j % 6) * 9)) >> 3) & 0b111)) && ((((biale_b >> ((i % 6) * 9)) & 0b111) - 1) == ((czarne_b >> ((j % 6) * 9)) & 0b111)) && ((((czarne_b >> ((j % 6) * 9)) >> 8) & 0b1) == 1) && ((((biale_b >> ((i % 6) * 9)) >> 8) & 0b1) == 1)) {
                                System.out.println("jest 10");
                                bb = bb + 2;
                                for (int l = 0; l < 6; l++) {
                                    if (((wsp_y - 2) == (((biale_a >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wsp_x - 2) == ((biale_a >> ((l % 6) * 9)) & 0b111)) && ((((biale_a >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                        bb = bb + 1;
                                        System.out.println(l + "dupaX");
                                    }
                                    if (((wsp_y - 2) == (((biale_b >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wsp_x - 2) == ((biale_b >> ((l % 6) * 9)) & 0b111)) && ((((biale_b >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                        bb = bb + 1;
                                        System.out.println(l + "dupaA" + l + i);
                                    }
                                    if (((wsp_y - 2) == (((czarne_a >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wsp_x - 2) == ((czarne_a >> ((l % 6) * 9)) & 0b111)) && ((((czarne_a >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                        bb = bb + 1;
                                        System.out.println(l + "dupaB");
                                    }
                                    if (((wsp_y - 2) == (((czarne_b >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wsp_x - 2) == ((czarne_b >> ((l % 6) * 9)) & 0b111)) && ((((czarne_b >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                        bb = bb + 1;
                                        System.out.println(l + "dupaC");
                                    }
                                }

                                if ((bb % 2) == 0 && ((wsp_x - 2 > 0) && (wsp_y - 2 > 0))) {
                                    System.out.println("Nalezy przesunac pion z pozycji" + " " + (((biale_b >> ((i % 6) * 9)) & 0b111) + 1) + " " + "," + " " + ((((biale_b >> ((i % 6) * 9)) >> 3) & 0b111) + 1));
                                    glo_bb = glo_bb + 2;
                                } else
                                    bb = 0;
                            }

                            //========================================================================================================================
                            if ((((((biale_b >> ((i % 6) * 9)) >> 3) & 0b111) - 1) == (((czarne_a >> ((j % 6) * 9)) >> 3) & 0b111)) && ((((biale_b >> ((i % 6) * 9)) & 0b111) + 1) == ((czarne_a >> ((j % 6) * 9)) & 0b111)) && ((((czarne_a >> ((j % 6) * 9)) >> 8) & 0b1) == 1) && ((((biale_b >> ((i % 6) * 9)) >> 8) & 0b1) == 1)) {
                                System.out.println("jest11" + i);
                                bb = bb + 2;
                                for (int l = 0; l < 6; l++) {
                                    if (((wsp_y - 2) == (((biale_a >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wsp_x + 2) == ((biale_a >> ((l % 6) * 9)) & 0b111)) && ((((biale_a >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                        bb = bb + 1;
                                        System.out.println(l + "dupaX");
                                    }
                                    if (((wsp_y - 2) == (((biale_b >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wsp_x + 2) == ((biale_b >> ((l % 6) * 9)) & 0b111)) && ((((biale_b >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                        bb = bb + 1;
                                        System.out.println(l + "dupaA" + l + i);
                                    }
                                    if (((wsp_y - 2) == (((czarne_a >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wsp_x + 2) == ((czarne_a >> ((l % 6) * 9)) & 0b111)) && ((((czarne_a >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                        bb = bb + 1;
                                        System.out.println(l + "dupaB");
                                    }
                                    if (((wsp_y - 2) == (((czarne_b >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wsp_x + 2) == ((czarne_b >> ((l % 6) * 9)) & 0b111)) && ((((czarne_b >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                        bb = bb + 1;
                                        System.out.println(l + "dupaC");
                                    }
                                }

                                if ((bb % 2) == 0 && ((wsp_x + 2 < 8) && (wsp_y - 2 > 0))) {
                                    System.out.println("Nalezy przesunac pion z pozycji" + " " + (((biale_b >> ((i % 6) * 9)) & 0b111) + 1) + " " + "," + " " + ((((biale_b >> ((i % 6) * 9)) >> 3) & 0b111) + 1));
                                    glo_bb = glo_bb + 2;
                                } else
                                    bb = 0;
                            }

                            //-----------------------------------------------------------------------------------------------------------------------------
                            if ((((((biale_b >> ((i % 6) * 9)) >> 3) & 0b111) - 1) == (((czarne_b >> ((j % 6) * 9)) >> 3) & 0b111)) && ((((biale_b >> ((i % 6) * 9)) & 0b111) + 1) == ((czarne_b >> ((j % 6) * 9)) & 0b111)) && ((((czarne_b >> ((j % 6) * 9)) >> 8) & 0b1) == 1) && ((((biale_b >> ((i % 6) * 9)) >> 8) & 0b1) == 1)) {
                                System.out.println("jest12");
                                bb = bb + 2;
                                for (int l = 0; l < 6; l++) {
                                    if (((wsp_y - 2) == (((biale_a >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wsp_x + 2) == ((biale_a >> ((l % 6) * 9)) & 0b111)) && ((((biale_a >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                        bb = bb + 1;
                                        System.out.println(l + "dupaX");
                                    }
                                    if (((wsp_y - 2) == (((biale_b >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wsp_x + 2) == ((biale_b >> ((l % 6) * 9)) & 0b111)) && ((((biale_b >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                        bb = bb + 1;
                                        System.out.println(l + "dupaA" + l + i);
                                    }
                                    if (((wsp_y - 2) == (((czarne_a >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wsp_x + 2) == ((czarne_a >> ((l % 6) * 9)) & 0b111)) && ((((czarne_a >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                        bb = bb + 1;
                                        System.out.println(l + "dupaB");
                                    }
                                    if (((wsp_y - 2) == (((czarne_b >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wsp_x + 2) == ((czarne_b >> ((l % 6) * 9)) & 0b111)) && ((((czarne_b >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                        bb = bb + 1;
                                        System.out.println(l + "dupaC");
                                    }
                                }

                                if ((bb % 2) == 0 && ((wsp_x + 2 < 8) && (wsp_y - 2 > 0))) {
                                    System.out.println("Nalezy przesunac pion z pozycji" + " " + (((biale_b >> ((i % 6) * 9)) & 0b111) + 1) + " " + "," + " " + ((((biale_b >> ((i % 6) * 9)) >> 3) & 0b111) + 1));
                                    glo_bb = glo_bb + 2;
                                } else
                                    bb = 0;
                            }

                            if ((((((biale_b >> ((i % 6) * 9)) >> 3) & 0b111) + 1) == (((czarne_a >> ((j % 6) * 9)) >> 3) & 0b111)) && ((((biale_b >> ((i % 6) * 9)) & 0b111) + 1) == ((czarne_a >> ((j % 6) * 9)) & 0b111)) && ((((czarne_a >> ((j % 6) * 9)) >> 8) & 0b1) == 1) && ((((biale_b >> ((i % 6) * 9)) >> 8) & 0b1) == 1)) {
                                System.out.println("jest13");
                                bb = bb + 2;
                                for (int l = 0; l < 6; l++) {
                                    if (((wsp_y + 2) == (((biale_a >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wsp_x + 2) == ((biale_a >> ((l % 6) * 9)) & 0b111)) && ((((biale_a >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                        bb = bb + 1;
                                        System.out.println(l + "dupaX");
                                    }
                                    if (((wsp_y + 2) == (((biale_b >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wsp_x + 2) == ((biale_b >> ((l % 6) * 9)) & 0b111)) && ((((biale_b >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                        bb = bb + 1;
                                        System.out.println(l + "dupaA" + l + i);
                                    }
                                    if (((wsp_y + 2) == (((czarne_a >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wsp_x + 2) == ((czarne_a >> ((l % 6) * 9)) & 0b111)) && ((((czarne_a >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                        bb = bb + 1;
                                        System.out.println(l + "dupaB");
                                    }
                                    if (((wsp_y + 2) == (((czarne_b >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wsp_x + 2) == ((czarne_b >> ((l % 6) * 9)) & 0b111)) && ((((czarne_b >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                        bb = bb + 1;
                                        System.out.println(l + "dupaC");
                                    }
                                }

                                if ((bb % 2) == 0 && ((wsp_x - 2 > 0) || (wsp_x + 2 < 8) || (wsp_y - 2 > 0) || (wsp_y + 2 < 8))) {
                                    System.out.println("Nalezy przesunac pion z pozycji" + " " + (((biale_b >> ((i % 6) * 9)) & 0b111) + 1) + " " + "," + " " + ((((biale_b >> ((i % 6) * 9)) >> 3) & 0b111) + 1));
                                    glo_bb = glo_bb + 2;
                                } else
                                    bb = 0;
                            }
                            //---------------------------------------------------------------------

                            if ((((((biale_b >> ((i % 6) * 9)) >> 3) & 0b111) + 1) == (((czarne_b >> ((j % 6) * 9)) >> 3) & 0b111)) && ((((biale_a >> ((i % 6) * 9)) & 0b111) + 1) == ((czarne_b >> ((j % 6) * 9)) & 0b111)) && ((((czarne_b >> ((j % 6) * 9)) >> 8) & 0b1) == 1) && ((((biale_b >> ((i % 6) * 9)) >> 8) & 0b1) == 1)) {
                                System.out.println("jest14");
                                bb = bb + 2;
                                for (int l = 0; l < 6; l++) {
                                    if (((wsp_y + 2) == (((biale_a >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wsp_x + 2) == ((biale_a >> ((l % 6) * 9)) & 0b111)) && ((((biale_a >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                        bb = bb + 1;
                                        System.out.println(l + "dupaX");
                                    }
                                    if (((wsp_y + 2) == (((biale_b >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wsp_x + 2) == ((biale_b >> ((l % 6) * 9)) & 0b111)) && ((((biale_b >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                        bb = bb + 1;
                                        System.out.println(l + "dupaA" + l + i);
                                    }
                                    if (((wsp_y + 2) == (((czarne_a >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wsp_x + 2) == ((czarne_a >> ((l % 6) * 9)) & 0b111)) && ((((czarne_a >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                        bb = bb + 1;
                                        System.out.println(l + "dupaB");
                                    }
                                    if (((wsp_y + 2) == (((czarne_b >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wsp_x + 2) == ((czarne_b >> ((l % 6) * 9)) & 0b111)) && ((((czarne_b >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                        bb = bb + 1;
                                        System.out.println(l + "dupaC");
                                    }
                                }

                                if ((bb % 2) == 0 && ((wsp_x + 2 < 8) && (wsp_y + 2 < 8))) {
                                    System.out.println("Nalezy przesunac pion z pozycji" + " " + (((biale_b >> ((i % 6) * 9)) & 0b111) + 1) + " " + "," + " " + ((((biale_b >> ((i % 6) * 9)) >> 3) & 0b111) + 1));
                                    glo_bb = glo_bb + 2;
                                } else
                                    bb = 0;
                            }

                            if ((((((biale_b >> ((i % 6) * 9)) >> 3) & 0b111) + 1) == (((czarne_a >> ((j % 6) * 9)) >> 3) & 0b111)) && ((((biale_b >> ((i % 6) * 9)) & 0b111) - 1) == ((czarne_a >> ((j % 6) * 9)) & 0b111)) && ((((czarne_a >> ((j % 6) * 9)) >> 8) & 0b1) == 1) && ((((biale_b >> ((i % 6) * 9)) >> 8) & 0b1) == 1)) {
                                System.out.println("jest15");
                                bb = bb + 2;
                                for (int l = 0; l < 6; l++) {
                                    if (((wsp_y + 2) == (((biale_a >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wsp_x - 2) == ((biale_a >> ((l % 6) * 9)) & 0b111)) && ((((biale_a >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                        bb = bb + 1;
                                        System.out.println(l + "dupaX");
                                    }
                                    if (((wsp_y + 2) == (((biale_b >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wsp_x - 2) == ((biale_b >> ((l % 6) * 9)) & 0b111)) && ((((biale_b >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                        bb = bb + 1;
                                        System.out.println(l + "dupaA" + l + i);
                                    }
                                    if (((wsp_y + 2) == (((czarne_a >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wsp_x - 2) == ((czarne_a >> ((l % 6) * 9)) & 0b111)) && ((((czarne_a >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                        bb = bb + 1;
                                        System.out.println(l + "dupaB");
                                    }
                                    if (((wsp_y + 2) == (((czarne_b >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wsp_x - 2) == ((czarne_b >> ((l % 6) * 9)) & 0b111)) && ((((czarne_b >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                        bb = bb + 1;
                                        System.out.println(l + "dupaC");
                                    }
                                }

                                if ((bb % 2) == 0 && ((wsp_x - 2 > 0) && (wsp_y + 2 < 8))) {
                                    System.out.println("Nalezy przesunac pion z pozycji" + " " + (((biale_b >> ((i % 6) * 9)) & 0b111) + 1) + " " + "," + " " + ((((biale_b >> ((i % 6) * 9)) >> 3) & 0b111) + 1));
                                    glo_bb = glo_bb + 2;
                                } else
                                    bb = 0;
                            }
                            //---------------------------------------------------------------------

                            if ((((((biale_b >> ((i % 6) * 9)) >> 3) & 0b111) + 1) == (((czarne_b >> ((j % 6) * 9)) >> 3) & 0b111)) && ((((biale_b >> ((i % 6) * 9)) & 0b111) - 1) == ((czarne_b >> ((j % 6) * 9)) & 0b111)) && ((((czarne_b >> ((j % 6) * 9)) >> 8) & 0b1) == 1) && ((((biale_b >> ((i % 6) * 9)) >> 8) & 0b1) == 1)) {
                                System.out.println("jest16");
                                bb = bb + 2;
                                for (int l = 0; l < 6; l++) {
                                    if (((wsp_y + 2) == (((biale_a >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wsp_x - 2) == ((biale_a >> ((l % 6) * 9)) & 0b111)) && ((((biale_a >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                        bb = bb + 1;
                                        System.out.println(l + "dupaX");
                                    }
                                    if (((wsp_y + 2) == (((biale_b >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wsp_x - 2) == ((biale_b >> ((l % 6) * 9)) & 0b111)) && ((((biale_b >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                        bb = bb + 1;
                                        System.out.println(l + "dupaA" + l + i);
                                    }
                                    if (((wsp_y + 2) == (((czarne_a >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wsp_x - 2) == ((czarne_a >> ((l % 6) * 9)) & 0b111)) && ((((czarne_a >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                        bb = bb + 1;
                                        System.out.println(l + "dupaB");
                                    }
                                    if (((wsp_y + 2) == (((czarne_b >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wsp_x - 2) == ((czarne_b >> ((l % 6) * 9)) & 0b111)) && ((((czarne_b >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                        bb = bb + 1;
                                        System.out.println(l + "dupaC");
                                    }
                                }

                                if ((bb % 2) == 0 && ((wsp_x - 2 > 0) && (wsp_y + 2 < 8))) {
                                    System.out.println("Nalezy przesunac pion z pozycji" + " " + (((biale_b >> ((i % 6) * 9)) & 0b111) + 1) + " " + "," + " " + ((((biale_b >> ((i % 6) * 9)) >> 3) & 0b111) + 1));
                                    glo_bb = glo_bb + 2;
                                } else
                                    bb = 0;
                            }
                        }
                    }
                }
            }
            // sprawdzenie bicia damki

           glo_bb=sprBdamki(biale_a,biale_b,czarne_a,czarne_b,glo_bb);


            if ((glo_bb % 2 == 0) && (glo_bb != 0)) {

                do {
                    glo_bb = 0;
                    do {
                        do {
                            System.out.println("Podaj wspolrzedne figury, ktora ma byc przesunieta :");
                            System.out.println("Podaj wspolrzedna XXb: ");
                            wx = scan.nextInt();
                            wx = wx - 1;
                            if ((wx < 0) | (wx > 7))
                                System.out.println("Prosze podac prawidlowa wspolrzedna  X !");
                        }
                        while ((wx < 0) | (wx > 7));


                        do {
                            System.out.println("Podaj wspolrzedna YYb: ");
                            wy = scan.nextInt();
                            wy = wy - 1;
                            if ((wy < 0) | (wy > 7))
                                System.out.println("Prosze podac prawidlowa wspolrzedna  Y !");
                        }
                        while ((wy < 0) | (wy > 7));


                        do {
                            System.out.println("Podaj wspolrzedne, na ktore ma byc przesunieta figura.");
                            System.out.println("Podaj wspolrzedna XXb: ");
                            wdx = scan.nextInt();
                            wdx = wdx - 1;
                            if ((wdx < 0) | (wdx > 7))
                                System.out.println("Prosze podac prawidlowa wspolrzedna  X !");
                        }
                        while ((wdx < 0) | (wdx > 7));


                        do {
                            System.out.println("Podaj wspolrzedna YYb: ");
                            wdy = scan.nextInt();
                            wdy = wdy - 1;
                            if ((wdy < 0) | (wdy > 7))
                                System.out.println("Prosze podac prawidlowa wspolrzedna  Y !");
                        }
                        while ((wdy < 0) | (wdy > 7));

                        System.out.println();


                        System.out.println();

                        // Sprawdzenie czy wspolrzedne docelowe sa wolne

                        x = 0;

                        for (int i = 0; i < 6; i++) {
                            if ((i / 6) < 1)
                                if (((((biale_a >> ((i % 6) * 9))) & 0b111) == wdx) && ((((biale_a >> ((i % 6) * 9)) >> 3) & 0b111) == wdy) && ((((biale_a >> ((i % 6) * 9)) >> 8) & 0b1) == 1))
                                    x = 6;
                            if ((i / 6) < 1)
                                if (((((biale_b >> ((i % 6) * 9))) & 0b111) == wdx) && ((((biale_b >> ((i % 6) * 9)) >> 3) & 0b111) == wdy) && ((((biale_b >> ((i % 6) * 9)) >> 8) & 0b1) == 1))
                                    x = 6;

                            if ((i / 6) < 1)
                                if (((((czarne_a >> ((i % 6) * 9))) & 0b111) == wdx) && ((((czarne_a >> ((i % 6) * 9)) >> 3) & 0b111) == wdy) && ((((czarne_a >> ((i % 6) * 9)) >> 8) & 0b1) == 1))
                                    x = 6;
                            if ((i / 6) < 1)
                                if (((((czarne_b >> ((i % 6) * 9))) & 0b111) == wdx) && ((((czarne_b >> ((i % 6) * 9)) >> 3) & 0b111) == wdy) && ((((czarne_b >> ((i % 6) * 9)) >> 8) & 0b1) == 1))
                                    x = 6;
                        }

                        if (x == 6)
                            System.out.print("pole zajete ");

                    }
//  Trzeba zrobic jesli nie ma mozliwosci ruchu to koniec gry

                    while (x == 6);

                    System.out.println();
                    int z=0;

                    for (int i = 0; i < 12; i++) {
                        if ((i / 6) < 1)
                            if (((((biale_a >> ((i % 6) * 9))) & 0b111) == wx) && ((((biale_a >> ((i % 6) * 9)) >> 3) & 0b111) == wy) && ((((biale_a >> ((i % 6) * 9)) >> 7) & 0b11) == 0b010))
                                z = 6;
                        if (((((biale_a >> ((i % 6) * 9))) & 0b111) == wx) && ((((biale_a >> ((i % 6) * 9)) >> 3) & 0b111) == wy) && ((((biale_a >> ((i % 6) * 9)) >> 7) & 0b11) == 0b011))
                            z=0;
                        if ((i / 6) >=1)
                            if (((((biale_b >> ((i % 6) * 9))) & 0b111) == wx) && ((((biale_b >> ((i % 6) * 9)) >> 3) & 0b111) == wy) && ((((biale_b >> ((i % 6) * 9)) >> 7) & 0b11) == 0b10))
                                z = 6;
                        if (((((biale_b >> ((i % 6) * 9))) & 0b111) == wx) && ((((biale_b >> ((i % 6) * 9)) >> 3) & 0b111) == wy) && ((((biale_b >> ((i % 6) * 9)) >> 7) & 0b11) == 0b11))
                    z=0;
                    }
                    // tu kasowanie przeciwnika......
                  if (z==6){

                    if ((wx < wdx) && (wy < wdy)) {
                       for (int i = 0; i < 6; i++) {

                            if ((i / 6) < 1)
                                if (((((czarne_a >> ((i % 6) * 9))) & 0b111000) == (wy + 1) << 3) && (((czarne_a >> ((i % 6) * 9)) & 0b111) == wx + 1)) {
                                    czarne_a = czarne_a & (~(0b100_000_000L << ((i % 9) * 9)));
                                } else if (((((czarne_b >> ((i % 6) * 9))) & 0b111000) == (wy + 1) << 3) && (((czarne_b >> ((i % 6) * 9)) & 0b111) == wx + 1)) {
                                    czarne_b = czarne_b & (~(0b100_000_000L << ((i % 9) * 9)));
                                }
                        }
                    }
                    if ((wx < wdx) && (wy > wdy)) {
                        for (int i = 0; i < 6; i++) {

                            if ((i / 6) < 1)
                                if (((((czarne_a >> ((i % 6) * 9))) & 0b111000) == (wy - 1) << 3) && (((czarne_a >> ((i % 6) * 9)) & 0b111) == wx + 1)) {
                                    czarne_a = czarne_a & (~(0b100_000_000L << ((i % 9) * 9)));
                                } else if (((((czarne_b >> ((i % 6) * 9))) & 0b111000) == (wy - 1) << 3) && (((czarne_b >> ((i % 6) * 9)) & 0b111) == wx + 1)) {
                                    czarne_b = czarne_b & (~(0b100_000_000L << ((i % 9) * 9)));
                                }
                        }
                    }
                    if ((wx > wdx) && (wy < wdy)) {
                        for (int i = 0; i < 6; i++) {

                            if ((i / 6) < 1)
                                if (((((czarne_a >> ((i % 6) * 9))) & 0b111000) == (wy + 1) << 3) && (((czarne_a >> ((i % 6) * 9)) & 0b111) == wx - 1)) {
                                    czarne_a = czarne_a & (~(0b100_000_000L << ((i % 9) * 9)));
                                } else if (((((czarne_b >> ((i % 6) * 9))) & 0b111000) == (wy + 1) << 3) && (((czarne_b >> ((i % 6) * 9)) & 0b111) == wx - 1)) {
                                    czarne_b = czarne_b & (~(0b100_000_000L << ((i % 9) * 9)));
                                }
                        }
                    }
                    if ((wx > wdx) && (wy > wdy)) {
                        for (int i = 0; i < 6; i++) {

                            if ((i / 6) < 1)
                                if (((((czarne_a >> ((i % 6) * 9))) & 0b111000) == (wy - 1) << 3) && (((czarne_a >> ((i % 6) * 9)) & 0b111) == wx - 1)) {
                                    czarne_a = czarne_a & (~(0b100_000_000L << ((i % 9) * 9)));
                                } else if (((((czarne_b >> ((i % 6) * 9))) & 0b111000) == (wy - 1) << 3) && (((czarne_b >> ((i % 6) * 9)) & 0b111) == wx - 1)) {
                                    czarne_b = czarne_b & (~(0b100_000_000L << ((i % 9) * 9)));
                                }
                        }
                    }}

                    if (z == 0) { // kasowanie po biciu damki

                        if ((wx < wdx) && (wy < wdy)) {
                            for (int i = 0; i < 6; i++) {

                                if ((i / 6) < 1)
                                    if (((((czarne_a >> ((i % 6) * 9))) & 0b111000) == (wdy - 1) << 3) && (((czarne_a >> ((i % 6) * 9)) & 0b111) == wdx - 1)) {
                                        czarne_a = czarne_a & (~(0b100_000_000L << ((i % 9) * 9)));
                                    } else if (((((czarne_b >> ((i % 6) * 9))) & 0b111000) == (wdy - 1) << 3) && (((czarne_b >> ((i % 6) * 9)) & 0b111) == wdx - 1)) {
                                        czarne_b = czarne_b & (~(0b100_000_000L << ((i % 9) * 9)));
                                    }
                            }
                        }
                        if ((wx < wdx) && (wy > wdy)) {
                            for (int i = 0; i < 6; i++) {

                                if ((i / 6) < 1)
                                    if (((((czarne_a >> ((i % 6) * 9))) & 0b111000) == (wdy + 1) << 3) && (((czarne_a >> ((i % 6) * 9)) & 0b111) == wdx - 1)) {
                                        czarne_a = czarne_a & (~(0b100_000_000L << ((i % 9) * 9)));
                                    } else if (((((czarne_b >> ((i % 6) * 9))) & 0b111000) == (wdy + 1) << 3) && (((czarne_b >> ((i % 6) * 9)) & 0b111) == wdx - 1)) {
                                        czarne_b = czarne_b & (~(0b100_000_000L << ((i % 9) * 9)));
                                    }
                            }
                        }
                        if ((wx > wdx) && (wy < wdy)) {
                            for (int i = 0; i < 6; i++) {

                                if ((i / 6) < 1)
                                    if (((((czarne_a >> ((i % 6) * 9))) & 0b111000) == (wdy - 1) << 3) && (((czarne_a >> ((i % 6) * 9)) & 0b111) == wdx + 1)) {
                                        czarne_a = czarne_a & (~(0b100_000_000L << ((i % 9) * 9)));
                                    } else if (((((czarne_b >> ((i % 6) * 9))) & 0b111000) == (wdy - 1) << 3) && (((czarne_b >> ((i % 6) * 9)) & 0b111) == wdx + 1)) {
                                        czarne_b = czarne_b & (~(0b100_000_000L << ((i % 9) * 9)));
                                    }
                            }
                        }
                        if ((wx > wdx) && (wy > wdy)) {
                            for (int i = 0; i < 6; i++) {

                                if ((i / 6) < 1)
                                    if (((((czarne_a >> ((i % 6) * 9))) & 0b111000) == (wdy + 1) << 3) && (((czarne_a >> ((i % 6) * 9)) & 0b111) == wdx + 1)) {
                                        czarne_a = czarne_a & (~(0b100_000_000L << ((i % 9) * 9)));
                                    } else if (((((czarne_b >> ((i % 6) * 9))) & 0b111000) == (wdy + 1) << 3) && (((czarne_b >> ((i % 6) * 9)) & 0b111) == wdx + 1)) {
                                        czarne_b = czarne_b & (~(0b100_000_000L << ((i % 9) * 9)));
                                    }
                            }
                        }}
                        //kasowanie po biciu damki

                        //......kasowanie przeciwnika

                        //ponizej  zapis nowej pozycji

                        noweWspol = (wdy << 3 | wdx);


                    for (int i = 0; i < 6; i++) {

                        if ((i / 6) < 1)
                            if (((((biale_a >> ((i % 6) * 9))) & 0b111000) == wy << 3) && (((biale_a >> ((i % 6) * 9)) & 0b111) == wx)) {
                                biale_a = biale_a & (~(0b111111L << ((i % 6) * 9)));
                                biale_a = biale_a | (noweWspol << ((i % 6) * 9));
                            } else if (((((biale_b >> ((i % 6) * 9))) & 0b111000) == wy << 3) && (((biale_b >> ((i % 6) * 9)) & 0b111) == wx)) {
                                biale_b = biale_b & (~(0b111111L << ((i % 6) * 9)));
                                biale_b = biale_b | (noweWspol << ((i % 6) * 9));
                            }


                        //  Ponowne sprawdzenie czy nie ma bicia   !!! ale figury ktora zostala przesunieta !!!


                        //wdy i wdx musi ponownie byc sprawdzone

                    }


//==========================================================================================================================================================================
                    //=====================================================================================================================================================================
// sprawdzenie czy dalej nie ma bicia

                    bb = 0;
                    for (int i = 0; i < 12; i++) {


                        if ((i / 6) < 1) {


                            if ((wdy - 1 == (((czarne_a >> ((i % 6) * 9)) >> 3) & 0b111)) && (wdx - 1 == ((czarne_a >> ((i % 6) * 9)) & 0b111)) && ((((czarne_a >> ((i % 6) * 9)) >> 8) & 0b1) == 1)) {
                                System.out.println("jest1s");
                                bb = bb + 2;

                                for (int l = 0; l < 6; l++) {
                                    if (((wdy - 2) == (((biale_a >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wdx - 2) == ((biale_a >> ((l % 6) * 9)) & 0b111)) && ((((biale_a >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                        bb = bb + 1;
                                        System.out.println(l + "dupaX");
                                    }
                                    if (((wdy - 2) == (((biale_b >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wdx - 2) == ((biale_b >> ((l % 6) * 9)) & 0b111)) && ((((biale_b >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                        bb = bb + 1;
                                        System.out.println(l + "dupaA" + l + i);
                                    }
                                    if (((wdy - 2) == (((czarne_a >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wdx - 2) == ((czarne_a >> ((l % 6) * 9)) & 0b111)) && ((((czarne_a >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                        bb = bb + 1;
                                        System.out.println(l + "dupaB");
                                    }
                                    if (((wdy - 2) == (((czarne_b >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wdx - 2) == ((czarne_b >> ((l % 6) * 9)) & 0b111)) && ((((czarne_b >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                        bb = bb + 1;
                                        System.out.println(l + "dupaC");
                                    }
                                }

                                if ((bb % 2) == 0 && ((wdx - 2 > -1) && (wdy - 2 > -1))) {
                                    System.out.println("Nalezy przesunac pion z pozycji" + " " + (wdx + 1) + " " + "," + " " + (wdy + 1));
                                    glo_bb = glo_bb + 2;
                                } else
                                    bb = 0;
                            }


                            //---------------------------------------------------------------------

                            if ((wdy - 1 == (((czarne_a >> ((i % 6) * 9)) >> 3) & 0b111)) && (wdx + 1 == ((czarne_a >> ((i % 6) * 9)) & 0b111)) && ((((czarne_a >> ((i % 6) * 9)) >> 8) & 0b1) == 1)) {
                                System.out.println("jest2s");
                                bb = bb + 2;
                                for (int l = 0; l < 6; l++) {
                                    if (((wdy - 2) == (((biale_a >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wdx + 2) == ((biale_a >> ((l % 6) * 9)) & 0b111)) && ((((biale_a >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                        bb = bb + 1;
                                        System.out.println(l + "dupaX");
                                    }
                                    if (((wdy - 2) == (((biale_b >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wdx + 2) == ((biale_b >> ((l % 6) * 9)) & 0b111)) && ((((biale_b >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                        bb = bb + 1;
                                        System.out.println(l + "dupaA" + l + i);
                                    }
                                    if (((wdy - 2) == (((czarne_a >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wdx + 2) == ((czarne_a >> ((l % 6) * 9)) & 0b111)) && ((((czarne_a >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                        bb = bb + 1;
                                        System.out.println(l + "dupaB");
                                    }
                                    if (((wdy - 2) == (((czarne_b >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wdx + 2) == ((czarne_b >> ((l % 6) * 9)) & 0b111)) && ((((czarne_b >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                        bb = bb + 1;
                                        System.out.println(l + "dupaC");
                                    }

                                }

                                if ((bb % 2) == 0 && ((wdx + 2 < 8) && (wdy - 2 > -1))) {
                                    System.out.println("Nalezy przesunac pion z pozycji" + " " + (wdx + 1) + " " + "," + " " + (wdy + 1));
                                    glo_bb = glo_bb + 2;
                                } else
                                    bb = 0;

                            }

                            //...=====================================================================================================================
                            if ((wdy + 1 == (((czarne_a >> ((i % 6) * 9)) >> 3) & 0b111)) && (wdx - 1 == ((czarne_a >> ((i % 6) * 9)) & 0b111)) && ((((czarne_a >> ((i % 6) * 9)) >> 8) & 0b1) == 1)) {

                                System.out.println("jest003s");
                                bb = bb + 2;
                                for (int l = 0; l < 6; l++) {
                                    if (((wdy + 2) == (((biale_a >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wdx - 2) == ((biale_a >> ((l % 6) * 9)) & 0b111)) && ((((biale_a >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                        bb = bb + 1;
                                        System.out.println(l + "dupaX");
                                    }
                                    if (((wdy + 2) == (((biale_b >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wdx - 2) == ((biale_b >> ((l % 6) * 9)) & 0b111)) && ((((biale_b >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                        bb = bb + 1;
                                        System.out.println(l + "dupaA" + l + i);
                                    }
                                    if (((wdy + 2) == (((czarne_a >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wdx - 2) == ((czarne_a >> ((l % 6) * 9)) & 0b111)) && ((((czarne_a >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                        bb = bb + 1;
                                        System.out.println(l + "dupaB");
                                    }
                                    if (((wdy + 2) == (((czarne_b >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wdx - 2) == ((czarne_b >> ((l % 6) * 9)) & 0b111)) && ((((czarne_b >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                        bb = bb + 1;
                                        System.out.println(l + "dupaC");
                                    }

                                }

                                if ((bb % 2) == 0 && ((wdx - 2 < -1) && (wdy + 2 < 8))) {
                                    System.out.println("Nalezy przesunac pion z pozycji" + " " + (wdx + 1) + " " + "," + " " + (wdy + 1));
                                    glo_bb = glo_bb + 2;
                                } else
                                    bb = 0;
                            }

//----------------------------------------------------------------------------------------------------------------------------------------
                            if ((wdy + 1 == (((czarne_a >> ((i % 6) * 9)) >> 3) & 0b111)) && (wdx + 1 == ((czarne_a >> ((i % 6) * 9)) & 0b111)) && ((((czarne_a >> ((i % 6) * 9)) >> 8) & 0b1) == 1)) {
                                System.out.println("jest  4s");
                                bb = bb + 2;
                                for (int l = 0; l < 6; l++) {
                                    if (((wdy + 2) == (((biale_a >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wdx + 2) == ((biale_a >> ((l % 6) * 9)) & 0b111)) && ((((biale_a >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                        bb = bb + 1;
                                        System.out.println(l + "dupaX");
                                    }
                                    if (((wdy + 2) == (((biale_b >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wdx + 2) == ((biale_b >> ((l % 6) * 9)) & 0b111)) && ((((biale_b >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                        bb = bb + 1;
                                        System.out.println(l + "dupaA" + l + i);
                                    }
                                    if (((wdy + 2) == (((czarne_a >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wdx + 2) == ((czarne_a >> ((l % 6) * 9)) & 0b111)) && ((((czarne_a >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                        bb = bb + 1;
                                        System.out.println(l + "dupaB");
                                    }
                                    if (((wdy + 2) == (((czarne_b >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wdx + 2) == ((czarne_b >> ((l % 6) * 9)) & 0b111)) && ((((czarne_b >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                        bb = bb + 1;
                                        System.out.println(l + "dupaC");
                                    }
                                }

                                if ((bb % 2) == 0 && ((wdx + 2 < 8) && (wdy + 2 < 8))) {
                                    System.out.println("Nalezy przesunac pion z pozycji" + " " + (wdx + 1) + " " + "," + " " + (wdy + 1));
                                    glo_bb = glo_bb + 2;
                                } else
                                    bb = 0;

                            }

                        } else {
                            if ((wdy - 1 == (((czarne_b >> ((i % 6) * 9)) >> 3) & 0b111)) && (wdx - 1 == ((czarne_b >> ((i % 6) * 9)) & 0b111)) && ((((czarne_b >> ((i % 6) * 9)) >> 8) & 0b1) == 1)) {
                                System.out.println("jest1sb");
                                bb = bb + 2;

                                for (int l = 0; l < 6; l++) {
                                    if (((wdy - 2) == (((biale_a >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wdx - 2) == ((biale_a >> ((l % 6) * 9)) & 0b111)) && ((((biale_a >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                        bb = bb + 1;
                                        System.out.println(l + "dupaX");
                                    }
                                    if (((wdy - 2) == (((biale_b >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wdx - 2) == ((biale_b >> ((l % 6) * 9)) & 0b111)) && ((((biale_b >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                        bb = bb + 1;
                                        System.out.println(l + "dupaA" + l + i);
                                    }
                                    if (((wdy - 2) == (((czarne_a >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wdx - 2) == ((czarne_a >> ((l % 6) * 9)) & 0b111)) && ((((czarne_a >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                        bb = bb + 1;
                                        System.out.println(l + "dupaB");
                                    }
                                    if (((wdy - 2) == (((czarne_b >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wdx - 2) == ((czarne_b >> ((l % 6) * 9)) & 0b111)) && ((((czarne_b >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                        bb = bb + 1;
                                        System.out.println(l + "dupaC");
                                    }
                                }

                                if ((bb % 2) == 0 && ((wdx - 2 > -1) && (wdy - 2 > -1))) {
                                    System.out.println("Nalezy przesunac pion z pozycji" + " " + (wdx + 1) + " " + "," + " " + (wdy + 1));
                                    glo_bb = glo_bb + 2;
                                } else
                                    bb = 0;
                            }


                            //---------------------------------------------------------------------

                            if ((wdy - 1 == (((czarne_b >> ((i % 6) * 9)) >> 3) & 0b111)) && (wdx + 1 == ((czarne_b >> ((i % 6) * 9)) & 0b111)) && ((((czarne_b >> ((i % 6) * 9)) >> 8) & 0b1) == 1)) {
                                System.out.println("jest2sb");
                                bb = bb + 2;
                                for (int l = 0; l < 6; l++) {
                                    if (((wdy - 2) == (((biale_a >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wdx + 2) == ((biale_a >> ((l % 6) * 9)) & 0b111)) && ((((biale_a >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                        bb = bb + 1;
                                        System.out.println(l + "dupaX");
                                    }
                                    if (((wdy - 2) == (((biale_b >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wdx + 2) == ((biale_b >> ((l % 6) * 9)) & 0b111)) && ((((biale_b >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                        bb = bb + 1;
                                        System.out.println(l + "dupaA" + l + i);
                                    }
                                    if (((wdy - 2) == (((czarne_a >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wdx + 2) == ((czarne_a >> ((l % 6) * 9)) & 0b111)) && ((((czarne_a >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                        bb = bb + 1;
                                        System.out.println(l + "dupaB");
                                    }
                                    if (((wdy - 2) == (((czarne_b >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wdx + 2) == ((czarne_b >> ((l % 6) * 9)) & 0b111)) && ((((czarne_b >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                        bb = bb + 1;
                                        System.out.println(l + "dupaC");
                                    }

                                }

                                if ((bb % 2) == 0 && ((wdx + 2 < 8) && (wdy - 2 > -1))) {
                                    System.out.println("Nalezy przesunac pion z pozycji" + " " + (wdx + 1) + " " + "," + " " + (wdy + 1));
                                    glo_bb = glo_bb + 2;
                                } else
                                    bb = 0;

                            }

                            //...=====================================================================================================================
                            if ((wdy + 1 == (((czarne_b >> ((i % 6) * 9)) >> 3) & 0b111)) && (wdx - 1 == ((czarne_b >> ((i % 6) * 9)) & 0b111)) && ((((czarne_b >> ((i % 6) * 9)) >> 8) & 0b1) == 1)) {

                                System.out.println("jest003sb");
                                bb = bb + 2;
                                for (int l = 0; l < 6; l++) {
                                    if (((wdy + 2) == (((biale_a >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wdx - 2) == ((biale_a >> ((l % 6) * 9)) & 0b111)) && ((((biale_a >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                        bb = bb + 1;
                                        System.out.println(l + "dupaX");
                                    }
                                    if (((wdy + 2) == (((biale_b >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wdx - 2) == ((biale_b >> ((l % 6) * 9)) & 0b111)) && ((((biale_b >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                        bb = bb + 1;
                                        System.out.println(l + "dupaA" + l + i);
                                    }
                                    if (((wdy + 2) == (((czarne_a >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wdx - 2) == ((czarne_a >> ((l % 6) * 9)) & 0b111)) && ((((czarne_a >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                        bb = bb + 1;
                                        System.out.println(l + "dupaB");
                                    }
                                    if (((wdy + 2) == (((czarne_b >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wdx - 2) == ((czarne_b >> ((l % 6) * 9)) & 0b111)) && ((((czarne_b >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                        bb = bb + 1;
                                        System.out.println(l + "dupaC");
                                    }

                                }

                                if ((bb % 2) == 0 && ((wdx - 2 > -1) && (wdy + 2 < 8))) {
                                    System.out.println("Nalezy przesunac pion z pozycji" + " " + (wdx + 1) + " " + "," + " " + (wdy + 1));
                                    glo_bb = glo_bb + 2;
                                } else
                                    bb = 0;

                            }
//----------------------------------------------------------------------------------------------------------------------------------------
                            if ((wdy + 1 == (((czarne_b >> ((i % 6) * 9)) >> 3) & 0b111)) && (wdx + 1 == ((czarne_b >> ((i % 6) * 9)) & 0b111)) && ((((czarne_b >> ((i % 6) * 9)) >> 8) & 0b1) == 1)) {
                                System.out.println("jest  4sb");
                                bb = bb + 2;
                                for (int l = 0; l < 6; l++) {
                                    if (((wdy + 2) == (((biale_a >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wdx + 2) == ((biale_a >> ((l % 6) * 9)) & 0b111)) && ((((biale_a >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                        bb = bb + 1;
                                        System.out.println(l + "dupaX");
                                    }
                                    if (((wdy + 2) == (((biale_b >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wdx + 2) == ((biale_b >> ((l % 6) * 9)) & 0b111)) && ((((biale_b >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                        bb = bb + 1;
                                        System.out.println(l + "dupaA" + l + i);
                                    }
                                    if (((wdy + 2) == (((czarne_a >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wdx + 2) == ((czarne_a >> ((l % 6) * 9)) & 0b111)) && ((((czarne_a >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                        bb = bb + 1;
                                        System.out.println(l + "dupaB");
                                    }
                                    if (((wdy + 2) == (((czarne_b >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wdx + 2) == ((czarne_b >> ((l % 6) * 9)) & 0b111)) && ((((czarne_b >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                        bb = bb + 1;
                                        System.out.println(l + "dupaC");
                                    }
                                }

                                if ((bb % 2) == 0 && ((wdx + 2 < 8) && (wdy + 2 < 8))) {
                                    System.out.println("Nalezy przesunac pion z pozycji" + " " + (wdx + 1) + " " + "," + " " + (wdy + 1));
                                    glo_bb = glo_bb + 2;
                                } else
                                    bb = 0;
                            }
                        }

                    }

                    System.out.println(" mamy dalej bicie ");
                    System.out.println();
                    System.out.println();

                    plansza(biale_a,biale_b,czarne_a,czarne_b);

                } while (glo_bb > 0);

            }


            //;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
            //--------------------------------------------------------------------------------------------------------------------


//====================================================================================================================================================================
            else {
//=====================================================================================================================================================================
                // wprowadzanie danych   po switch czy gramy


                do {
                    do {
                        System.out.println("Podaj wspolrzedne figury, ktora ma byc przesunieta :");
                        System.out.println("Podaj wspolrzedna X: ");
                        wx = scan.nextInt();
                        wx = wx - 1;
                        if ((wx < 0) | (wx > 7))
                            System.out.println("Prosze podac prawidlowa wspolrzedna  X !");
                    }
                    while ((wx < 0) | (wx > 7));


                    do {
                        System.out.println("Podaj wspolrzedna Y: ");
                        wy = scan.nextInt();
                        wy = wy - 1;
                        if ((wy < 0) | (wy > 7))
                            System.out.println("Prosze podac prawidlowa wspolrzedna  Y !");
                    }
                    while ((wy < 0) | (wy > 7));

                    //    sprawdza czy poprawne wspolrzedne piona startowego


                    for (int i = 0; i < 12; i++) {

                        if ((i / 6) < 1) {
                            if (((((biale_a >> ((i % 6) * 9))) & 0b111) == wx) && ((((biale_a >> ((i % 6) * 9)) >> 3) & 0b111) == wy)) {
                                x = 1;
                                System.out.println("Wspolrzedne prawidlowe");
                            }

                        } else {
                            if (((((biale_b >> ((i % 6) * 9))) & 0b111) == wx) && ((((biale_b >> ((i % 6) * 9)) >> 3) & 0b111) == wy)) {
                                x = 1;
                                System.out.println("Wspolrzedne prawidlowe");
                            }
                        }

                    }

                    if (x == 0)
                        System.out.println("Wspolrzedne nieprawidlowe. Powtorz !");
                    System.out.println();
                }
                while (x == 0);
                System.out.println();

                //  Wprowadzenie wspolrzednych docelowych
                do {

                    do {
                        System.out.println("Podaj wspolrzedne, na ktore ma byc przesunieta figura.");
                        System.out.println("Podaj wspolrzedna X: ");
                        wdx = scan.nextInt();
                        wdx = wdx - 1;
                        if ((wdx < 0) | (wdx > 7))
                            System.out.println("Prosze podac prawidlowa wspolrzedna  X !");
                    }
                    while ((wdx < 0) | (wdx > 7));


                    do {
                        System.out.println("Podaj wspolrzedna Y: ");
                        wdy = scan.nextInt();
                        wdy = wdy - 1;


                        if ((wdy < 0) | (wdy > 7))

                            System.out.println("Prosze podac prawidlowa wspolrzedna  Y !");

                    }
                    while (((wdy < 0) | (wdy > 7)));


                    System.out.println();

                    // Sprawdzenie czy wspolrzedne docelowe sa wolne

                    x = 0;

                    for (int i = 0; i < 6; i++) {
                        if ((i / 6) < 1)
                            if (((((biale_a >> ((i % 6) * 9))) & 0b111) == wdx) && ((((biale_a >> ((i % 6) * 9)) >> 3) & 0b111) == wdy) && ((((biale_a >> ((i % 6) * 9)) >> 8) & 0b1) == 1))
                                x = 6;
                        if ((i / 6) < 1)
                            if (((((biale_b >> ((i % 6) * 9))) & 0b111) == wdx) && ((((biale_b >> ((i % 6) * 9)) >> 3) & 0b111) == wdy) && ((((biale_b >> ((i % 6) * 9)) >> 8) & 0b1) == 1))
                                x = 6;

                        if ((i / 6) < 1)
                            if (((((czarne_a >> ((i % 6) * 9))) & 0b111) == wdx) && ((((czarne_a >> ((i % 6) * 9)) >> 3) & 0b111) == wdy) && ((((czarne_a >> ((i % 6) * 9)) >> 8) & 0b1) == 1))
                                x = 6;
                        if ((i / 6) < 1)
                            if (((((czarne_b >> ((i % 6) * 9))) & 0b111) == wdx) && ((((czarne_b >> ((i % 6) * 9)) >> 3) & 0b111) == wdy) && ((((czarne_b >> ((i % 6) * 9)) >> 8) & 0b1) == 1))
                                x = 6;
                    }

                    if (x == 6)
                        System.out.print("pole zajete ");

                }
//  Trzeba zrobic jesli nie ma mozliwosci ruchu to koniec gry

                while (x == 6);

                System.out.println();


                //  przesuniecie i zapis nowej pozycji

                noweWspol = (wdy << 3 | wdx);
                System.out.println(biale_a);
                for (int i = 0; i < 6; i++) {

                    if ((i / 6) < 1)
                        if (((((biale_a >> ((i % 6) * 9))) & 0b111000) == wy << 3) && (((biale_a >> ((i % 6) * 9)) & 0b111) == wx)) {
                            biale_a = biale_a & (~(0b111111L << ((i % 6) * 9)));
                            biale_a = biale_a | (noweWspol << ((i % 6) * 9));
                        } else if (((((biale_b >> ((i % 6) * 9))) & 0b111000) == wy << 3) && (((biale_b >> ((i % 6) * 9)) & 0b111) == wx)) {
                            biale_b = biale_b & (~(0b111111L << ((i % 6) * 9)));
                            biale_b = biale_b | (noweWspol << ((i % 6) * 9));
                        }

                }


                System.out.println("dalej do przodu");
            }
            tworzenieDamki(biale_a,biale_b);
//_________________________________________________________________________________________________________________________________________________________
//                                         PLANSZA

            System.out.println();
            System.out.println();
            plansza(biale_a,biale_b,czarne_a,czarne_b);


//   TURA CZARNYCH   ==========    TURA CZARNYCH    ================      TURA CZARNYCH
//============================================================================================
//====================================================================================================
//===============================================================================================================
//                                         PLANSZA
            System.out.println(" TURA CZARNYCH");

            System.out.println();

            plansza(biale_a,biale_b,czarne_a,czarne_b);


            System.out.println();

//================================================================================================
            // czy bicie ?
            bb = 0;
            glo_bb = 0;

            for (int i = 0; i < 12; i++) {


                for (int j = 0; j < 6; j++) {

                    if ((i / 6) < 1) {
                        wsp_y = (((czarne_a >> ((i % 6) * 9)) >> 3) & 0b111);
                        wsp_x = ((czarne_a >> ((i % 6) * 9)) & 0b111);


                        if ((((((czarne_a >> ((i % 6) * 9)) >> 3) & 0b111) - 1) == (((biale_a >> ((j % 6) * 9)) >> 3) & 0b111)) && ((((czarne_a >> ((i % 6) * 9)) & 0b111) - 1) == ((biale_a >> ((j % 6) * 9)) & 0b111)) && ((((biale_a >> ((j % 6) * 9)) >> 8) & 0b1) == 1) && ((((czarne_a >> ((i % 6) * 9)) >> 8) & 0b1) == 1)) {
                            System.out.println("jest1");
                            bb = bb + 2;

                            for (int l = 0; l < 6; l++) {
                                if (((wsp_y - 2) == (((biale_a >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wsp_x - 2) == ((biale_a >> ((l % 6) * 9)) & 0b111)) && ((((biale_a >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                    bb = bb + 1;
                                    System.out.println(l + "dupaX");
                                }
                                if (((wsp_y - 2) == (((biale_b >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wsp_x - 2) == ((biale_b >> ((l % 6) * 9)) & 0b111)) && ((((biale_b >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                    bb = bb + 1;
                                    System.out.println(l + "dupaA" + l + i);
                                }
                                if (((wsp_y - 2) == (((czarne_a >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wsp_x - 2) == ((czarne_a >> ((l % 6) * 9)) & 0b111)) && ((((czarne_a >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                    bb = bb + 1;
                                    System.out.println(l + "dupaB");
                                }
                                if (((wsp_y - 2) == (((czarne_b >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wsp_x - 2) == ((czarne_b >> ((l % 6) * 9)) & 0b111)) && ((((czarne_b >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                    bb = bb + 1;
                                    System.out.println(l + "dupaC");

                                }
                            }

                            if (bb % 2 == 0 && ((wsp_x - 2 > -1) && (wsp_y - 2 > -1))) {
                                System.out.println("Nalezy przesunac pion z pozycji" + " " + (((czarne_a >> ((i % 6) * 9)) & 0b111) + 1) + " " + "," + " " + ((((czarne_a >> ((i % 6) * 9)) >> 3) & 0b111) + 1));
                                glo_bb = glo_bb + 2;
                            } else
                                bb = 0;
                        }
                        //---------------------------------------------------------------------

                        if ((((((czarne_a >> ((i % 6) * 9)) >> 3) & 0b111) - 1) == (((biale_b >> ((j % 6) * 9)) >> 3) & 0b111)) && ((((czarne_a >> ((i % 6) * 9)) & 0b111) - 1) == ((biale_b >> ((j % 6) * 9)) & 0b111)) && ((((biale_b >> ((j % 6) * 9)) >> 8) & 0b1) == 1) && ((((czarne_a >> ((i % 6) * 9)) >> 8) & 0b1) == 1)) {
                            System.out.println("jest2");
                            bb = bb + 2;
                            for (int l = 0; l < 6; l++) {
                                if (((wsp_y - 2) == (((biale_a >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wsp_x - 2) == ((biale_a >> ((l % 6) * 9)) & 0b111)) && ((((biale_a >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                    bb = bb + 1;
                                    System.out.println(l + "dupaX");
                                }
                                if (((wsp_y - 2) == (((biale_b >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wsp_x - 2) == ((biale_b >> ((l % 6) * 9)) & 0b111)) && ((((biale_b >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                    bb = bb + 1;
                                    System.out.println(l + "dupaA" + l + i);
                                }
                                if (((wsp_y - 2) == (((czarne_a >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wsp_x - 2) == ((czarne_a >> ((l % 6) * 9)) & 0b111)) && ((((czarne_a >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                    bb = bb + 1;
                                    System.out.println(l + "dupaB");
                                }
                                if (((wsp_y - 2) == (((czarne_b >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wsp_x - 2) == ((czarne_b >> ((l % 6) * 9)) & 0b111)) && ((((czarne_b >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                    bb = bb + 1;
                                    System.out.println(l + "dupaC");
                                }
                            }

                            if (bb % 2 == 0 && ((wsp_x - 2 > -1) && (wsp_y - 2 > -1))) {
                                System.out.println("Nalezy przesunac pion z pozycji" + " " + (((czarne_a >> ((i % 6) * 9)) & 0b111) + 1) + " " + "," + " " + ((((czarne_a >> ((i % 6) * 9)) >> 3) & 0b111) + 1));
                                glo_bb = glo_bb + 2;
                            } else
                                bb = 0;
                        }


                        //...=====================================================================================================================
                        if ((((((czarne_a >> ((i % 6) * 9)) >> 3) & 0b111) - 1) == (((biale_a >> ((j % 6) * 9)) >> 3) & 0b111)) && ((((czarne_a >> ((i % 6) * 9)) & 0b111) + 1) == ((biale_a >> ((j % 6) * 9)) & 0b111)) && ((((biale_a >> ((j % 6) * 9)) >> 8) & 0b1) == 1) && ((((czarne_a >> ((i % 6) * 9)) >> 8) & 0b1) == 1)) {

                            System.out.println("jest003");
                            bb = bb + 2;
                            for (int l = 0; l < 6; l++) {
                                if (((wsp_y - 2) == (((biale_a >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wsp_x + 2) == ((biale_a >> ((l % 6) * 9)) & 0b111)) && ((((biale_a >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                    bb = bb + 1;
                                    System.out.println(l + "dupaX");
                                }
                                if (((wsp_y - 2) == (((biale_b >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wsp_x + 2) == ((biale_b >> ((l % 6) * 9)) & 0b111)) && ((((biale_b >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                    bb = bb + 1;
                                    System.out.println(l + "dupaA" + l + i);
                                }
                                if (((wsp_y - 2) == (((czarne_a >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wsp_x + 2) == ((czarne_a >> ((l % 6) * 9)) & 0b111)) && ((((czarne_a >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                    bb = bb + 1;
                                    System.out.println(l + "dupaB");
                                }
                                if (((wsp_y - 2) == (((czarne_b >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wsp_x + 2) == ((czarne_b >> ((l % 6) * 9)) & 0b111)) && ((((czarne_b >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                    bb = bb + 1;
                                    System.out.println(l + "dupaC");
                                }
                            }

                            if (bb % 2 == 0 && ((wsp_x + 2 < 8) && (wsp_y - 2 > -1))) {
                                System.out.println("Nalezy przesunac pion z pozycji" + " " + (((czarne_a >> ((i % 6) * 9)) & 0b111) + 1) + " " + "," + " " + ((((czarne_a >> ((i % 6) * 9)) >> 3) & 0b111) + 1));
                                glo_bb = glo_bb + 2;
                            } else
                                bb = 0;
                        }

//----------------------------------------------------------------------------------------------------------------------------------------
                        if ((((((czarne_a >> ((i % 6) * 9)) >> 3) & 0b111) - 1) == (((biale_b >> ((j % 6) * 9)) >> 3) & 0b111)) && ((((czarne_a >> ((i % 6) * 9)) & 0b111) + 1) == ((biale_b >> ((j % 6) * 9)) & 0b111)) && ((((biale_b >> ((j % 6) * 9)) >> 8) & 0b1) == 1) && ((((czarne_a >> ((i % 6) * 9)) >> 8) & 0b1) == 1)) {
                            System.out.println("jest  4");
                            bb = bb + 2;
                            for (int l = 0; l < 6; l++) {
                                if (((wsp_y - 2) == (((biale_a >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wsp_x + 2) == ((biale_a >> ((l % 6) * 9)) & 0b111)) && ((((biale_a >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                    bb = bb + 1;
                                    System.out.println(l + "dupaX");
                                }
                                if (((wsp_y - 2) == (((biale_b >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wsp_x + 2) == ((biale_b >> ((l % 6) * 9)) & 0b111)) && ((((biale_b >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                    bb = bb + 1;
                                    System.out.println(l + "dupaA" + l + i);
                                }
                                if (((wsp_y - 2) == (((czarne_a >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wsp_x + 2) == ((czarne_a >> ((l % 6) * 9)) & 0b111)) && ((((czarne_a >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                    bb = bb + 1;
                                    System.out.println(l + "dupaB");
                                }
                                if (((wsp_y - 2) == (((czarne_b >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wsp_x + 2) == ((czarne_b >> ((l % 6) * 9)) & 0b111)) && ((((czarne_b >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                    bb = bb + 1;
                                    System.out.println(l + "dupaC");
                                }
                            }

                            if (bb % 2 == 0 && ((wsp_x + 2 < 8) && (wsp_y - 2 > -1))) {
                                System.out.println("Nalezy przesunac pion z pozycji" + " " + (((czarne_a >> ((i % 6) * 9)) & 0b111) + 1) + " " + "," + " " + ((((czarne_a >> ((i % 6) * 9)) >> 3) & 0b111) + 1));
                                glo_bb = glo_bb + 2;
                            } else
                                bb = 0;
                        }
                        //--------------------------------------------------------------------------------------------------------------------
                        if ((((((czarne_a >> ((i % 6) * 9)) >> 3) & 0b111) + 1) == (((biale_a >> ((j % 6) * 9)) >> 3) & 0b111)) && ((((czarne_a >> ((i % 6) * 9)) & 0b111) + 1) == ((biale_a >> ((j % 6) * 9)) & 0b111)) && ((((biale_a >> ((j % 6) * 9)) >> 8) & 0b1) == 1) && ((((czarne_a >> ((i % 6) * 9)) >> 8) & 0b1) == 1)) {
                            System.out.println("jest5x");
                            bb = bb + 2;
                            for (int l = 0; l < 6; l++) {
                                if (((wsp_y + 2) == (((biale_a >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wsp_x + 2) == ((biale_a >> ((l % 6) * 9)) & 0b111)) && ((((biale_a >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                    bb = bb + 1;
                                    System.out.println(l + "dupaX");
                                }
                                if (((wsp_y + 2) == (((biale_b >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wsp_x + 2) == ((biale_b >> ((l % 6) * 9)) & 0b111)) && ((((biale_b >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                    bb = bb + 1;
                                    System.out.println(l + "dupaA" + l + i);
                                }
                                if (((wsp_y + 2) == (((czarne_a >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wsp_x + 2) == ((czarne_a >> ((l % 6) * 9)) & 0b111)) && ((((czarne_a >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                    bb = bb + 1;
                                    System.out.println(l + "dupaB");
                                }
                                if (((wsp_y + 2) == (((czarne_b >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wsp_x + 2) == ((czarne_b >> ((l % 6) * 9)) & 0b111)) && ((((czarne_b >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                    bb = bb + 1;
                                    System.out.println(l + "dupaC");
                                }
                            }

                            if (bb % 2 == 0 && ((wsp_x + 2 < 8) && (wsp_y + 2 < 8))) {
                                System.out.println("Nalezy przesunac pion z pozycji" + " " + (((czarne_a >> ((i % 6) * 9)) & 0b111) + 1) + " " + "," + " " + ((((czarne_a >> ((i % 6) * 9)) >> 3) & 0b111) + 1));
                                glo_bb = glo_bb + 2;
                            } else
                                bb = 0;
                        }
                        //---------------------------------------------------------------------

                        if ((((((czarne_a >> ((i % 6) * 9)) >> 3) & 0b111) + 1) == (((biale_b >> ((j % 6) * 9)) >> 3) & 0b111)) && ((((czarne_a >> ((i % 6) * 9)) & 0b111) + 1) == ((biale_b >> ((j % 6) * 9)) & 0b111)) && ((((biale_b >> ((j % 6) * 9)) >> 8) & 0b1) == 1) && ((((czarne_a >> ((i % 6) * 9)) >> 8) & 0b1) == 1)) {
                            System.out.println("jest6");
                            bb = bb + 2;
                            for (int l = 0; l < 6; l++) {
                                if (((wsp_y + 2) == (((biale_a >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wsp_x + 2) == ((biale_a >> ((l % 6) * 9)) & 0b111)) && ((((biale_a >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                    bb = bb + 1;
                                    System.out.println(l + "dupaX");
                                }
                                if (((wsp_y + 2) == (((biale_b >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wsp_x + 2) == ((biale_b >> ((l % 6) * 9)) & 0b111)) && ((((biale_b >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                    bb = bb + 1;
                                    System.out.println(l + "dupaA" + l + i);
                                }
                                if (((wsp_y + 2) == (((czarne_a >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wsp_x + 2) == ((czarne_a >> ((l % 6) * 9)) & 0b111)) && ((((czarne_a >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                    bb = bb + 1;
                                    System.out.println(l + "dupaB");
                                }
                                if (((wsp_y + 2) == (((czarne_b >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wsp_x + 2) == ((czarne_b >> ((l % 6) * 9)) & 0b111)) && ((((czarne_b >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                    bb = bb + 1;
                                    System.out.println(l + "dupaC");
                                }

                            }

                            if (bb % 2 == 0 && ((wsp_x + 2 < 8) && (wsp_y + 2 < 8))) {
                                System.out.println("Nalezy przesunac pion z pozycji" + " " + (((czarne_a >> ((i % 6) * 9)) & 0b111) + 1) + " " + "," + " " + ((((czarne_a >> ((i % 6) * 9)) >> 3) & 0b111) + 1));
                                glo_bb = glo_bb + 2;
                            } else
                                bb = 0;
                        }


                        if ((((((czarne_a >> ((i % 6) * 9)) >> 3) & 0b111) + 1) == (((biale_a >> ((j % 6) * 9)) >> 3) & 0b111)) && ((((czarne_a >> ((i % 6) * 9)) & 0b111) - 1) == ((biale_a >> ((j % 6) * 9)) & 0b111)) && ((((biale_a >> ((j % 6) * 9)) >> 8) & 0b1) == 1) && ((((czarne_a >> ((i % 6) * 9)) >> 8) & 0b1) == 1)) {
                            System.out.println("jest7");

                            bb = bb + 2;
                            for (int l = 0; l < 6; l++) {
                                if (((wsp_y + 2) == (((biale_a >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wsp_x - 2) == ((biale_a >> ((l % 6) * 9)) & 0b111)) && ((((biale_a >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                    bb = bb + 1;
                                    System.out.println(l + "dupaX");
                                }
                                if (((wsp_y + 2) == (((biale_b >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wsp_x - 2) == ((biale_b >> ((l % 6) * 9)) & 0b111)) && ((((biale_b >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                    bb = bb + 1;
                                    System.out.println(l + "dupaA" + l + i);
                                }
                                if (((wsp_y + 2) == (((czarne_a >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wsp_x - 2) == ((czarne_a >> ((l % 6) * 9)) & 0b111)) && ((((czarne_a >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                    bb = bb + 1;
                                    System.out.println(l + "dupaB");
                                }
                                if (((wsp_y + 2) == (((czarne_b >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wsp_x - 2) == ((czarne_b >> ((l % 6) * 9)) & 0b111)) && ((((czarne_b >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                    bb = bb + 1;
                                    System.out.println(l + "dupaC");
                                }
                            }

                            if (bb % 2 == 0 && ((wsp_x - 2 > -1) && (wsp_y + 2 < 8))) {
                                System.out.println("Nalezy przesunac pion z pozycji" + " " + (((czarne_a >> ((i % 6) * 9)) & 0b111) + 1) + " " + "," + " " + ((((czarne_a >> ((i % 6) * 9)) >> 3) & 0b111) + 1));
                                glo_bb = glo_bb + 2;
                            } else
                                bb = 0;
                        }
                        //---------------------------------------------------------------------

                        if ((((((czarne_a >> ((i % 6) * 9)) >> 3) & 0b111) + 1) == (((biale_b >> ((j % 6) * 9)) >> 3) & 0b111)) && ((((czarne_a >> ((i % 6) * 9)) & 0b111) - 1) == ((biale_b >> ((j % 6) * 9)) & 0b111)) && ((((biale_b >> ((j % 6) * 9)) >> 8) & 0b1) == 1) && ((((czarne_a >> ((i % 6) * 9)) >> 8) & 0b1) == 1)) {
                            System.out.println("jest8");
                            bb = bb + 2;
                            for (int l = 0; l < 6; l++) {
                                if (((wsp_y + 2) == (((biale_a >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wsp_x - 2) == ((biale_a >> ((l % 6) * 9)) & 0b111)) && ((((biale_a >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                    bb = bb + 1;
                                    System.out.println(l + "dupaX");
                                }
                                if (((wsp_y + 2) == (((biale_b >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wsp_x - 2) == ((biale_b >> ((l % 6) * 9)) & 0b111)) && ((((biale_b >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                    bb = bb + 1;
                                    System.out.println(l + "dupaA" + l + i);
                                }
                                if (((wsp_y + 2) == (((czarne_a >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wsp_x - 2) == ((czarne_a >> ((l % 6) * 9)) & 0b111)) && ((((czarne_a >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                    bb = bb + 1;
                                    System.out.println(l + "dupaB");
                                }
                                if (((wsp_y + 2) == (((czarne_b >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wsp_x - 2) == ((czarne_b >> ((l % 6) * 9)) & 0b111)) && ((((czarne_b >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                    bb = bb + 1;
                                    System.out.println(l + "dupaC");
                                }
                            }

                            if (bb % 2 == 0 && ((wsp_x - 2 > -1) && (wsp_y + 2 < 8))) {
                                System.out.println("Nalezy przesunac pion z pozycji" + " " + (((czarne_a >> ((i % 6) * 9)) & 0b111) + 1) + " " + "," + " " + ((((czarne_a >> ((i % 6) * 9)) >> 3) & 0b111) + 1));
                                glo_bb = glo_bb + 2;
                            } else
                                bb = 0;
                        }

//========================================================================================================================================
//==========================================================================================================================================
                        else {
                            wsp_y = (((czarne_b >> ((i % 6) * 9)) >> 3) & 0b111);
                            wsp_x = ((czarne_b >> ((i % 6) * 9)) & 0b111);


                            if ((((((czarne_b >> ((i % 6) * 9)) >> 3) & 0b111) - 1) == (((biale_a >> ((j % 6) * 9)) >> 3) & 0b111)) && ((((czarne_b >> ((i % 6) * 9)) & 0b111) - 1) == ((biale_a >> ((j % 6) * 9)) & 0b111)) && ((((biale_a >> ((j % 6) * 9)) >> 8) & 0b1) == 1) && ((((czarne_b >> ((i % 6) * 9)) >> 8) & 0b1) == 1)) {
                                System.out.println("jest  9");
                                bb = bb + 2;

                                for (int l = 0; l < 6; l++) {
                                    if (((wsp_y - 2) == (((biale_a >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wsp_x - 2) == ((biale_a >> ((l % 6) * 9)) & 0b111)) && ((((biale_a >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                        bb = bb + 1;
                                        System.out.println(l + "dupaX");
                                    }
                                    if (((wsp_y - 2) == (((biale_b >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wsp_x - 2) == ((biale_b >> ((l % 6) * 9)) & 0b111)) && ((((biale_b >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                        bb = bb + 1;
                                        System.out.println(l + "dupaA" + l + i);
                                    }
                                    if (((wsp_y - 2) == (((czarne_a >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wsp_x - 2) == ((czarne_a >> ((l % 6) * 9)) & 0b111)) && ((((czarne_a >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                        bb = bb + 1;
                                        System.out.println(l + "dupaB");
                                    }
                                    if (((wsp_y - 2) == (((czarne_b >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wsp_x - 2) == ((czarne_b >> ((l % 6) * 9)) & 0b111)) && ((((czarne_b >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                        bb = bb + 1;
                                        System.out.println(l + "dupaC");
                                    }

                                }

                                if (bb % 2 == 0 && ((wsp_x - 2 > -1) && (wsp_y - 2 > -1))) {
                                    System.out.println("Nalezy przesunac pion z pozycji" + " " + (((czarne_b >> ((i % 6) * 9)) & 0b111) + 1) + " " + "," + " " + ((((czarne_b >> ((i % 6) * 9)) >> 3) & 0b111) + 1));
                                    glo_bb = glo_bb + 2;
                                } else
                                    bb = 0;
                            }

                            //----------------------------------------------------------------------------------------------------------------------------------
                            if ((((((czarne_b >> ((i % 6) * 9)) >> 3) & 0b111) - 1) == (((biale_b >> ((j % 6) * 9)) >> 3) & 0b111)) && ((((czarne_b >> ((i % 6) * 9)) & 0b111) - 1) == ((biale_b >> ((j % 6) * 9)) & 0b111)) && ((((biale_b >> ((j % 6) * 9)) >> 8) & 0b1) == 1) && ((((czarne_b >> ((i % 6) * 9)) >> 8) & 0b1) == 1)) {
                                System.out.println("jest 10");
                                bb = bb + 2;
                                for (int l = 0; l < 6; l++) {
                                    if (((wsp_y - 2) == (((biale_a >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wsp_x - 2) == ((biale_a >> ((l % 6) * 9)) & 0b111)) && ((((biale_a >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                        bb = bb + 1;
                                        System.out.println(l + "dupaX");
                                    }
                                    if (((wsp_y - 2) == (((biale_b >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wsp_x - 2) == ((biale_b >> ((l % 6) * 9)) & 0b111)) && ((((biale_b >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                        bb = bb + 1;
                                        System.out.println(l + "dupaA" + l + i);
                                    }
                                    if (((wsp_y - 2) == (((czarne_a >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wsp_x - 2) == ((czarne_a >> ((l % 6) * 9)) & 0b111)) && ((((czarne_a >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                        bb = bb + 1;
                                        System.out.println(l + "dupaB");
                                    }
                                    if (((wsp_y - 2) == (((czarne_b >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wsp_x - 2) == ((czarne_b >> ((l % 6) * 9)) & 0b111)) && ((((czarne_b >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                        bb = bb + 1;
                                        System.out.println(l + "dupaC");
                                    }
                                }

                                if (bb % 2 == 0 && ((wsp_x - 2 > -1) && (wsp_y - 2 > -1))) {
                                    System.out.println("Nalezy przesunac pion z pozycji" + " " + (((czarne_b >> ((i % 6) * 9)) & 0b111) + 1) + " " + "," + " " + ((((czarne_b >> ((i % 6) * 9)) >> 3) & 0b111) + 1));
                                    glo_bb = glo_bb + 2;
                                } else
                                    bb = 0;
                            }

                            //========================================================================================================================
                            if ((((((czarne_b >> ((i % 6) * 9)) >> 3) & 0b111) - 1) == (((biale_a >> ((j % 6) * 9)) >> 3) & 0b111)) && ((((czarne_b >> ((i % 6) * 9)) & 0b111) + 1) == ((biale_a >> ((j % 6) * 9)) & 0b111)) && ((((biale_a >> ((j % 6) * 9)) >> 8) & 0b1) == 1) && ((((czarne_b >> ((i % 6) * 9)) >> 8) & 0b1) == 1)) {
                                System.out.println("jest11" + i);
                                bb = bb + 2;
                                for (int l = 0; l < 6; l++) {
                                    if (((wsp_y - 2) == (((biale_a >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wsp_x + 2) == ((biale_a >> ((l % 6) * 9)) & 0b111)) && ((((biale_a >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                        bb = bb + 1;
                                        System.out.println(l + "dupaX");
                                    }
                                    if (((wsp_y - 2) == (((biale_b >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wsp_x + 2) == ((biale_b >> ((l % 6) * 9)) & 0b111)) && ((((biale_b >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                        bb = bb + 1;
                                        System.out.println(l + "dupaA" + l + i);
                                    }
                                    if (((wsp_y - 2) == (((czarne_a >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wsp_x + 2) == ((czarne_a >> ((l % 6) * 9)) & 0b111)) && ((((czarne_a >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                        bb = bb + 1;
                                        System.out.println(l + "dupaB");
                                    }
                                    if (((wsp_y - 2) == (((czarne_b >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wsp_x + 2) == ((czarne_b >> ((l % 6) * 9)) & 0b111)) && ((((czarne_b >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                        bb = bb + 1;
                                        System.out.println(l + "dupaC");
                                    }
                                }

                                if (bb % 2 == 0 && ((wsp_x + 2 < 8) && (wsp_y - 2 > -1))) {
                                    System.out.println("Nalezy przesunac pion z pozycji" + " " + (((czarne_b >> ((i % 6) * 9)) & 0b111) + 1) + " " + "," + " " + ((((czarne_b >> ((i % 6) * 9)) >> 3) & 0b111) + 1));
                                    glo_bb = glo_bb + 2;
                                } else
                                    bb = 0;
                            }

                            //-----------------------------------------------------------------------------------------------------------------------------
                            if ((((((czarne_b >> ((i % 6) * 9)) >> 3) & 0b111) - 1) == (((biale_b >> ((j % 6) * 9)) >> 3) & 0b111)) && ((((czarne_b >> ((i % 6) * 9)) & 0b111) + 1) == ((biale_b >> ((j % 6) * 9)) & 0b111)) && ((((biale_b >> ((j % 6) * 9)) >> 8) & 0b1) == 1) && ((((czarne_b >> ((i % 6) * 9)) >> 8) & 0b1) == 1)) {
                                System.out.println("jest12");
                                bb = bb + 2;
                                for (int l = 0; l < 6; l++) {
                                    if (((wsp_y - 2) == (((biale_a >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wsp_x + 2) == ((biale_a >> ((l % 6) * 9)) & 0b111)) && ((((biale_a >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                        bb = bb + 1;
                                        System.out.println(l + "dupaX");
                                    }
                                    if (((wsp_y - 2) == (((biale_b >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wsp_x + 2) == ((biale_b >> ((l % 6) * 9)) & 0b111)) && ((((biale_b >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                        bb = bb + 1;
                                        System.out.println(l + "dupaA" + l + i);
                                    }
                                    if (((wsp_y - 2) == (((czarne_a >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wsp_x + 2) == ((czarne_a >> ((l % 6) * 9)) & 0b111)) && ((((czarne_a >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                        bb = bb + 1;
                                        System.out.println(l + "dupaB");
                                    }
                                    if (((wsp_y - 2) == (((czarne_b >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wsp_x + 2) == ((czarne_b >> ((l % 6) * 9)) & 0b111)) && ((((czarne_b >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                        bb = bb + 1;
                                        System.out.println(l + "dupaC");
                                    }
                                }

                                if (bb % 2 == 0 && ((wsp_x + 2 < 8) && (wsp_y - 2 > -1))) {
                                    System.out.println("Nalezy przesunac pion z pozycji" + " " + (((czarne_b >> ((i % 6) * 9)) & 0b111) + 1) + " " + "," + " " + ((((czarne_b >> ((i % 6) * 9)) >> 3) & 0b111) + 1));
                                    glo_bb = glo_bb + 2;
                                } else
                                    bb = 0;
                            }

                            if ((((((czarne_b >> ((i % 6) * 9)) >> 3) & 0b111) + 1) == (((biale_a >> ((j % 6) * 9)) >> 3) & 0b111)) && ((((czarne_b >> ((i % 6) * 9)) & 0b111) + 1) == ((biale_a >> ((j % 6) * 9)) & 0b111)) && ((((biale_a >> ((j % 6) * 9)) >> 8) & 0b1) == 1) && ((((czarne_b >> ((i % 6) * 9)) >> 8) & 0b1) == 1)) {
                                System.out.println("jest13");
                                bb = bb + 2;
                                for (int l = 0; l < 6; l++) {
                                    if (((wsp_y + 2) == (((biale_a >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wsp_x + 2) == ((biale_a >> ((l % 6) * 9)) & 0b111)) && ((((biale_a >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                        bb = bb + 1;
                                        System.out.println(l + "dupaX");
                                    }
                                    if (((wsp_y + 2) == (((biale_b >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wsp_x + 2) == ((biale_b >> ((l % 6) * 9)) & 0b111)) && ((((biale_b >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                        bb = bb + 1;
                                        System.out.println(l + "dupaA" + l + i);
                                    }
                                    if (((wsp_y + 2) == (((czarne_a >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wsp_x + 2) == ((czarne_a >> ((l % 6) * 9)) & 0b111)) && ((((czarne_a >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                        bb = bb + 1;
                                        System.out.println(l + "dupaB");
                                    }
                                    if (((wsp_y + 2) == (((czarne_b >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wsp_x + 2) == ((czarne_b >> ((l % 6) * 9)) & 0b111)) && ((((czarne_b >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                        bb = bb + 1;
                                        System.out.println(l + "dupaC");
                                    }
                                }

                                if (bb % 2 == 0 && ((wsp_x + 2 < 8) && (wsp_y + 2 < 8))) {
                                    System.out.println("Nalezy przesunac pion z pozycji" + " " + (((czarne_b >> ((i % 6) * 9)) & 0b111) + 1) + " " + "," + " " + ((((czarne_b >> ((i % 6) * 9)) >> 3) & 0b111) + 1));
                                    glo_bb = glo_bb + 2;
                                } else
                                    bb = 0;
                            }
                            //---------------------------------------------------------------------

                            if ((((((czarne_b >> ((i % 6) * 9)) >> 3) & 0b111) + 1) == (((biale_b >> ((j % 6) * 9)) >> 3) & 0b111)) && ((((czarne_b >> ((i % 6) * 9)) & 0b111) + 1) == ((biale_b >> ((j % 6) * 9)) & 0b111)) && ((((biale_b >> ((j % 6) * 9)) >> 8) & 0b1) == 1) && ((((czarne_b >> ((i % 6) * 9)) >> 8) & 0b1) == 1)) {
                                System.out.println("jest14");
                                bb = bb + 2;
                                for (int l = 0; l < 6; l++) {
                                    if (((wsp_y + 2) == (((biale_a >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wsp_x + 2) == ((biale_a >> ((l % 6) * 9)) & 0b111)) && ((((biale_a >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                        bb = bb + 1;
                                        System.out.println(l + "dupaX");
                                    }
                                    if (((wsp_y + 2) == (((biale_b >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wsp_x + 2) == ((biale_b >> ((l % 6) * 9)) & 0b111)) && ((((biale_b >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                        bb = bb + 1;
                                        System.out.println(l + "dupaA" + l + i);
                                    }
                                    if (((wsp_y + 2) == (((czarne_a >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wsp_x + 2) == ((czarne_a >> ((l % 6) * 9)) & 0b111)) && ((((czarne_a >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                        bb = bb + 1;
                                        System.out.println(l + "dupaB");
                                    }
                                    if (((wsp_y + 2) == (((czarne_b >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wsp_x + 2) == ((czarne_b >> ((l % 6) * 9)) & 0b111)) && ((((czarne_b >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                        bb = bb + 1;
                                        System.out.println(l + "dupaC");
                                    }
                                }

                                if (bb % 2 == 0 && ((wsp_x + 2 < 8) && (wsp_y + 2 < 8))) {
                                    System.out.println("Nalezy przesunac pion z pozycji" + " " + (((czarne_b >> ((i % 6) * 9)) & 0b111) + 1) + " " + "," + " " + ((((czarne_b >> ((i % 6) * 9)) >> 3) & 0b111) + 1));
                                    glo_bb = glo_bb + 2;
                                } else
                                    bb = 0;
                            }

                            if ((((((czarne_b >> ((i % 6) * 9)) >> 3) & 0b111) + 1) == (((biale_a >> ((j % 6) * 9)) >> 3) & 0b111)) && ((((czarne_b >> ((i % 6) * 9)) & 0b111) - 1) == ((biale_a >> ((j % 6) * 9)) & 0b111)) && ((((biale_a >> ((j % 6) * 9)) >> 8) & 0b1) == 1) && ((((czarne_b >> ((i % 6) * 9)) >> 8) & 0b1) == 1)) {
                                System.out.println("jest15");
                                bb = bb + 2;
                                for (int l = 0; l < 6; l++) {
                                    if (((wsp_y + 2) == (((biale_a >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wsp_x - 2) == ((biale_a >> ((l % 6) * 9)) & 0b111)) && ((((biale_a >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                        bb = bb + 1;
                                        System.out.println(l + "dupaX");
                                    }
                                    if (((wsp_y + 2) == (((biale_b >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wsp_x - 2) == ((biale_b >> ((l % 6) * 9)) & 0b111)) && ((((biale_b >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                        bb = bb + 1;
                                        System.out.println(l + "dupaA" + l + i);
                                    }
                                    if (((wsp_y + 2) == (((czarne_a >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wsp_x - 2) == ((czarne_a >> ((l % 6) * 9)) & 0b111)) && ((((czarne_a >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                        bb = bb + 1;
                                        System.out.println(l + "dupaB");
                                    }
                                    if (((wsp_y + 2) == (((czarne_b >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wsp_x - 2) == ((czarne_b >> ((l % 6) * 9)) & 0b111)) && ((((czarne_b >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                        bb = bb + 1;
                                        System.out.println(l + "dupaC");
                                    }
                                }

                                if (bb % 2 == 0 && ((wsp_x - 2 > -1) && (wsp_y + 2 < 8))) {
                                    System.out.println("Nalezy przesunac pion z pozycji" + " " + (((czarne_b >> ((i % 6) * 9)) & 0b111) + 1) + " " + "," + " " + ((((czarne_b >> ((i % 6) * 9)) >> 3) & 0b111) + 1));
                                    glo_bb = glo_bb + 2;
                                } else
                                    bb = 0;
                            }
                            //---------------------------------------------------------------------

                            if ((((((czarne_b >> ((i % 6) * 9)) >> 3) & 0b111) + 1) == (((biale_b >> ((j % 6) * 9)) >> 3) & 0b111)) && ((((czarne_b >> ((i % 6) * 9)) & 0b111) - 1) == ((biale_b >> ((j % 6) * 9)) & 0b111)) && ((((biale_b >> ((j % 6) * 9)) >> 8) & 0b1) == 1) && ((((czarne_b >> ((i % 6) * 9)) >> 8) & 0b1) == 1)) {
                                System.out.println("jest16");
                                bb = bb + 2;
                                for (int l = 0; l < 6; l++) {
                                    if (((wsp_y + 2) == (((biale_a >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wsp_x - 2) == ((biale_a >> ((l % 6) * 9)) & 0b111)) && ((((biale_a >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                        bb = bb + 1;
                                        System.out.println(l + "dupaX");
                                    }
                                    if (((wsp_y + 2) == (((biale_b >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wsp_x - 2) == ((biale_b >> ((l % 6) * 9)) & 0b111)) && ((((biale_b >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                        bb = bb + 1;
                                        System.out.println(l + "dupaA" + l + i);
                                    }
                                    if (((wsp_y + 2) == (((czarne_a >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wsp_x - 2) == ((czarne_a >> ((l % 6) * 9)) & 0b111)) && ((((czarne_a >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                        bb = bb + 1;
                                        System.out.println(l + "dupaB");
                                    }
                                    if (((wsp_y + 2) == (((czarne_b >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wsp_x - 2) == ((czarne_b >> ((l % 6) * 9)) & 0b111)) && ((((czarne_b >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                        bb = bb + 1;
                                        System.out.println(l + "dupaC");
                                    }
                                }

                                if (bb % 2 == 0 && ((wsp_x - 2 > -1) && (wsp_y + 2 < 8))) {
                                    System.out.println("Nalezy przesunac pion z pozycji" + " " + (((czarne_b >> ((i % 6) * 9)) & 0b111) + 1) + " " + "," + " " + ((((czarne_b >> ((i % 6) * 9)) >> 3) & 0b111) + 1));
                                    glo_bb = glo_bb + 2;
                                } else
                                    bb = 0;
                            }
                        }
                    }
                }
            }
            glo_bb=sprCdamki(biale_a,biale_b,czarne_a,czarne_b,glo_bb);
// sprawdzenie bicia czarnej DAMKI


            // spr bicia damki


            if ((glo_bb % 2 == 0) && (glo_bb != 0)) {

                do {
                    glo_bb = 0;
                    do {
                        do {
                            System.out.println("Podaj wspolrzedne figury, ktora ma byc przesunieta :");
                            System.out.println("Podaj wspolrzedna XXc: ");
                            wx = scan.nextInt();
                            wx = wx - 1;
                            if ((wx < 0) | (wx > 7))
                                System.out.println("Prosze podac prawidlowa wspolrzedna  XXc !");
                        }
                        while ((wx < 0) | (wx > 7));


                        do {
                            System.out.println("Podaj wspolrzedna YYc: ");
                            wy = scan.nextInt();
                            wy = wy - 1;
                            if ((wy < 0) | (wy > 7))
                                System.out.println("Prosze podac prawidlowa wspolrzedna  Y !");
                        }
                        while ((wy < 0) | (wy > 7));


                        do {
                            System.out.println("Podaj wspolrzedne, na ktore ma byc przesunieta figura.");
                            System.out.println("Podaj wspolrzedna XXc: ");
                            wdx = scan.nextInt();
                            wdx = wdx - 1;
                            if ((wdx < 0) | (wdx > 7))
                                System.out.println("Prosze podac prawidlowa wspolrzedna  X !");
                        }
                        while ((wdx < 0) | (wdx > 7));


                        do {
                            System.out.println("Podaj wspolrzedna YYc: ");
                            wdy = scan.nextInt();
                            wdy = wdy - 1;
                            if ((wdy < 0) | (wdy > 7))
                                System.out.println("Prosze podac prawidlowa wspolrzedna  Y !");
                        }
                        while ((wdy < 0) | (wdy > 7));

                        // Sprawdzenie czy wspolrzedne docelowe sa wolne

                        x = 0;

                        for (int i = 0; i < 6; i++) {
                            if ((i / 6) < 1)
                                if (((((biale_a >> ((i % 6) * 9))) & 0b111) == wdx) && ((((biale_a >> ((i % 6) * 9)) >> 3) & 0b111) == wdy) && ((((biale_a >> ((i % 6) * 9)) >> 8) & 0b1) == 1))
                                    x = 6;
                            if ((i / 6) < 1)
                                if (((((biale_b >> ((i % 6) * 9))) & 0b111) == wdx) && ((((biale_b >> ((i % 6) * 9)) >> 3) & 0b111) == wdy) && ((((biale_b >> ((i % 6) * 9)) >> 8) & 0b1) == 1))
                                    x = 6;

                            if ((i / 6) < 1)
                                if (((((czarne_a >> ((i % 6) * 9))) & 0b111) == wdx) && ((((czarne_a >> ((i % 6) * 9)) >> 3) & 0b111) == wdy) && ((((czarne_a >> ((i % 6) * 9)) >> 8) & 0b1) == 1))
                                    x = 6;
                            if ((i / 6) < 1)
                                if (((((czarne_b >> ((i % 6) * 9))) & 0b111) == wdx) && ((((czarne_b >> ((i % 6) * 9)) >> 3) & 0b111) == wdy) && ((((czarne_b >> ((i % 6) * 9)) >> 8) & 0b1) == 1))
                                    x = 6;
                        }

                        if (x == 6)
                            System.out.print("pole zajete ");

                    }
//  Trzeba zrobic jesli nie ma mozliwosci ruchu to koniec gry

                    while (x == 6);

                    int z=0;

                    for (int i = 0; i < 12; i++) {
                        if ((i / 6) < 1)
                            if (((((czarne_a >> ((i % 6) * 9))) & 0b111) == wx) && ((((czarne_a >> ((i % 6) * 9)) >> 3) & 0b111) == wy) && ((((czarne_a >> ((i % 6) * 9)) >> 7) & 0b11) == 0b010))
                                z = 6;
                        if (((((czarne_a >> ((i % 6) * 9))) & 0b111) == wx) && ((((czarne_a >> ((i % 6) * 9)) >> 3) & 0b111) == wy) && ((((czarne_a >> ((i % 6) * 9)) >> 7) & 0b11) == 0b011))
                            z=0;
                        if ((i / 6) >=1)
                            if (((((czarne_b >> ((i % 6) * 9))) & 0b111) == wx) && ((((czarne_b >> ((i % 6) * 9)) >> 3) & 0b111) == wy) && ((((czarne_b >> ((i % 6) * 9)) >> 7) & 0b11) == 0b10))
                                z = 6;
                        if (((((czarne_b >> ((i % 6) * 9))) & 0b111) == wx) && ((((czarne_b >> ((i % 6) * 9)) >> 3) & 0b111) == wy) && ((((czarne_b >> ((i % 6) * 9)) >> 7) & 0b11) == 0b11))
                            z=0;
                    }

                    System.out.println();
if (z==6){
                    // tu kasowanie przeciwnika......

                    if ((wx < wdx) && (wy < wdy)) {
                        for (int i = 0; i < 6; i++) {

                            if ((i / 6) < 1)
                                if (((((biale_a >> ((i % 6) * 9))) & 0b111000) == (wy + 1) << 3) && (((biale_a >> ((i % 6) * 9)) & 0b111) == wx + 1)) {
                                    biale_a = biale_a & (~(0b100_000_000L << ((i % 9) * 9)));
                                    //biale_a = biale_a | (0b0 << ((i % 8) * 9));
                                } else if (((((biale_b >> ((i % 6) * 9))) & 0b111000) == (wy + 1) << 3) && (((biale_b >> ((i % 6) * 9)) & 0b111) == wx + 1)) {
                                    biale_b = biale_b & (~(0b100_000_000L << ((i % 9) * 9)));
                                    //biale_b = biale_b | (0b0 << ((i % 8) * 9));
                                }
                        }
                    }
                    if ((wx < wdx) && (wy > wdy)) {
                        for (int i = 0; i < 6; i++) {

                            if ((i / 6) < 1)
                                if (((((biale_a >> ((i % 6) * 9))) & 0b111000) == (wy - 1) << 3) && (((biale_a >> ((i % 6) * 9)) & 0b111) == wx + 1)) {
                                    biale_a = biale_a & (~(0b100_000_000L << ((i % 9) * 9)));
                                    //biale_a = biale_a | (0b0 << ((i % 8) * 9));
                                } else if (((((biale_b >> ((i % 6) * 9))) & 0b111000) == (wy - 1) << 3) && (((biale_b >> ((i % 6) * 9)) & 0b111) == wx + 1)) {
                                    biale_b = biale_b & (~(0b100_000_000L << ((i % 9) * 9)));
                                    //biale_b = biale_b | (0b0 << ((i % 8) * 9));
                                }
                        }
                    }
                    if ((wx > wdx) && (wy < wdy)) {
                        for (int i = 0; i < 6; i++) {

                            if ((i / 6) < 1)
                                if (((((biale_a >> ((i % 6) * 9))) & 0b111000) == (wy + 1) << 3) && (((biale_a >> ((i % 6) * 9)) & 0b111) == wx - 1)) {
                                    biale_a = biale_a & (~(0b100_000_000L << ((i % 9) * 9)));
                                } else if (((((biale_b >> ((i % 6) * 9))) & 0b111000) == (wy + 1) << 3) && (((biale_b >> ((i % 6) * 9)) & 0b111) == wx - 1)) {
                                    biale_b = biale_b & (~(0b100_000_000L << ((i % 9) * 9)));

                                }
                        }
                    }
                    if ((wx > wdx) && (wy > wdy)) {
                        for (int i = 0; i < 6; i++) {

                            if ((i / 6) < 1)
                                if (((((biale_a >> ((i % 6) * 9))) & 0b111000) == (wy - 1) << 3) && (((biale_a >> ((i % 6) * 9)) & 0b111) == wx - 1)) {
                                    biale_a = biale_a & (~(0b100_000_000L << ((i % 9) * 9)));
                                } else if (((((biale_b >> ((i % 6) * 9))) & 0b111000) == (wy - 1) << 3) && (((biale_b >> ((i % 6) * 9)) & 0b111) == wx - 1)) {
                                    biale_b = biale_b & (~(0b100_000_000L << ((i % 9) * 9)));
                                }
                        }
                    }}
if (z==0){

    if ((wx < wdx) && (wy < wdy)) {
        for (int i = 0; i < 6; i++) {

            if ((i / 6) < 1)
                if (((((biale_a >> ((i % 6) * 9))) & 0b111000) == (wdy - 1) << 3) && (((biale_a >> ((i % 6) * 9)) & 0b111) == wdx - 1)) {
                    biale_a = biale_a & (~(0b100_000_000L << ((i % 9) * 9)));
                } else if (((((biale_b >> ((i % 6) * 9))) & 0b111000) == (wdy - 1) << 3) && (((biale_b >> ((i % 6) * 9)) & 0b111) == wdx - 1)) {
                    biale_b = biale_b & (~(0b100_000_000L << ((i % 9) * 9)));
                }
        }
    }
    if ((wx < wdx) && (wy > wdy)) {
        for (int i = 0; i < 6; i++) {

            if ((i / 6) < 1)
                if (((((biale_a >> ((i % 6) * 9))) & 0b111000) == (wdy + 1) << 3) && (((biale_a >> ((i % 6) * 9)) & 0b111) == wdx - 1)) {
                    biale_a = biale_a & (~(0b100_000_000L << ((i % 9) * 9)));
                } else if (((((biale_b >> ((i % 6) * 9))) & 0b111000) == (wdy + 1) << 3) && (((biale_b >> ((i % 6) * 9)) & 0b111) == wdx - 1)) {
                    biale_b = biale_b & (~(0b100_000_000L << ((i % 9) * 9)));
                }
        }
    }
    if ((wx > wdx) && (wy < wdy)) {
        for (int i = 0; i < 6; i++) {

            if ((i / 6) < 1)
                if (((((biale_a >> ((i % 6) * 9))) & 0b111000) == (wdy - 1) << 3) && (((biale_a >> ((i % 6) * 9)) & 0b111) == wdx + 1)) {
                    biale_a = biale_a & (~(0b100_000_000L << ((i % 9) * 9)));
                } else if (((((biale_b >> ((i % 6) * 9))) & 0b111000) == (wdy - 1) << 3) && (((biale_b >> ((i % 6) * 9)) & 0b111) == wdx + 1)) {
                    biale_b = biale_b & (~(0b100_000_000L << ((i % 9) * 9)));

                }
        }
    }
    if ((wx > wdx) && (wy > wdy)) {
        for (int i = 0; i < 6; i++) {

            if ((i / 6) < 1)
                if (((((biale_a >> ((i % 6) * 9))) & 0b111000) == (wdy + 1) << 3) && (((biale_a >> ((i % 6) * 9)) & 0b111) == wdx + 1)) {
                    biale_a = biale_a & (~(0b100_000_000L << ((i % 9) * 9)));
                } else if (((((biale_b >> ((i % 6) * 9))) & 0b111000) == (wdy + 1) << 3) && (((biale_b >> ((i % 6) * 9)) & 0b111) == wdx + 1)) {
                    biale_b = biale_b & (~(0b100_000_000L << ((i % 9) * 9)));
                }
        }
    }}


                    //......kasowanie przeciwnika

                    noweWspol = (wdy << 3 | wdx);
                    System.out.println(biale_a);
                    for (int i = 0; i < 6; i++) {

                        if ((i / 6) < 1)
                            if (((((czarne_a >> ((i % 6) * 9))) & 0b111000) == wy << 3) && (((czarne_a >> ((i % 6) * 9)) & 0b111) == wx)) {
                                czarne_a = czarne_a & (~(0b111111L << ((i % 6) * 9)));
                                czarne_a = czarne_a | (noweWspol << ((i % 6) * 9));
                            } else if (((((czarne_b >> ((i % 6) * 9))) & 0b111000) == wy << 3) && (((czarne_b >> ((i % 6) * 9)) & 0b111) == wx)) {
                                czarne_b = czarne_b & (~(0b111111L << ((i % 6) * 9)));
                                czarne_b = czarne_b | (noweWspol << ((i % 6) * 9));
                            }
                    }
//kasowanie piona przeciwnika !!!!

                    //  Ponowne sprawdzenie czy nie ma bicia   !!! ale figury ktora zostala przesunieta !!!
//;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

                    bb = 0;
                    for (int i = 0; i < 12; i++) {


                        if ((i / 6) < 1) {


                            if ((wdy - 1 == (((biale_a >> ((i % 6) * 9)) >> 3) & 0b111)) && (wdx - 1 == ((biale_a >> ((i % 6) * 9)) & 0b111)) && ((((biale_a >> ((i % 6) * 9)) >> 8) & 0b1) == 1)) {
                                System.out.println("jest1s");
                                bb = bb + 2;

                                for (int l = 0; l < 6; l++) {
                                    if (((wdy - 2) == (((biale_a >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wdx - 2) == ((biale_a >> ((l % 6) * 9)) & 0b111)) && ((((biale_a >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                        bb = bb + 1;
                                        System.out.println(l + "dupaX");
                                    }
                                    if (((wdy - 2) == (((biale_b >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wdx - 2) == ((biale_b >> ((l % 6) * 9)) & 0b111)) && ((((biale_b >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                        bb = bb + 1;
                                        System.out.println(l + "dupaA" + l + i);
                                    }
                                    if (((wdy - 2) == (((czarne_a >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wdx - 2) == ((czarne_a >> ((l % 6) * 9)) & 0b111)) && ((((czarne_a >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                        bb = bb + 1;
                                        System.out.println(l + "dupaB");
                                    }
                                    if (((wdy - 2) == (((czarne_b >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wdx - 2) == ((czarne_b >> ((l % 6) * 9)) & 0b111)) && ((((czarne_b >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                        bb = bb + 1;
                                        System.out.println(l + "dupaC");
                                    }
                                }

                                if ((bb % 2) == 0 && ((wdx - 2 > -1) && (wdy - 2 > -1))) {
                                    System.out.println("Nalezy przesunac pion z pozycji" + " " + (wdx + 1) + " " + "," + " " + (wdy + 1));
                                    glo_bb = glo_bb + 2;
                                } else
                                    bb = 0;


                            }
                            //---------------------------------------------------------------------

                            if ((wdy - 1 == (((biale_a >> ((i % 6) * 9)) >> 3) & 0b111)) && (wdx + 1 == ((biale_a >> ((i % 6) * 9)) & 0b111)) && ((((biale_a >> ((i % 6) * 9)) >> 8) & 0b1) == 1)) {
                                System.out.println("jest2s");
                                bb = bb + 2;
                                for (int l = 0; l < 6; l++) {
                                    if (((wdy - 2) == (((biale_a >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wdx + 2) == ((biale_a >> ((l % 6) * 9)) & 0b111)) && ((((biale_a >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                        bb = bb + 1;
                                        System.out.println(l + "dupaX");
                                    }
                                    if (((wdy - 2) == (((biale_b >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wdx + 2) == ((biale_b >> ((l % 6) * 9)) & 0b111)) && ((((biale_b >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                        bb = bb + 1;
                                        System.out.println(l + "dupaA" + l + i);
                                    }
                                    if (((wdy - 2) == (((czarne_a >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wdx + 2) == ((czarne_a >> ((l % 6) * 9)) & 0b111)) && ((((czarne_a >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                        bb = bb + 1;
                                        System.out.println(l + "dupaB");
                                    }
                                    if (((wdy - 2) == (((czarne_b >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wdx + 2) == ((czarne_b >> ((l % 6) * 9)) & 0b111)) && ((((czarne_b >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                        bb = bb + 1;
                                        System.out.println(l + "dupaC");
                                    }

                                }

                                if ((bb % 2) == 0 && ((wdx + 2 < 8) && (wdy - 2 > -1))) {
                                    System.out.println("Nalezy przesunac pion z pozycji" + " " + (wdx + 1) + " " + "," + " " + (wdy + 1));
                                    glo_bb = glo_bb + 2;
                                } else
                                    bb = 0;
                            }


                            //...=====================================================================================================================
                            if ((wdy + 1 == (((biale_a >> ((i % 6) * 9)) >> 3) & 0b111)) && (wdx - 1 == ((biale_a >> ((i % 6) * 9)) & 0b111)) && ((((biale_a >> ((i % 6) * 9)) >> 8) & 0b1) == 1)) {

                                System.out.println("jest003s");
                                bb = bb + 2;
                                for (int l = 0; l < 6; l++) {
                                    if (((wdy + 2) == (((biale_a >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wdx - 2) == ((biale_a >> ((l % 6) * 9)) & 0b111)) && ((((biale_a >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                        bb = bb + 1;
                                        System.out.println(l + "dupaX");
                                    }
                                    if (((wdy + 2) == (((biale_b >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wdx - 2) == ((biale_b >> ((l % 6) * 9)) & 0b111)) && ((((biale_b >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                        bb = bb + 1;
                                        System.out.println(l + "dupaA" + l + i);
                                    }
                                    if (((wdy + 2) == (((czarne_a >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wdx - 2) == ((czarne_a >> ((l % 6) * 9)) & 0b111)) && ((((czarne_a >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                        bb = bb + 1;
                                        System.out.println(l + "dupaB");
                                    }
                                    if (((wdy + 2) == (((czarne_b >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wdx - 2) == ((czarne_b >> ((l % 6) * 9)) & 0b111)) && ((((czarne_b >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                        bb = bb + 1;
                                        System.out.println(l + "dupaC");
                                    }

                                }

                                if ((bb % 2) == 0 && ((wdx - 2 < -1) && (wdy + 2 < 8))) {
                                    System.out.println("Nalezy przesunac pion z pozycji" + " " + (wdx + 1) + " " + "," + " " + (wdy + 1));
                                    glo_bb = glo_bb + 2;
                                } else
                                    bb = 0;
                            }

//----------------------------------------------------------------------------------------------------------------------------------------
                            if ((wdy + 1 == (((biale_a >> ((i % 6) * 9)) >> 3) & 0b111)) && (wdx + 1 == ((biale_a >> ((i % 6) * 9)) & 0b111)) && ((((biale_a >> ((i % 6) * 9)) >> 8) & 0b1) == 1)) {
                                System.out.println("jest  4s");
                                bb = bb + 2;
                                for (int l = 0; l < 6; l++) {
                                    if (((wdy + 2) == (((biale_a >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wdx + 2) == ((biale_a >> ((l % 6) * 9)) & 0b111)) && ((((biale_a >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                        bb = bb + 1;
                                        System.out.println(l + "dupaX");
                                    }
                                    if (((wdy + 2) == (((biale_b >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wdx + 2) == ((biale_b >> ((l % 6) * 9)) & 0b111)) && ((((biale_b >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                        bb = bb + 1;
                                        System.out.println(l + "dupaA" + l + i);
                                    }
                                    if (((wdy + 2) == (((czarne_a >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wdx + 2) == ((czarne_a >> ((l % 6) * 9)) & 0b111)) && ((((czarne_a >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                        bb = bb + 1;
                                        System.out.println(l + "dupaB");
                                    }
                                    if (((wdy + 2) == (((czarne_b >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wdx + 2) == ((czarne_b >> ((l % 6) * 9)) & 0b111)) && ((((czarne_b >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                        bb = bb + 1;
                                        System.out.println(l + "dupaC");
                                    }
                                }

                                if ((bb % 2) == 0 && ((wdx + 2 < 8) && (wdy + 2 < 8))) {
                                    System.out.println("Nalezy przesunac pion z pozycji" + " " + (wdx + 1) + " " + "," + " " + (wdy + 1));
                                    glo_bb = glo_bb + 2;
                                } else
                                    bb = 0;
                            }


                        } else {
                            if ((wdy - 1 == (((biale_b >> ((i % 6) * 9)) >> 3) & 0b111)) && (wdx - 1 == ((biale_b >> ((i % 6) * 9)) & 0b111)) && ((((biale_b >> ((i % 6) * 9)) >> 8) & 0b1) == 1)) {
                                System.out.println("jest1sb");
                                bb = bb + 2;

                                for (int l = 0; l < 6; l++) {
                                    if (((wdy - 2) == (((biale_a >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wdx - 2) == ((biale_a >> ((l % 6) * 9)) & 0b111)) && ((((biale_a >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                        bb = bb + 1;
                                        System.out.println(l + "dupaX");
                                    }
                                    if (((wdy - 2) == (((biale_b >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wdx - 2) == ((biale_b >> ((l % 6) * 9)) & 0b111)) && ((((biale_b >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                        bb = bb + 1;
                                        System.out.println(l + "dupaA" + l + i);
                                    }
                                    if (((wdy - 2) == (((czarne_a >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wdx - 2) == ((czarne_a >> ((l % 6) * 9)) & 0b111)) && ((((czarne_a >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                        bb = bb + 1;
                                        System.out.println(l + "dupaB");
                                    }
                                    if (((wdy - 2) == (((czarne_b >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wdx - 2) == ((czarne_b >> ((l % 6) * 9)) & 0b111)) && ((((czarne_b >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                        bb = bb + 1;
                                        System.out.println(l + "dupaC");
                                    }
                                }

                                if ((bb % 2) == 0 && ((wdx - 2 > -1) && (wdy - 2 > -1))) {
                                    System.out.println("Nalezy przesunac pion z pozycji" + " " + (wdx + 1) + " " + "," + " " + (wdy + 1));
                                    glo_bb = glo_bb + 2;
                                } else
                                    bb = 0;


                            }
                            //---------------------------------------------------------------------

                            if ((wdy - 1 == (((biale_b >> ((i % 6) * 9)) >> 3) & 0b111)) && (wdx + 1 == ((biale_b >> ((i % 6) * 9)) & 0b111)) && ((((biale_b >> ((i % 6) * 9)) >> 8) & 0b1) == 1)) {
                                System.out.println("jest2sb");
                                bb = bb + 2;
                                for (int l = 0; l < 6; l++) {
                                    if (((wdy - 2) == (((biale_a >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wdx + 2) == ((biale_a >> ((l % 6) * 9)) & 0b111)) && ((((biale_a >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                        bb = bb + 1;
                                        System.out.println(l + "dupaX");
                                    }
                                    if (((wdy - 2) == (((biale_b >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wdx + 2) == ((biale_b >> ((l % 6) * 9)) & 0b111)) && ((((biale_b >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                        bb = bb + 1;
                                        System.out.println(l + "dupaA" + l + i);
                                    }
                                    if (((wdy - 2) == (((czarne_a >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wdx + 2) == ((czarne_a >> ((l % 6) * 9)) & 0b111)) && ((((czarne_a >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                        bb = bb + 1;
                                        System.out.println(l + "dupaB");
                                    }
                                    if (((wdy - 2) == (((czarne_b >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wdx + 2) == ((czarne_b >> ((l % 6) * 9)) & 0b111)) && ((((czarne_b >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                        bb = bb + 1;
                                        System.out.println(l + "dupaC");
                                    }

                                }

                                if ((bb % 2) == 0 && ((wdx + 2 < 8) && (wdy - 2 > -1))) {
                                    System.out.println("Nalezy przesunac pion z pozycji" + " " + (wdx + 1) + " " + "," + " " + (wdy + 1));
                                    glo_bb = glo_bb + 2;
                                } else
                                    bb = 0;
                            }


                            //...=====================================================================================================================
                            if ((wdy + 1 == (((biale_b >> ((i % 6) * 9)) >> 3) & 0b111)) && (wdx - 1 == ((biale_b >> ((i % 6) * 9)) & 0b111)) && ((((biale_b >> ((i % 6) * 9)) >> 8) & 0b1) == 1)) {

                                System.out.println("jest003sb");
                                bb = bb + 2;
                                for (int l = 0; l < 6; l++) {
                                    if (((wdy + 2) == (((biale_a >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wdx - 2) == ((biale_a >> ((l % 6) * 9)) & 0b111)) && ((((biale_a >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                        bb = bb + 1;
                                        System.out.println(l + "dupaX");
                                    }
                                    if (((wdy + 2) == (((biale_b >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wdx - 2) == ((biale_b >> ((l % 6) * 9)) & 0b111)) && ((((biale_b >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                        bb = bb + 1;
                                        System.out.println(l + "dupaA" + l + i);
                                    }
                                    if (((wdy + 2) == (((czarne_a >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wdx - 2) == ((czarne_a >> ((l % 6) * 9)) & 0b111)) && ((((czarne_a >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                        bb = bb + 1;
                                        System.out.println(l + "dupaB");
                                    }
                                    if (((wdy + 2) == (((czarne_b >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wdx - 2) == ((czarne_b >> ((l % 6) * 9)) & 0b111)) && ((((czarne_b >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                        bb = bb + 1;
                                        System.out.println(l + "dupaC");
                                    }

                                }

                                if ((bb % 2) == 0 && ((wdx - 2 > -1) && (wdy + 2 < 8))) {
                                    System.out.println("Nalezy przesunac pion z pozycji" + " " + (wdx + 1) + " " + "," + " " + (wdy + 1));
                                    glo_bb = glo_bb + 2;
                                } else
                                    bb = 0;
                            }

//----------------------------------------------------------------------------------------------------------------------------------------
                            if ((wdy + 1 == (((biale_b >> ((i % 6) * 9)) >> 3) & 0b111)) && (wdx + 1 == ((biale_b >> ((i % 6) * 9)) & 0b111)) && ((((biale_b >> ((i % 6) * 9)) >> 8) & 0b1) == 1)) {
                                System.out.println("jest  4sb");
                                bb = bb + 2;
                                for (int l = 0; l < 6; l++) {
                                    if (((wdy + 2) == (((biale_a >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wdx + 2) == ((biale_a >> ((l % 6) * 9)) & 0b111)) && ((((biale_a >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                        bb = bb + 1;
                                        System.out.println(l + "dupaX");
                                    }
                                    if (((wdy + 2) == (((biale_b >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wdx + 2) == ((biale_b >> ((l % 6) * 9)) & 0b111)) && ((((biale_b >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                        bb = bb + 1;
                                        System.out.println(l + "dupaA" + l + i);
                                    }
                                    if (((wdy + 2) == (((czarne_a >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wdx + 2) == ((czarne_a >> ((l % 6) * 9)) & 0b111)) && ((((czarne_a >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                        bb = bb + 1;
                                        System.out.println(l + "dupaB");
                                    }
                                    if (((wdy + 2) == (((czarne_b >> ((l % 6) * 9)) >> 3) & 0b111)) && ((wdx + 2) == ((czarne_b >> ((l % 6) * 9)) & 0b111)) && ((((czarne_b >> ((l % 6) * 9)) >> 8) & 0b1) == 1)) {
                                        bb = bb + 1;
                                        System.out.println(l + "dupaC");
                                    }
                                }

                                if ((bb % 2) == 0 && ((wdx + 2 < 8) && (wdy + 2 < 8))) {
                                    System.out.println("Nalezy przesunac pion z pozycji" + " " + (wdx + 1) + " " + "," + " " + (wdy + 1));
                                    glo_bb = glo_bb + 2;
                                } else
                                    bb = 0;
                            }
                        }

                    }
                    //  wyswietlenie planszy

                    System.out.println(" mamy dalej bicie ");
                    System.out.println();
                    System.out.println();

                    plansza(biale_a,biale_b,czarne_a,czarne_b);

                    System.out.println();
                    System.out.println(glo_bb + "tTTTTT");
                } while (glo_bb > 0);
                //::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::


            } else {
//=====================================================================================================================================================================
                // wprowadzanie danych   po switch czy gramy


                do {
                    do {
                        System.out.println("Podaj wspolrzedne figury, ktora ma byc przesunieta :");
                        System.out.println("Podaj wspolrzedna X: ");
                        wx = scan.nextInt();
                        wx = wx - 1;
                        if ((wx < 0) | (wx > 7))
                            System.out.println("Prosze podac prawidlowa wspolrzedna  X !");
                    }
                    while ((wx < 0) | (wx > 7));


                    do {
                        System.out.println("Podaj wspolrzedna Y: ");
                        wy = scan.nextInt();
                        wy = wy - 1;
                        if ((wy < 0) | (wy > 7))
                            System.out.println("Prosze podac prawidlowa wspolrzedna  Y !");
                    }
                    while ((wy < 0) | (wy > 7));

                    //    sprawdza czy poprawne wspolrzedne piona startowego


                    for (int i = 0; i < 12; i++) {

                        if ((i / 6) < 1) {
                            if (((((czarne_a >> ((i % 6) * 9))) & 0b111) == wx) & ((((czarne_a >> ((i % 6) * 9)) >> 3) & 0b111) == wy)) {
                                x = 1;
                                System.out.println("Wspolrzedne prawidlowe");
                            }

                        } else {
                            if (((((czarne_b >> ((i % 6) * 9))) & 0b111) == wx) & ((((czarne_b >> ((i % 6) * 9)) >> 3) & 0b111) == wy)) {
                                x = 1;
                                System.out.println("Wspolrzedne prawidlowe");
                            }
                        }

                    }

                    if (x == 0)
                        System.out.println("Wspolrzedne nieprawidlowe. Powtorz !");
                    System.out.println();
                }
                while (x == 0);
                System.out.println();

                //  Wprowadzenie wspolrzednych docelowych
                do {

                    do {
                        System.out.println("Podaj wspolrzedne, na ktore ma byc przesunieta figura.");
                        System.out.println("Podaj wspolrzedna X: ");
                        wdx = scan.nextInt();
                        wdx = wdx - 1;
                        if ((wdx < 0) | (wdx > 7))
                            System.out.println("Prosze podac prawidlowa wspolrzedna  X !");
                    }
                    while ((wdx < 0) | (wdx > 7));


                    do {
                        System.out.println("Podaj wspolrzedna Y: ");
                        wdy = scan.nextInt();
                        wdy = wdy - 1;


                        if ((wdy < 0) | (wdy > 7))

                            System.out.println("Prosze podac prawidlowa wspolrzedna  Y !");

                        // blokuje ruch piona do tylu

                        for (int i = 0; i < 12; i++) {
                            if ((i / 6) < 1)  // czy zero czy jedynka

                            {
                                if ((((czarne_a >> ((i % 6) * 9)) >> 7) & 0b1) == 0)
                                    if (wdy <= wy)
                                        System.out.println("Prosze podac prawidlowa wspolrzedna  Y ruch nie w ta strone!");


                                    else if ((((czarne_b >> ((i % 6) * 9)) >> 7) & 0b1) == 0)
                                        if (wdy <= wy)
                                            System.out.println("Prosze podac prawidlowa wspolrzedna  Y ruch nie w ta strone!");

                            }
                        }
                        if (wdy <= wy)
                            System.out.println("Prosze podac prawidlowa wspolrzedna  Y !");
                    }
                    while (((wdy < 0) | (wdy > 7)) | (wdy <= wy));


                    System.out.println();

                    // Sprawdzenie czy wspolrzedne docelowe sa wolne

                    x = 0;

                    for (int i = 0; i < 6; i++) {
                        if ((i / 6) < 1)
                            if (((((czarne_a >> ((i % 6) * 9))) & 0b111) == wdx) && ((((czarne_a >> ((i % 6) * 9)) >> 3) & 0b111) == wdy) && ((((czarne_a >> ((i % 6) * 9)) >> 8) & 0b1) == 1))
                                x = 6;
                        if ((i / 6) < 1)
                            if (((((czarne_b >> ((i % 6) * 9))) & 0b111) == wdx) && ((((czarne_b >> ((i % 6) * 9)) >> 3) & 0b111) == wdy) && ((((czarne_b >> ((i % 6) * 9)) >> 8) & 0b1) == 1))
                                x = 6;

                        if ((i / 6) < 1)
                            if (((((biale_a >> ((i % 6) * 9))) & 0b111) == wdx) && ((((biale_a >> ((i % 6) * 9)) >> 3) & 0b111) == wdy) && ((((biale_a >> ((i % 6) * 9)) >> 8) & 0b1) == 1))
                                x = 6;
                        if ((i / 6) < 1)
                            if (((((biale_b >> ((i % 6) * 9))) & 0b111) == wdx) && ((((biale_b >> ((i % 6) * 9)) >> 3) & 0b111) == wdy) && ((((biale_b >> ((i % 6) * 9)) >> 8) & 0b1) == 1))
                                x = 6;
                    }

                    if (x == 6)
                        System.out.print("pole zajete ");

                }
//  Trzeba zrobic jesli nie ma mozliwosci ruchu to koniec gry

                while (x == 6);

                System.out.println();


                //  przesuniecie i zapis nowej pozycji

                noweWspol = (wdy << 3 | wdx);
                System.out.println(biale_a);
                for (int i = 0; i < 6; i++) {

                    if ((i / 6) < 1)
                        if (((((czarne_a >> ((i % 6) * 9))) & 0b111000) == wy << 3) && (((czarne_a >> ((i % 6) * 9)) & 0b111) == wx)) {
                            czarne_a = czarne_a & (~(0b111111L << ((i % 6) * 9)));
                            czarne_a = czarne_a | (noweWspol << ((i % 6) * 9));
                        } else if (((((czarne_b >> ((i % 6) * 9))) & 0b111000) == wy << 3) && (((czarne_b >> ((i % 6) * 9)) & 0b111) == wx)) {
                            czarne_b = czarne_b & (~(0b111111L << ((i % 6) * 9)));
                            czarne_b = czarne_b | (noweWspol << ((i % 6) * 9));
                        }

                }

            }

            tworzenieDamki(czarne_a,czarne_b);




            //    wyswietlenie planszy

//__________________________________________________________________________________________________________________________________________________________
//                                         PLANSZA
            plansza(biale_a,biale_b,czarne_a,czarne_b);

        } while (gra == 1);



}}